// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using aditaas_v5.Models;

namespace aditaas_v5.Migrations
{
    [DbContext(typeof(aditaas_v5Context))]
    partial class aditaas_v5ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence("bot_master_menu_seq");

            modelBuilder.HasSequence("bot_master_profile_seq");

            modelBuilder.HasSequence("bot_message_details_seq");

            modelBuilder.HasSequence("bot_message_seq");

            modelBuilder.HasSequence("bot_profile_detail_seq");

            modelBuilder.HasSequence("bot_system_configuration_seq");

            modelBuilder.HasSequence("bot_system_reports_setting_seq");

            modelBuilder.HasSequence("bot_user_details_seq");

            modelBuilder.HasSequence("bot_user_login_seq");

            modelBuilder.HasSequence("hibernate_sequence")
                .IncrementsBy(50);

            modelBuilder.HasSequence("tbl_autodisc_mac_info_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_autodisc_mst_discovery_ip_address_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_autodisc_mst_discovery_rule_action_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_autodisc_mst_discovery_rule_condition_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_autodisc_mst_discovery_rule_discovery_rule_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_autodisc_mst_mib_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_autodisc_trn_discovery_detail_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_autodisc_trn_discovery_discovery_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cha_user_session_user_session_id_seq");

            modelBuilder.HasSequence("tbl_cmdb_disc_mst_credential_credential_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cmdb_disc_mst_credential_type_credential_type_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cmdb_disc_mst_discovery_discovery_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cmdb_disc_mst_discovery_schedule_schedule_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cmdb_mst_software_software_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cmdb_trn_software_ci_map_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cnf_config_item_mst_config_item_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cnf_data_archive_archive_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cnf_data_archive_cond_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cnf_email_mgr_extract_field_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cnf_priority_user_map_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cnf_survey_cond_survey_cond_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cnf_survey_ques_survey_ques_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cnf_survey_survey_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cnf_template_queue_template_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cnf_template_tkt_approval_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_cnf_template_tkt_task_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_grid_state_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_action_menu_action_menu_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_activity_type_activity_type_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_cti_ent_mod_map_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_default_configuration_config_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_dept_entityattr_map_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_entityattr_org_map_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_flash_flash_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_ldapad_attr_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_ldapuser_attr_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_module_cust_field_role_mapper_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_module_cust_field_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_old_pwd_pid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_org_category_map_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_pwd_policy_pid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_role_action_right_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_survey_close_cond_survey_close_cond_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_survey_type_survey_type_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_ticket_id_format_ticket_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_wmi_ID_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_mst_work_hr_queue_map_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_rpt_widget_user_option_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_survey_mst_form_question_detail_detail_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_survey_mst_form_question_question_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_survey_mst_form_survey_form_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_survey_trn_ticket_question_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_survey_trn_ticket_survey_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_trn_activity_log_activity_log_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_trn_archive_log_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_trn_field_service_activity_log_activity_log_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_trn_field_service_attachment_attachment_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_trn_field_service_field_service_id1_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_trn_field_service_notes_log_notes_log_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_trn_interaction_activity_log_activity_log_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_trn_interaction_attachment_attachment_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_trn_interaction_interaction_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_trn_ldap_staging_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_trn_problem_mpr_mpr_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_trn_ticket_cust_field_detail_uid_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("tbl_trn_watch_list_watch_list_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("user_chat_message_seq");

            modelBuilder.HasSequence("user_chat_message_user_chat_message_id_seq");

            modelBuilder.HasSequence("user_chat_session_seq");

            modelBuilder.HasSequence("user_chat_session_user_chat_session_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("user_details_seq");

            modelBuilder.HasSequence("user_details_user_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("user_group_message_group_message_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("user_group_message_seq");

            modelBuilder.HasSequence("user_groups_details_seq");

            modelBuilder.HasSequence("user_groups_details_user_group_details_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("user_groups_group_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("user_groups_seq");

            modelBuilder.HasSequence("user_online_seq");

            modelBuilder.HasSequence("user_session_seq");

            modelBuilder.HasSequence("user_session_user_session_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("visitor_chat_message_seq");

            modelBuilder.HasSequence("visitor_chat_message_visitor_chat_message_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("visitor_chat_session_seq");

            modelBuilder.HasSequence("visitor_chat_session_visitor_chat_session_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("visitor_details_seq");

            modelBuilder.HasSequence("visitor_queue_seq");

            modelBuilder.HasSequence("visitor_queue_visitor_queue_id_seq")
                .HasMax(2147483647L);

            modelBuilder.HasSequence("visitor_session_seq");

            modelBuilder.HasSequence("visitor_session_visitor_session_id_seq")
                .HasMax(2147483647L);

            modelBuilder.Entity("aditaas_v5.Models.ArchCnfFollowUp", b =>
                {
                    b.Property<int>("FollowUpId")
                        .HasColumnType("int")
                        .HasColumnName("follow_up_id");

                    b.Property<int?>("AssetCiTypeId")
                        .HasColumnType("int")
                        .HasColumnName("asset_ci_type_id");

                    b.Property<DateTime?>("ExecutionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("execution_date");

                    b.Property<int?>("FollowUpTypeId")
                        .HasColumnType("int")
                        .HasColumnName("follow_up_type_id");

                    b.Property<bool?>("IsSendEmail")
                        .HasColumnType("bit")
                        .HasColumnName("is_send_email");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<DateTime?>("SchDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("sch_date_time");

                    b.Property<int?>("SetById")
                        .HasColumnType("int")
                        .HasColumnName("set_by_id");

                    b.Property<DateTime?>("SetOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("set_on");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("Subject")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("subject");

                    b.Property<string>("UserDefineUserIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_define_user_ids");

                    b.HasKey("FollowUpId")
                        .HasName("arch_cnf_follow_up_pkey");

                    b.ToTable("arch_cnf_follow_up");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnApprAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .HasColumnType("int")
                        .HasColumnName("attachment_id");

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("arch_trn_appr_attachment_pkey");

                    b.ToTable("arch_trn_appr_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnApproval", b =>
                {
                    b.Property<int>("ApprovalId")
                        .HasColumnType("int")
                        .HasColumnName("approval_id");

                    b.Property<string>("ActionedOn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("actioned_on");

                    b.Property<string>("ApprComment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("appr_comment");

                    b.Property<int?>("ApprQueueId")
                        .HasColumnType("int")
                        .HasColumnName("appr_queue_id");

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("approved_on");

                    b.Property<int?>("ApproverId")
                        .HasColumnType("int")
                        .HasColumnName("approver_id");

                    b.Property<int?>("AuthorizedById")
                        .HasColumnType("int")
                        .HasColumnName("authorized_by_id");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_number");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsFromWorkflow")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_workflow");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<int?>("RequesterId")
                        .HasColumnType("int")
                        .HasColumnName("requester_id");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("TypeEntId")
                        .HasColumnType("int")
                        .HasColumnName("type_ent_id");

                    b.HasKey("ApprovalId")
                        .HasName("arch_trn_approval_pkey");

                    b.ToTable("arch_trn_approval");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnIncActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id");

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("FieldsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fields_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int")
                        .HasColumnName("performed_by_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("ActivityLogId")
                        .HasName("arch_trn_inc_activity_log_pk");

                    b.ToTable("arch_trn_inc_activity_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnIncAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .HasColumnType("int")
                        .HasColumnName("attachment_id");

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("arch_trn_inc_attachment_pkey");

                    b.ToTable("arch_trn_inc_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnIncNotesLog", b =>
                {
                    b.Property<int>("NotesLogId")
                        .HasColumnType("int")
                        .HasColumnName("notes_log_id");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<string>("NoteType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note_type");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("NotesLogId")
                        .HasName("arch_pk_inc_notes_log");

                    b.ToTable("arch_trn_inc_notes_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnIncident", b =>
                {
                    b.Property<int>("IncidentId")
                        .HasColumnType("int")
                        .HasColumnName("incident_id");

                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<string>("AltContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alt_contact_no");

                    b.Property<int?>("AltLocationId")
                        .HasColumnType("int")
                        .HasColumnName("alt_location_id");

                    b.Property<string>("ApprovalType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("approval_type");

                    b.Property<DateTime?>("ArchiveOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("archive_on");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("CausedByEntId")
                        .HasColumnType("int")
                        .HasColumnName("caused_by_ent_id");

                    b.Property<int?>("ChannelEntId")
                        .HasColumnType("int")
                        .HasColumnName("channel_ent_id");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closed_on");

                    b.Property<bool?>("CommCall")
                        .HasColumnType("bit")
                        .HasColumnName("comm_call");

                    b.Property<bool?>("CommEmail")
                        .HasColumnType("bit")
                        .HasColumnName("comm_email");

                    b.Property<bool?>("CommSms")
                        .HasColumnType("bit")
                        .HasColumnName("comm_sms");

                    b.Property<int?>("CommonImpactEntId")
                        .HasColumnType("int")
                        .HasColumnName("common_impact_ent_id");

                    b.Property<int?>("ConfigCiId")
                        .HasColumnType("int")
                        .HasColumnName("config_ci_id");

                    b.Property<int?>("ConfigItemDbId")
                        .HasColumnType("int")
                        .HasColumnName("config_item_db_id");

                    b.Property<string>("ConfigItemId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("config_item_id");

                    b.Property<int?>("ConfigItemType")
                        .HasColumnType("int")
                        .HasColumnName("config_item_type");

                    b.Property<string>("ContactNo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contact_no");

                    b.Property<bool?>("CreateKbFlag")
                        .HasColumnType("bit")
                        .HasColumnName("create_kb_flag");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("CurrAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("curr_assign_queue_id");

                    b.Property<DateTime?>("Dateidentified")
                        .HasColumnType("datetime2")
                        .HasColumnName("dateidentified");

                    b.Property<DateTime?>("EmailResponseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("email_response_date");

                    b.Property<DateTime?>("EscalationTsDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("escalation_ts_date");

                    b.Property<int?>("FirstAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("first_assign_queue_id");

                    b.Property<DateTime?>("FirstResponseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("first_response_date");

                    b.Property<string>("Flags")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("flags");

                    b.Property<DateTime?>("FsCompletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fs_completed_date");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_number");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsAutoClosed")
                        .HasColumnType("bit")
                        .HasColumnName("is_auto_closed");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsParent")
                        .HasColumnType("bit")
                        .HasColumnName("is_parent");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<string>("LastNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_note");

                    b.Property<int?>("LastNotesAddedById")
                        .HasColumnType("int")
                        .HasColumnName("last_notes_added_by_id");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_notes_added_on");

                    b.Property<string>("LastPriInspection")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("last_pri_inspection");

                    b.Property<string>("LastPriReason")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("last_pri_reason");

                    b.Property<int?>("LastReopenedById")
                        .HasColumnType("int")
                        .HasColumnName("last_reopened_by_id");

                    b.Property<DateTime?>("LastReopenedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_reopened_on");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<DateTime?>("MisrouteTsDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("misroute_ts_date");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("NefcrDescEntId")
                        .HasColumnType("int")
                        .HasColumnName("nefcr_desc_ent_id");

                    b.Property<int?>("OnBehalfOfId")
                        .HasColumnType("int")
                        .HasColumnName("on_behalf_of_id");

                    b.Property<DateTime?>("OnSiteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("on_site_date");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("ParentIncidentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_incident_id");

                    b.Property<int?>("PrevAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("prev_assign_queue_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<int?>("ReopenCount")
                        .HasColumnType("int")
                        .HasColumnName("reopen_count");

                    b.Property<int?>("ResolutionCiId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_ci_id");

                    b.Property<string>("ResolutionComment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resolution_comment");

                    b.Property<int?>("ResolutionCriteriaEntId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_criteria_ent_id");

                    b.Property<int?>("ResolutionMethodEntId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_method_ent_id");

                    b.Property<int?>("ResolvedById")
                        .HasColumnType("int")
                        .HasColumnName("resolved_by_id");

                    b.Property<DateTime?>("ResolvedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolved_on");

                    b.Property<int?>("SeverityEntId")
                        .HasColumnType("int")
                        .HasColumnName("severity_ent_id");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("short_desc");

                    b.Property<DateTime?>("SiteVisitOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("site_visit_on");

                    b.Property<string>("SlaBreachReason")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("sla_breach_reason");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<DateTime?>("TargetResolveOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("target_resolve_on");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.Property<DateTime?>("TimeToDiagnosis")
                        .HasColumnType("datetime2")
                        .HasColumnName("time_to_diagnosis");

                    b.Property<DateTime?>("TimeToInvestigate")
                        .HasColumnType("datetime2")
                        .HasColumnName("time_to_investigate");

                    b.Property<int?>("TotDowntimeMin")
                        .HasColumnType("int")
                        .HasColumnName("tot_downtime_min");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("VendorTicketId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vendor_ticket_id");

                    b.Property<string>("WatchListJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("watch_list_json");

                    b.Property<string>("WhiteBoardNo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("white_board_no");

                    b.HasKey("IncidentId")
                        .HasName("arch_trn_incident_pkey");

                    b.ToTable("arch_trn_incident");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnPrActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id");

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("FieldsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fields_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int")
                        .HasColumnName("performed_by_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("ActivityLogId")
                        .HasName("arch_trn_pr_activity_log_pk");

                    b.ToTable("arch_trn_pr_activity_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnPrAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .HasColumnType("int")
                        .HasColumnName("attachment_id");

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("arch_trn_problem_attachment_pkey");

                    b.ToTable("arch_trn_pr_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnPrNotesLog", b =>
                {
                    b.Property<int>("NotesLogId")
                        .HasColumnType("int")
                        .HasColumnName("notes_log_id");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<string>("NoteType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note_type");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("NotesLogId")
                        .HasName("arch_pk_pr_notes_log");

                    b.ToTable("arch_trn_pr_notes_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnProblem", b =>
                {
                    b.Property<int>("ProblemId")
                        .HasColumnType("int")
                        .HasColumnName("problem_id");

                    b.Property<string>("AltContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alt_contact_no");

                    b.Property<int?>("AltLocationId")
                        .HasColumnType("int")
                        .HasColumnName("alt_location_id");

                    b.Property<DateTime?>("ArchiveOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("archive_on");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("CausedByEntId")
                        .HasColumnType("int")
                        .HasColumnName("caused_by_ent_id");

                    b.Property<int?>("ChannelEntId")
                        .HasColumnType("int")
                        .HasColumnName("channel_ent_id");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("close_date");

                    b.Property<int?>("ClosedById")
                        .HasColumnType("int")
                        .HasColumnName("closed_by_id");

                    b.Property<string>("ClosureDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("closure_desc");

                    b.Property<bool?>("CommCall")
                        .HasColumnType("bit")
                        .HasColumnName("comm_call");

                    b.Property<bool?>("CommEmail")
                        .HasColumnType("bit")
                        .HasColumnName("comm_email");

                    b.Property<bool?>("CommSms")
                        .HasColumnType("bit")
                        .HasColumnName("comm_sms");

                    b.Property<int?>("CommonImpactEntId")
                        .HasColumnType("int")
                        .HasColumnName("common_impact_ent_id");

                    b.Property<int?>("ConfigCiId")
                        .HasColumnType("int")
                        .HasColumnName("config_ci_id");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_no");

                    b.Property<bool?>("CreateKbFlag")
                        .HasColumnType("bit")
                        .HasColumnName("create_kb_flag");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("CurrAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("curr_assign_queue_id");

                    b.Property<DateTime?>("DateIdentified")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_identified");

                    b.Property<int?>("FirstAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("first_assign_queue_id");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_number");

                    b.Property<int?>("ImpactedCiId")
                        .HasColumnType("int")
                        .HasColumnName("impacted_ci_id");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsTested")
                        .HasColumnType("bit")
                        .HasColumnName("is_tested");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<DateTime?>("KnownerrDateIdentified")
                        .HasColumnType("datetime2")
                        .HasColumnName("knownerr_date_identified");

                    b.Property<int?>("KnownerrSrcEntId")
                        .HasColumnType("int")
                        .HasColumnName("knownerr_src_ent_id");

                    b.Property<string>("LastNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_note");

                    b.Property<int?>("LastNotesAddedById")
                        .HasColumnType("int")
                        .HasColumnName("last_notes_added_by_id");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_notes_added_on");

                    b.Property<string>("LastPriInspection")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("last_pri_inspection");

                    b.Property<string>("LastPriReason")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("last_pri_reason");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("PrevAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("prev_assign_queue_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<string>("ProblemDescription")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("problem_description");

                    b.Property<DateTime?>("RcaDateIdentified")
                        .HasColumnType("datetime2")
                        .HasColumnName("rca_date_identified");

                    b.Property<int?>("ResolutionCriteriaEntId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_criteria_ent_id");

                    b.Property<int?>("ResolutionMethodEntId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_method_ent_id");

                    b.Property<string>("RootCause")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("root_cause");

                    b.Property<int?>("SeverityEntId")
                        .HasColumnType("int")
                        .HasColumnName("severity_ent_id");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("short_desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<int?>("SymptomCodeEntId")
                        .HasColumnType("int")
                        .HasColumnName("symptom_code_ent_id");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("VendorTicketId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("vendor_ticket_id");

                    b.Property<string>("WatchListJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("watch_list_json");

                    b.Property<string>("Workaround")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("workaround");

                    b.HasKey("ProblemId")
                        .HasName("arch_trn_problem_pkey");

                    b.ToTable("arch_trn_problem");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnTask", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("task_id");

                    b.Property<int?>("ApprovalId")
                        .HasColumnType("int")
                        .HasColumnName("approval_id");

                    b.Property<DateTime?>("ArchiveOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("archive_on");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("ClosedById")
                        .HasColumnType("int")
                        .HasColumnName("closed_by_id");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closed_on");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comments");

                    b.Property<string>("CommentsHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comments_html");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("DueOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("due_on");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_number");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsFromWorkflow")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_workflow");

                    b.Property<string>("LastNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_note");

                    b.Property<int?>("LastNotesAddedById")
                        .HasColumnType("int")
                        .HasColumnName("last_notes_added_by_id");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_notes_added_on");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queue_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("TaskTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("task_title");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("WatchListJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("watch_list_json");

                    b.HasKey("TaskId")
                        .HasName("arch_trn_task_pkey");

                    b.ToTable("arch_trn_task");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnTaskActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id");

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("FieldsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fields_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int")
                        .HasColumnName("performed_by_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("ActivityLogId")
                        .HasName("arch_trn_task_activity_log_pk");

                    b.ToTable("arch_trn_task_activity_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnTaskAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .HasColumnType("int")
                        .HasColumnName("attachment_id");

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("arch_trn_task_attachment_pk");

                    b.ToTable("arch_trn_task_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnTaskNotesLog", b =>
                {
                    b.Property<int>("NotesLogId")
                        .HasColumnType("int")
                        .HasColumnName("notes_log_id");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<string>("NoteType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note_type");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("NotesLogId")
                        .HasName("arch_pk_task_notes_log");

                    b.ToTable("arch_trn_task_notes_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.ArchTrnTicketLink", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int")
                        .HasColumnName("link_id");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("RelationType")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("relation_type");

                    b.Property<int?>("SourceModuleId")
                        .HasColumnType("int")
                        .HasColumnName("source_module_id");

                    b.Property<int?>("SourceRecordId")
                        .HasColumnType("int")
                        .HasColumnName("source_record_id");

                    b.Property<int?>("TargetModuleId")
                        .HasColumnType("int")
                        .HasColumnName("target_module_id");

                    b.Property<int?>("TargetRecordId")
                        .HasColumnType("int")
                        .HasColumnName("target_record_id");

                    b.HasKey("LinkId")
                        .HasName("arch_trn_link_pkey");

                    b.ToTable("arch_trn_ticket_link");
                });

            modelBuilder.Entity("aditaas_v5.Models.BotMasterMenu", b =>
                {
                    b.Property<int>("MenuCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("menu_code")
                        .HasDefaultValueSql("(NEXT VALUE FOR [bot_master_menu_seq])");

                    b.Property<string>("MenuAltName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("menu_alt_name");

                    b.Property<string>("MenuImage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("menu_image");

                    b.Property<string>("MenuIsreleased")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("menu_isreleased")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("MenuLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("menu_link");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("menu_name");

                    b.Property<int?>("MenuParentId")
                        .HasColumnType("int")
                        .HasColumnName("menu_parent_id");

                    b.Property<string>("MenuPlaceinMenu")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("menu_placein_menu");

                    b.Property<string>("MenuProfileAccess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("menu_profile_access")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("MenuTaborder")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("menu_taborder");

                    b.Property<string>("MenuTarget")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("menu_target");

                    b.HasKey("MenuCode")
                        .HasName("bot_master_menu_pkey");

                    b.ToTable("bot_master_menu");
                });

            modelBuilder.Entity("aditaas_v5.Models.BotMasterProfile", b =>
                {
                    b.Property<int>("ProfileCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("profile_code")
                        .HasDefaultValueSql("(NEXT VALUE FOR [bot_master_profile_seq])");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("is_active")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("ProfileName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("profile_name");

                    b.HasKey("ProfileCode")
                        .HasName("bot_master_profile_pkey");

                    b.HasIndex(new[] { "ProfileName" }, "uc_profile_name")
                        .IsUnique()
                        .HasFilter("([profile_name] IS NOT NULL)");

                    b.ToTable("bot_master_profile");
                });

            modelBuilder.Entity("aditaas_v5.Models.BotMessage", b =>
                {
                    b.Property<int>("MessageSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("message_session_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [bot_message_seq])");

                    b.Property<string>("MessageBotName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("message_bot_name");

                    b.Property<DateTime?>("MessageSessionDate")
                        .HasColumnType("date")
                        .HasColumnName("message_session_date");

                    b.Property<string>("MessageUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("message_user_name");

                    b.HasKey("MessageSessionId")
                        .HasName("bot_message_pkey");

                    b.ToTable("bot_message");
                });

            modelBuilder.Entity("aditaas_v5.Models.BotMessageDetails", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("message_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [bot_message_details_seq])");

                    b.Property<string>("BotResponse")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("bot_response");

                    b.Property<DateTime>("MessageDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("message_datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("MessageSessionCode")
                        .HasColumnType("int")
                        .HasColumnName("message_session_code");

                    b.Property<string>("UserMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("user_message");

                    b.HasKey("MessageId")
                        .HasName("bot_message_details_pkey");

                    b.ToTable("bot_message_details");
                });

            modelBuilder.Entity("aditaas_v5.Models.BotProfileDetail", b =>
                {
                    b.Property<int>("ProfileDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("profile_detail_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [bot_profile_detail_seq])");

                    b.Property<int?>("MenuCode")
                        .HasColumnType("int")
                        .HasColumnName("menu_code");

                    b.Property<int?>("ProfileCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("profile_code")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ProfileDeleteFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("profile_delete_flag")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("ProfileGeneralFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("profile_general_flag")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("ProfileInsertFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("profile_insert_flag")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("ProfileUpdateFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("profile_update_flag")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("ProfileViewFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("profile_view_flag")
                        .HasDefaultValueSql("('N')");

                    b.HasKey("ProfileDetailId")
                        .HasName("bot_profile_detail_pkey");

                    b.ToTable("bot_profile_detail");
                });

            modelBuilder.Entity("aditaas_v5.Models.BotSystemConfiguration", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("client_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [bot_system_configuration_seq])");

                    b.Property<string>("ClientAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("client_address");

                    b.Property<string>("ClientApplication")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("client_application");

                    b.Property<string>("ClientCity")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("client_city");

                    b.Property<string>("ClientContact1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("client_contact1");

                    b.Property<string>("ClientContact2")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("client_contact2");

                    b.Property<string>("ClientDisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("client_display_name");

                    b.Property<string>("ClientEmail1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("client_email1");

                    b.Property<string>("ClientEmail2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("client_email2");

                    b.Property<string>("ClientFbUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("client_fb_url");

                    b.Property<string>("ClientLinkedinUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("client_linkedin_url");

                    b.Property<string>("ClientLogo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("client_logo");

                    b.Property<string>("ClientName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("client_name");

                    b.Property<string>("ClientState")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("client_state");

                    b.Property<string>("ClientTwitterUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("client_twitter_url");

                    b.Property<string>("ClientUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("client_url");

                    b.Property<string>("ClientZipcode")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("client_zipcode");

                    b.Property<string>("DisplayLogo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("display_logo")
                        .HasDefaultValueSql("('N')");

                    b.Property<int?>("TermEndMonth")
                        .HasColumnType("int")
                        .HasColumnName("term_end_month");

                    b.Property<int?>("TermStartMonth")
                        .HasColumnType("int")
                        .HasColumnName("term_start_month");

                    b.HasKey("ClientId")
                        .HasName("bot_system_configuration_pkey");

                    b.ToTable("bot_system_configuration");
                });

            modelBuilder.Entity("aditaas_v5.Models.BotSystemReportsSetting", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("client_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [bot_system_reports_setting_seq])");

                    b.Property<string>("ClientReportLogo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("client_report_logo");

                    b.Property<string>("ReportClientName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("report_client_name");

                    b.Property<string>("ReportClientName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("report_client_name1");

                    b.Property<string>("ReportClientName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("report_client_name2");

                    b.Property<string>("ReportClientName3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("report_client_name3");

                    b.Property<string>("ReportClientName4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("report_client_name4");

                    b.Property<string>("ReportFooterText")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("report_footer_text");

                    b.Property<string>("ReportWatermarkLogo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("report_watermark_logo");

                    b.Property<string>("ReportWatermarkText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("report_watermark_text");

                    b.HasKey("ClientId")
                        .HasName("bot_system_reports_setting_pkey");

                    b.ToTable("bot_system_reports_setting");
                });

            modelBuilder.Entity("aditaas_v5.Models.BotSystemTerm", b =>
                {
                    b.Property<int>("ActiveTerm")
                        .HasColumnType("int")
                        .HasColumnName("active_term");

                    b.Property<int?>("ActiveYear")
                        .HasColumnType("int")
                        .HasColumnName("active_year");

                    b.Property<string>("FinancialYear")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("financial_year");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("is_active")
                        .HasDefaultValueSql("('N')");

                    b.HasKey("ActiveTerm")
                        .HasName("bot_system_term_pkey");

                    b.HasIndex(new[] { "ActiveYear" }, "uc_active_year")
                        .IsUnique()
                        .HasFilter("[active_year] IS NOT NULL");

                    b.ToTable("bot_system_term");
                });

            modelBuilder.Entity("aditaas_v5.Models.BotUserDetails", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [bot_user_details_seq])");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("is_active")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("UserAadharId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_aadhar_id");

                    b.Property<string>("UserDigitalSignature")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_digital_signature");

                    b.Property<DateTime?>("UserDob")
                        .HasColumnType("date")
                        .HasColumnName("user_dob");

                    b.Property<string>("UserEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_email_address");

                    b.Property<int?>("UserEmployeeCode")
                        .HasColumnType("int")
                        .HasColumnName("user_employee_code");

                    b.Property<string>("UserFname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_fname");

                    b.Property<string>("UserGender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("user_gender");

                    b.Property<string>("UserHomeContact")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("user_home_contact");

                    b.Property<string>("UserImage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_image");

                    b.Property<string>("UserLname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_lname");

                    b.Property<string>("UserMname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_mname");

                    b.Property<string>("UserMobileContact")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("user_mobile_contact");

                    b.Property<int?>("UserStdCode")
                        .HasColumnType("int")
                        .HasColumnName("user_std_code");

                    b.Property<string>("UserTitle")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("user_title");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("user_type");

                    b.HasKey("UserId")
                        .HasName("bot_user_details_pkey");

                    b.HasIndex(new[] { "UserEmployeeCode" }, "uc_user_employee_code")
                        .IsUnique()
                        .HasFilter("[user_employee_code] IS NOT NULL");

                    b.ToTable("bot_user_details");
                });

            modelBuilder.Entity("aditaas_v5.Models.BotUserLogin", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("login_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [bot_user_login_seq])");

                    b.Property<string>("AccountNonExpired")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("account_non_expired");

                    b.Property<string>("AccountNonLocked")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("account_non_locked");

                    b.Property<string>("AuthenticationToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("authentication_token");

                    b.Property<string>("CredentialsNotExpired")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("credentials_not_expired");

                    b.Property<string>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("enabled")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("TokenExpires")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("token_expires");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("UserLoginName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_login_name");

                    b.Property<string>("UserLoginPassword")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_login_password");

                    b.Property<int?>("UserProfileId")
                        .HasColumnType("int")
                        .HasColumnName("user_profile_id");

                    b.Property<string>("UserTheme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_theme");

                    b.HasKey("LoginId")
                        .HasName("bot_user_login_pkey");

                    b.HasIndex(new[] { "UserLoginName" }, "uc_username")
                        .IsUnique()
                        .HasFilter("([user_login_name] IS NOT NULL)");

                    b.ToTable("bot_user_login");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscCnfWmiCommand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_mst_wmi_ID_seq])");

                    b.Property<int?>("BaseUnits")
                        .HasColumnType("int")
                        .HasColumnName("base_units");

                    b.Property<int?>("DataType")
                        .HasColumnType("int");

                    b.Property<int?>("DeltaCalculation")
                        .HasColumnType("int")
                        .HasColumnName("delta_calculation");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Query")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SnmpRawValueType")
                        .HasColumnType("int")
                        .HasColumnName("snmp_raw_value_type");

                    b.Property<string>("Transformation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("transformation");

                    b.Property<int?>("UnitMultiplier")
                        .HasColumnType("int")
                        .HasColumnName("unit_multiplier");

                    b.HasKey("Id");

                    b.ToTable("tbl_autodisc_cnf_wmi_command");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMacInfo", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MacPrefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mac_prefix");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("manufacturer");

                    b.HasKey("Uid")
                        .HasName("tbl_autodisc_mac_info_pk");

                    b.ToTable("tbl_autodisc_mac_info");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstCredential", b =>
                {
                    b.Property<int>("CredentialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("credential_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_cmdb_disc_mst_credential_credential_id_seq])");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("Password")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("password");

                    b.Property<int?>("ProtocolId")
                        .HasColumnType("int")
                        .HasColumnName("protocol_id");

                    b.Property<string>("SnmpAuthMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("snmp_auth_method");

                    b.Property<string>("SnmpCommunity")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("snmp_community");

                    b.Property<string>("SnmpEncryptionMethod")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("snmp_encryption_method");

                    b.Property<string>("SnmpEncryptionPassword")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("snmp_encryption_password");

                    b.Property<int?>("SnmpPort")
                        .HasColumnType("int")
                        .HasColumnName("snmp_port");

                    b.Property<int?>("SnmpRetry")
                        .HasColumnType("int")
                        .HasColumnName("snmp_retry");

                    b.Property<int?>("SnmpTimeout")
                        .HasColumnType("int")
                        .HasColumnName("snmp_timeout");

                    b.Property<string>("UserName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("user_name");

                    b.HasKey("CredentialId")
                        .HasName("tbl_cmdb_disc_mst_credential_pk");

                    b.ToTable("tbl_autodisc_mst_credential");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstDiscovery", b =>
                {
                    b.Property<int>("DiscoveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discovery_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_cmdb_disc_mst_discovery_discovery_id_seq])");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("CredentialIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("credential_ids");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DiscoveryStatus")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("discovery_status");

                    b.Property<string>("DiscoveryType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("discovery_type");

                    b.Property<string>("IgnoreCondition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ignore_condition");

                    b.Property<string>("IgnoreIpAddressCsv")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ignore_ip_address_csv");

                    b.Property<string>("IgnoreIpAddressEnd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ignore_ip_address_end");

                    b.Property<string>("IgnoreIpAddressStart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ignore_ip_address_start");

                    b.Property<string>("IgnoreType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ignore_type");

                    b.Property<string>("IgnoreValueText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ignore_value_text");

                    b.Property<string>("IpAddressCsv")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ip_address_csv");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsIgnoreDevice")
                        .HasColumnType("bit")
                        .HasColumnName("is_ignore_device");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("SiteIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("site_ids");

                    b.HasKey("DiscoveryId")
                        .HasName("tbl_cmdb_disc_mst_discovery_pk");

                    b.ToTable("tbl_autodisc_mst_discovery");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstDiscoveryIpAddress", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DiscoveryId")
                        .HasColumnType("int")
                        .HasColumnName("discovery_id");

                    b.Property<string>("IpAddressEnd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ip_address_end");

                    b.Property<string>("IpAddressStart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ip_address_start");

                    b.HasKey("Uid")
                        .HasName("tbl_autodisc_mst_discovery_ip_address_pk");

                    b.HasIndex("DiscoveryId");

                    b.ToTable("tbl_autodisc_mst_discovery_ip_address");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstDiscoveryRule", b =>
                {
                    b.Property<int>("DiscoveryRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discovery_rule_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("description");

                    b.Property<string>("DiscoveryIds")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("discovery_ids");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsAllDiscovery")
                        .HasColumnType("bit")
                        .HasColumnName("is_all_discovery");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.HasKey("DiscoveryRuleId")
                        .HasName("tbl_autodisc_mst_discovery_rule_pk");

                    b.ToTable("tbl_autodisc_mst_discovery_rule");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstDiscoveryRuleAction", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("action_type");

                    b.Property<string>("ActionValue")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("action_value");

                    b.Property<int?>("DiscoveryRuleId")
                        .HasColumnType("int")
                        .HasColumnName("discovery_rule_id");

                    b.Property<string>("NotifyEmailIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notify_email_ids");

                    b.Property<string>("NotifyMessageBody")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notify_message_body");

                    b.Property<string>("NotifyMessageSubject")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notify_message_subject");

                    b.Property<string>("NotifyUserIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notify_user_ids");

                    b.HasKey("Uid")
                        .HasName("tbl_autodisc_mst_discovery_rule_action_pk");

                    b.HasIndex("DiscoveryRuleId");

                    b.ToTable("tbl_autodisc_mst_discovery_rule_action");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstDiscoveryRuleCondition", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConditionType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("condition_type");

                    b.Property<string>("ConditionValue")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("condition_value");

                    b.Property<int?>("DiscoveryRuleId")
                        .HasColumnType("int")
                        .HasColumnName("discovery_rule_id");

                    b.Property<string>("Operator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("operator");

                    b.HasKey("Uid")
                        .HasName("tbl_autodisc_mst_discovery_rule_condition_pk");

                    b.HasIndex("DiscoveryRuleId");

                    b.ToTable("tbl_autodisc_mst_discovery_rule_condition");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstDiscoverySchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("schedule_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_cmdb_disc_mst_discovery_schedule_schedule_id_seq])");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("DailyOnTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("daily_on_time");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("DiscoveryId")
                        .HasColumnType("int")
                        .HasColumnName("discovery_id");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("MonthlyOnDay")
                        .HasColumnType("int")
                        .HasColumnName("monthly_on_day");

                    b.Property<DateTime?>("MonthlyOnTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("monthly_on_time");

                    b.Property<string>("MonthlySelectedMonths")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("monthly_selected_months");

                    b.Property<DateTime?>("OnceScheduleOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("once_schedule_on");

                    b.Property<string>("ScheduleType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("schedule_type");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<DateTime?>("WeeklyOnTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("weekly_on_time");

                    b.Property<string>("WeeklySelectedDays")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("weekly_selected_days");

                    b.HasKey("ScheduleId")
                        .HasName("tbl_cmdb_disc_mst_discovery_schedule_pk");

                    b.ToTable("tbl_autodisc_mst_discovery_schedule");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstMib", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("manufacturer");

                    b.Property<string>("Oid")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("oid");

                    b.Property<string>("OidDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("oid_description");

                    b.HasKey("Id");

                    b.ToTable("tbl_autodisc_mst_mib");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstProtocol", b =>
                {
                    b.Property<int>("ProtocolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("protocol_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_cmdb_disc_mst_credential_type_credential_type_id_seq])");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsCredentialReq")
                        .HasColumnType("bit")
                        .HasColumnName("is_credential_req");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type");

                    b.HasKey("ProtocolId")
                        .HasName("tbl_cmdb_disc_mst_credential_type_pk");

                    b.ToTable("tbl_autodisc_mst_protocol");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscTrnDiscovery", b =>
                {
                    b.Property<int>("TrnDiscoveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("trn_discovery_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_autodisc_trn_discovery_discovery_id_seq])");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("DiscoveryId")
                        .HasColumnType("int")
                        .HasColumnName("discovery_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("TrnDiscoveryId")
                        .HasName("tbl_autodisc_trn_discovery_pk");

                    b.ToTable("tbl_autodisc_trn_discovery");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscTrnDiscoveryDetail", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("CredentialId")
                        .HasColumnType("int")
                        .HasColumnName("credential_id");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DeviceOid")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("device_oid");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("device_type");

                    b.Property<string>("HostName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("host_name");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ip_address");

                    b.Property<string>("MacAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mac_address");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("manufacturer");

                    b.Property<int?>("ProtocolId")
                        .HasColumnType("int")
                        .HasColumnName("protocol_id");

                    b.Property<int?>("TrnDiscoveryId")
                        .HasColumnType("int")
                        .HasColumnName("trn_discovery_id");

                    b.HasKey("Uid")
                        .HasName("tbl_autodisc_trn_discovery_detail_pk");

                    b.HasIndex(new[] { "TrnDiscoveryId" }, "IX_tbl_autodisc_trn_discovery_detail_trn_discovery_id");

                    b.ToTable("tbl_autodisc_trn_discovery_detail");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblChaUserChatMessage", b =>
                {
                    b.Property<int>("UserChatMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_chat_message_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [user_chat_message_user_chat_message_id_seq])");

                    b.Property<int?>("UserChatMessageSessionCode")
                        .HasColumnType("int")
                        .HasColumnName("user_chat_message_session_code");

                    b.Property<string>("UserMessage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("user_message");

                    b.Property<string>("UserMessageDeliveryType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("user_message_delivery_type");

                    b.Property<string>("UserMessageReadStatus")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("user_message_read_status");

                    b.Property<DateTime?>("UserMessageTimestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("user_message_timestamp");

                    b.Property<int?>("UserSenderCode")
                        .HasColumnType("int")
                        .HasColumnName("user_sender_code");

                    b.Property<int?>("UserTargetCode")
                        .HasColumnType("int")
                        .HasColumnName("user_target_code");

                    b.HasKey("UserChatMessageId")
                        .HasName("user_chat_message_pkey");

                    b.ToTable("tbl_cha_user_chat_message");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblChaUserChatSession", b =>
                {
                    b.Property<int>("UserChatSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_chat_session_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [user_chat_session_user_chat_session_id_seq])");

                    b.Property<DateTime?>("ChatDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("chat_date");

                    b.Property<int?>("ChatSessionCode")
                        .HasColumnType("int")
                        .HasColumnName("chat_session_code");

                    b.Property<int?>("ChatSessionUserCode")
                        .HasColumnType("int")
                        .HasColumnName("chat_session_user_code");

                    b.HasKey("UserChatSessionId")
                        .HasName("user_chat_session_pkey");

                    b.ToTable("tbl_cha_user_chat_session");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblChaUserGroupMessage", b =>
                {
                    b.Property<int>("GroupMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_message_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [user_group_message_group_message_id_seq])");

                    b.Property<int?>("GroupCode")
                        .HasColumnType("int")
                        .HasColumnName("group_code");

                    b.Property<string>("GroupMessage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("group_message");

                    b.Property<DateTime?>("GroupMessageTimestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("group_message_timestamp");

                    b.Property<int?>("UserCode")
                        .HasColumnType("int")
                        .HasColumnName("user_code");

                    b.HasKey("GroupMessageId")
                        .HasName("user_group_message_pkey");

                    b.ToTable("tbl_cha_user_group_message");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblChaUserGroups", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [user_groups_group_id_seq])");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("group_name");

                    b.Property<int?>("GroupOwnerCode")
                        .HasColumnType("int")
                        .HasColumnName("group_owner_code");

                    b.Property<string>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("is_active")
                        .HasDefaultValueSql("('N')");

                    b.HasKey("GroupId")
                        .HasName("user_groups_pkey");

                    b.HasIndex(new[] { "GroupName" }, "uc_group_name")
                        .IsUnique();

                    b.ToTable("tbl_cha_user_groups");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblChaUserGroupsDetails", b =>
                {
                    b.Property<int>("UserGroupDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_group_details_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [user_groups_details_user_group_details_id_seq])");

                    b.Property<int?>("GroupCode")
                        .HasColumnType("int")
                        .HasColumnName("group_code");

                    b.Property<int?>("UserCode")
                        .HasColumnType("int")
                        .HasColumnName("user_code");

                    b.HasKey("UserGroupDetailsId")
                        .HasName("user_groups_details_pkey");

                    b.HasIndex(new[] { "GroupCode", "UserCode" }, "uc_group_code_user_code")
                        .IsUnique()
                        .HasFilter("[group_code] IS NOT NULL AND [user_code] IS NOT NULL");

                    b.ToTable("tbl_cha_user_groups_details");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblChaUserSession", b =>
                {
                    b.Property<int>("UserSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_session_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [user_session_user_session_id_seq])");

                    b.Property<DateTime?>("UserSessionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("user_session_date");

                    b.HasKey("UserSessionId")
                        .HasName("user_session_pkey");

                    b.ToTable("tbl_cha_user_session");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblChaVisitorChatMessage", b =>
                {
                    b.Property<int>("VisitorChatMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("visitor_chat_message_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [visitor_chat_message_visitor_chat_message_id_seq])");

                    b.Property<int?>("VisitorChatMessageSessionCode")
                        .HasColumnType("int")
                        .HasColumnName("visitor_chat_message_session_code");

                    b.Property<string>("VisitorMessage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("visitor_message");

                    b.Property<string>("VisitorMessageSenderType")
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("visitor_message_sender_type");

                    b.Property<DateTime?>("VisitorMessageTimestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("visitor_message_timestamp");

                    b.Property<int?>("VisitorSenderCode")
                        .HasColumnType("int")
                        .HasColumnName("visitor_sender_code");

                    b.Property<string>("VisitorSenderName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("visitor_sender_name");

                    b.Property<string>("VisitorSenderUsername")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("visitor_sender_username");

                    b.HasKey("VisitorChatMessageId")
                        .HasName("visitor_chat_message_pkey");

                    b.ToTable("tbl_cha_visitor_chat_message");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblChaVisitorChatSession", b =>
                {
                    b.Property<int>("VisitorChatSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("visitor_chat_session_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [visitor_chat_session_visitor_chat_session_id_seq])");

                    b.Property<DateTime?>("VisitorChatDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("visitor_chat_date");

                    b.Property<int?>("VisitorSessionCode")
                        .HasColumnType("int")
                        .HasColumnName("visitor_session_code");

                    b.Property<string>("VisitorSessionUserCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("visitor_session_user_code");

                    b.Property<string>("VisitorSessionUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("visitor_session_user_name");

                    b.Property<string>("VisitorSessionUserType")
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("visitor_session_user_type");

                    b.HasKey("VisitorChatSessionId")
                        .HasName("visitor_chat_session_pkey");

                    b.ToTable("tbl_cha_visitor_chat_session");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblChaVisitorQueue", b =>
                {
                    b.Property<int>("VisitorQueueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("visitor_queue_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [visitor_queue_visitor_queue_id_seq])");

                    b.Property<string>("VisitorAttended")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("visitor_attended")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("VisitorBotId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("visitor_bot_id");

                    b.Property<DateTime?>("VisitorDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("visitor_date");

                    b.Property<string>("VisitorMessage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("visitor_message");

                    b.Property<string>("VisitorOnline")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("visitor_online")
                        .HasDefaultValueSql("('Y')");

                    b.Property<string>("VisitorSessionId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("visitor_session_id");

                    b.Property<string>("VisitorUserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("visitor_user_id");

                    b.Property<string>("VisitorUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("visitor_user_name");

                    b.HasKey("VisitorQueueId")
                        .HasName("visitor_queue_pkey");

                    b.HasIndex(new[] { "VisitorUserId" }, "uc_visitor_user_id")
                        .IsUnique();

                    b.ToTable("tbl_cha_visitor_queue");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblChaVisitorSession", b =>
                {
                    b.Property<int>("VisitorSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("visitor_session_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [visitor_session_visitor_session_id_seq])");

                    b.Property<DateTime?>("VisitorSessionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("visitor_session_date");

                    b.HasKey("VisitorSessionId")
                        .HasName("visitor_session_pkey");

                    b.ToTable("tbl_cha_visitor_session");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCmdbMstCiType", b =>
                {
                    b.Property<int>("CiTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ci_type_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CiCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ci_category");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<string>("ImageSrc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("image_src");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("CiTypeId")
                        .HasName("tbl_cmdb_mst_ci_type_pkey");

                    b.ToTable("tbl_cmdb_mst_ci_type");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCmdbMstCiTypeAttr", b =>
                {
                    b.Property<int>("CiAttrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ci_attr_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttrCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("attr_code");

                    b.Property<int?>("CiTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ci_type_id");

                    b.Property<string>("ControlDivClass")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("control_div_class");

                    b.Property<string>("ControlOptions")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("control_options");

                    b.Property<string>("ControlType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("control_type");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<bool?>("IsRequired")
                        .HasColumnType("bit")
                        .HasColumnName("is_required");

                    b.Property<int?>("MaxLength")
                        .HasColumnType("int")
                        .HasColumnName("max_length");

                    b.Property<int?>("MinLength")
                        .HasColumnType("int")
                        .HasColumnName("min_length");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("PropertyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("property_name");

                    b.Property<string>("Tooltips")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tooltips");

                    b.HasKey("CiAttrId")
                        .HasName("tbl_cmdb_mst_ci_type_attr_pkey");

                    b.ToTable("tbl_cmdb_mst_ci_type_attr");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCmdbMstSoftware", b =>
                {
                    b.Property<int>("SoftwareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("software_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<int?>("BrandAttrId")
                        .HasColumnType("int")
                        .HasColumnName("brand_attr_id");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("id_number");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("LicenseCount")
                        .HasColumnType("int")
                        .HasColumnName("license_count");

                    b.Property<DateTime?>("LicenseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("license_date");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("ProductKey")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("product_key");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("short_description");

                    b.HasKey("SoftwareId")
                        .HasName("tbl_cmdb_mst_software_pkey");

                    b.ToTable("tbl_cmdb_mst_software");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCmdbMstVendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vendor_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addr1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("addr1");

                    b.Property<string>("Addr2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("addr2");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("city");

                    b.Property<string>("ContactName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contact_name");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contact_phone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Zip")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("zip");

                    b.HasKey("VendorId")
                        .HasName("tbl_cmdb_mst_vendor_pkey");

                    b.ToTable("tbl_cmdb_mst_vendor");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCmdbTicketLink", b =>
                {
                    b.Property<int>("TicketLinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ticket_link_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CiId")
                        .HasColumnType("int")
                        .HasColumnName("ci_id");

                    b.Property<int?>("CiTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ci_type_id");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("TicketLinkId")
                        .HasName("tbl_cmdb_ticket_link_pkey");

                    b.ToTable("tbl_cmdb_ticket_link");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCmdbTrnActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("FieldsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fields_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int")
                        .HasColumnName("performed_by_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("ActivityLogId")
                        .HasName("tbl_cmdb_trn_activity_log_pkey");

                    b.ToTable("tbl_cmdb_trn_activity_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCmdbTrnAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attachment_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_cmdb_attachment_attachment_id_seq])");

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("tbl_cmdb_attachment_pkey");

                    b.ToTable("tbl_cmdb_trn_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCmdbTrnCi", b =>
                {
                    b.Property<int>("CiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ci_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<string>("AltContactNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("alt_contact_no");

                    b.Property<int?>("AltLocationId")
                        .HasColumnType("int")
                        .HasColumnName("alt_location_id");

                    b.Property<int?>("AssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("assign_queue_id");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<string>("CiName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ci_name");

                    b.Property<int?>("CiTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ci_type_id");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("contact_no");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id_number");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("LastNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_note");

                    b.Property<int?>("LastNotesAddedById")
                        .HasColumnType("int")
                        .HasColumnName("last_notes_added_by_id");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_notes_added_on");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("short_description");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("CiId")
                        .HasName("tbl_cmdb_trn_ci_pkey");

                    b.HasIndex(new[] { "IdNumber" }, "tbl_cmdb_trn_ci_id_number_idx")
                        .IsUnique()
                        .HasFilter("[id_number] IS NOT NULL");

                    b.ToTable("tbl_cmdb_trn_ci");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCmdbTrnCiDetail", b =>
                {
                    b.Property<int>("CiDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ci_detail_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CiAttrId")
                        .HasColumnType("int")
                        .HasColumnName("ci_attr_id");

                    b.Property<int?>("CiId")
                        .HasColumnType("int")
                        .HasColumnName("ci_id");

                    b.Property<DateTime?>("DateValue")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_value");

                    b.Property<string>("TextValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("text_value");

                    b.HasKey("CiDetailId")
                        .HasName("tbl_cmdb_trn_ci_detail_pkey");

                    b.ToTable("tbl_cmdb_trn_ci_detail");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCmdbTrnNotesLog", b =>
                {
                    b.Property<int>("NotesLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notes_log_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<string>("NoteType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note_type");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("NotesLogId")
                        .HasName("tbl_cmdb_trn_notes_log_pkey");

                    b.ToTable("tbl_cmdb_trn_notes_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCmdbTrnSoftwareCiMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CiId")
                        .HasColumnType("int")
                        .HasColumnName("ci_id");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("SoftwareId")
                        .HasColumnType("int")
                        .HasColumnName("software_id");

                    b.HasKey("Uid")
                        .HasName("tbl_cmdb_trn_software_ci_map_pkey");

                    b.ToTable("tbl_cmdb_trn_software_ci_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfAdLdap", b =>
                {
                    b.Property<int>("AdLdapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ad_ldap_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("account_name");

                    b.Property<string>("BaseDn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("base_dn");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("DistinguishedName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("distinguishedName");

                    b.Property<string>("DomainController")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("domain_controller");

                    b.Property<string>("DomainName")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("domain_name");

                    b.Property<string>("HostName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("host_name");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsSsl")
                        .HasColumnType("bit")
                        .HasColumnName("is_ssl");

                    b.Property<string>("LdapServerType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ldap_server_type");

                    b.Property<string>("LoginAttribute")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("login_attribute");

                    b.Property<string>("MailAttribute")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mail_attribute");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<int?>("Port")
                        .HasColumnType("int")
                        .HasColumnName("port");

                    b.Property<int?>("RecurrenceHour")
                        .HasColumnType("int")
                        .HasColumnName("recurrence_hour");

                    b.Property<DateTime?>("ScheduleTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("schedule_time");

                    b.Property<string>("SearchFilter")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("search_filter");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("user_name");

                    b.HasKey("AdLdapId")
                        .HasName("tbl_cnf_ad_ldap_pkey");

                    b.HasIndex("OrgId");

                    b.ToTable("tbl_cnf_ad_ldap");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfAdLdapFieldMap", b =>
                {
                    b.Property<int>("AdFieldMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ad_field_map_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdFieldName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ad_field_name");

                    b.Property<int?>("AdLdapId")
                        .HasColumnType("int")
                        .HasColumnName("ad_ldap_id");

                    b.Property<string>("AditaasFieldName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("aditaas_field_name");

                    b.HasKey("AdFieldMapId")
                        .HasName("tbl_cnf_ad_ldap_field_map_pkey");

                    b.HasIndex("AdLdapId");

                    b.ToTable("tbl_cnf_ad_ldap_field_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfAdSchedule", b =>
                {
                    b.Property<int>("AdScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ad_schedule_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdLdapId")
                        .HasColumnType("int")
                        .HasColumnName("ad_ldap_id");

                    b.Property<int?>("IntervalDays")
                        .HasColumnType("int")
                        .HasColumnName("interval_days");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<TimeSpan?>("ScheduleTime")
                        .HasColumnType("time")
                        .HasColumnName("schedule_time");

                    b.HasKey("AdScheduleId")
                        .HasName("tbl_cnf_ad_schedule_pkey");

                    b.HasIndex("AdLdapId");

                    b.ToTable("tbl_cnf_ad_schedule");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfBusField", b =>
                {
                    b.Property<int>("BusFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bus_field_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("data_type");

                    b.Property<string>("DbFieldName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("db_field_name");

                    b.Property<string>("EntityName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("entity_name");

                    b.Property<string>("FieldType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("field_type");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("BusFieldId")
                        .HasName("tbl_mst_form_field_pkey");

                    b.ToTable("tbl_cnf_bus_field");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfBusRule", b =>
                {
                    b.Property<int>("BusRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bus_rule_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActionType")
                        .HasColumnType("int")
                        .HasColumnName("action_type");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<int?>("IntervalMinutes")
                        .HasColumnType("int")
                        .HasColumnName("interval_minutes");

                    b.Property<int?>("IntervalType")
                        .HasColumnType("int")
                        .HasColumnName("interval_type");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<string>("NestedBusRuleIds")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nested_bus_rule_ids");

                    b.Property<string>("NestedBusRuleSqlSelect")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nested_bus_rule_sql_select");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("PropChangeJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prop_change_json");

                    b.Property<int?>("RecurringCount")
                        .HasColumnType("int")
                        .HasColumnName("recurring_count");

                    b.Property<string>("SqlQuerySelect")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sql_query_select");

                    b.Property<string>("StopBusRuleIds")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("stop_bus_rule_ids");

                    b.HasKey("BusRuleId")
                        .HasName("tbl_conf_org_bus_rule_pkey");

                    b.HasIndex("ModuleId");

                    b.HasIndex("OrgId");

                    b.ToTable("tbl_cnf_bus_rule");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfBusRuleAction", b =>
                {
                    b.Property<int>("RuleActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rule_action_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("action_type");

                    b.Property<int?>("BusRuleId")
                        .HasColumnType("int")
                        .HasColumnName("bus_rule_id");

                    b.Property<string>("MessageBody")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message_body");

                    b.Property<string>("MessageSubject")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("message_subject");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<string>("NotifyExcludeUserBusFieldIds")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("notify_exclude_user_bus_field_ids");

                    b.Property<string>("NotifyExternalEmailIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notify_external_email_ids");

                    b.Property<string>("NotifyGroupIds")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("notify_group_ids");

                    b.Property<string>("NotifyUserBusFieldIds")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("notify_user_bus_field_ids");

                    b.Property<string>("NotifyUserIds")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("notify_user_ids");

                    b.Property<string>("RestApiJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rest_api_json");

                    b.Property<string>("UpdateFieldJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("update_field_json");

                    b.HasKey("RuleActionId")
                        .HasName("tbl_cnf_rule_action_pkey");

                    b.HasIndex("BusRuleId");

                    b.ToTable("tbl_cnf_bus_rule_action");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfBusRuleCond", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AndOr")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("and_or");

                    b.Property<int?>("BusRuleId")
                        .HasColumnType("int")
                        .HasColumnName("bus_rule_id");

                    b.Property<string>("EndBrackets")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("end_brackets");

                    b.Property<int>("FormFieldId")
                        .HasColumnType("int")
                        .HasColumnName("form_field_id");

                    b.Property<string>("MatchValues")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("match_values");

                    b.Property<string>("Operator")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("operator");

                    b.Property<string>("StartBrackets")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("start_brackets");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_bus_rule_cond_pkey");

                    b.HasIndex("BusRuleId");

                    b.HasIndex("FormFieldId");

                    b.ToTable("tbl_cnf_bus_rule_cond");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfCatalogCat", b =>
                {
                    b.Property<int>("CatalogCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("catalog_cat_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvailTarget")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("avail_target");

                    b.Property<string>("Cost")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cost");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("description");

                    b.Property<byte[]>("Icon")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("icon");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("SupportHours")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("support_hours");

                    b.HasKey("CatalogCatId")
                        .HasName("tbl_cnf_catalog_cat_pkey");

                    b.HasIndex("OrgId");

                    b.ToTable("tbl_cnf_catalog_cat");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfCatalogCost", b =>
                {
                    b.Property<int>("CatalogCostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("catalog_cost_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AllowCostDetails")
                        .HasColumnType("bit")
                        .HasColumnName("allow_cost_details");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<decimal?>("ServiceCost")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("service_cost");

                    b.Property<int?>("SrTemplateId")
                        .HasColumnType("int")
                        .HasColumnName("sr_template_id");

                    b.HasKey("CatalogCostId")
                        .HasName("tbl_cnf_catalog_cost_pkey");

                    b.ToTable("tbl_cnf_catalog_cost");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfCatalogQuestion", b =>
                {
                    b.Property<int>("CatalogQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("catalog_question_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnsType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ans_type");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsCostEnable")
                        .HasColumnType("bit")
                        .HasColumnName("is_cost_enable");

                    b.Property<string>("Question")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("question");

                    b.HasKey("CatalogQuestionId")
                        .HasName("tbl_cnf_catalog_question_pkey");

                    b.ToTable("tbl_cnf_catalog_question");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfCatalogQuestionDtls", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogQuestionId")
                        .HasColumnType("int")
                        .HasColumnName("catalog_question_id");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("cost");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("OptionText")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("option_text");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_catalog_question_dtls_pkey");

                    b.HasIndex("CatalogQuestionId");

                    b.ToTable("tbl_cnf_catalog_question_dtls");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfCatalogResource", b =>
                {
                    b.Property<int>("CatalogResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("catalog_resource_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogQuestionId")
                        .HasColumnType("int")
                        .HasColumnName("catalog_question_id");

                    b.Property<int?>("SrTemplateId")
                        .HasColumnType("int")
                        .HasColumnName("sr_template_id");

                    b.HasKey("CatalogResourceId")
                        .HasName("tbl_cnf_catalog_resource_pkey");

                    b.HasIndex("CatalogQuestionId");

                    b.ToTable("tbl_cnf_catalog_resource");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfCatalogResourceDtls", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogResourceId")
                        .HasColumnType("int")
                        .HasColumnName("catalog_resource_id");

                    b.Property<string>("ResourceValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("resource_value");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_catalog_resource_dtls_pkey");

                    b.HasIndex("CatalogResourceId");

                    b.ToTable("tbl_cnf_catalog_resource_dtls");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfConfigItem", b =>
                {
                    b.Property<int>("ConfigItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("config_item_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("value");

                    b.HasKey("ConfigItemId")
                        .HasName("tbl_cnf_config_item_pk");

                    b.ToTable("tbl_cnf_config_item");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfConfigItemMst", b =>
                {
                    b.Property<int>("ConfigItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("config_item_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("value");

                    b.HasKey("ConfigItemId")
                        .HasName("tbl_cnf_config_item_mst_pk");

                    b.ToTable("tbl_cnf_config_item_mst");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfDataArchive", b =>
                {
                    b.Property<int>("ArchiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("archive_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArchiveFrom")
                        .HasColumnType("datetime2")
                        .HasColumnName("archive_from");

                    b.Property<string>("ArchiveName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("archive_name");

                    b.Property<DateTime?>("ArchiveOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("archive_on");

                    b.Property<int?>("BeforeTimeDuration")
                        .HasColumnType("int")
                        .HasColumnName("before_time_duration");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("DateOption")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("date_option");

                    b.Property<string>("DepartmentIds")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("department_ids");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("LocationIds")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("location_ids");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("SqlCond")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("sql_cond");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("ArchiveId")
                        .HasName("tbl_cnf_data_archive_pk");

                    b.ToTable("tbl_cnf_data_archive");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfDataArchiveCond", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AndOr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("and_or");

                    b.Property<string>("ArchiveCondType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("archive_cond_type");

                    b.Property<int>("ArchiveId")
                        .HasColumnType("int")
                        .HasColumnName("archive_id");

                    b.Property<string>("EndBrackets")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("end_brackets");

                    b.Property<int>("FormFieldId")
                        .HasColumnType("int")
                        .HasColumnName("form_field_id");

                    b.Property<string>("MatchValues")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("match_values");

                    b.Property<string>("Operator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("operator");

                    b.Property<string>("StartBrackets")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("start_brackets");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_data_archive_cond_pk");

                    b.HasIndex("ArchiveId");

                    b.HasIndex("FormFieldId");

                    b.ToTable("tbl_cnf_data_archive_cond");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfDatadriveVisborad", b =>
                {
                    b.Property<int>("DatadriveVisboradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("datadrive_visborad_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("SwimFormFieldId")
                        .HasColumnType("int")
                        .HasColumnName("swim_form_field_id");

                    b.Property<int?>("TaskTableId")
                        .HasColumnType("int")
                        .HasColumnName("task_table_id");

                    b.Property<int?>("VertlaneFormFieldId")
                        .HasColumnType("int")
                        .HasColumnName("vertlane_form_field_id");

                    b.HasKey("DatadriveVisboradId")
                        .HasName("tbl_cnf_datadrive_visborad_pkey");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("SwimFormFieldId");

                    b.HasIndex("VertlaneFormFieldId");

                    b.ToTable("tbl_cnf_datadrive_visborad");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfEmailMgr", b =>
                {
                    b.Property<int>("EmailMgrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("email_mgr_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("DefaultCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("default_category_id");

                    b.Property<int?>("DefaultItemId")
                        .HasColumnType("int")
                        .HasColumnName("default_item_id");

                    b.Property<int?>("DefaultPriorityId")
                        .HasColumnType("int")
                        .HasColumnName("default_priority_id");

                    b.Property<int?>("DefaultQueueId")
                        .HasColumnType("int")
                        .HasColumnName("default_queue_id");

                    b.Property<int?>("DefaultSubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("default_sub_category_id");

                    b.Property<int?>("DefaultUserId")
                        .HasColumnType("int")
                        .HasColumnName("default_user_id");

                    b.Property<string>("EmailId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email_id");

                    b.Property<int?>("IntervalMin")
                        .HasColumnType("int")
                        .HasColumnName("interval_min");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsApplyRule")
                        .HasColumnType("bit")
                        .HasColumnName("is_apply_rule");

                    b.Property<bool?>("IsExtractField")
                        .HasColumnType("bit")
                        .HasColumnName("is_extract_field");

                    b.Property<bool?>("IsSsl")
                        .HasColumnType("bit")
                        .HasColumnName("is_ssl");

                    b.Property<string>("MailServer")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("mail_server");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<int?>("Port")
                        .HasColumnType("int")
                        .HasColumnName("port");

                    b.Property<string>("Protocol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("protocol");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("username");

                    b.HasKey("EmailMgrId")
                        .HasName("tbl_cnf_mail_incoming_pkey");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("OrgId");

                    b.ToTable("tbl_cnf_email_mgr");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfEmailMgrExtractField", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmailMgrId")
                        .HasColumnType("int")
                        .HasColumnName("email_mgr_id");

                    b.Property<string>("EndWith")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("end_with");

                    b.Property<int?>("FormFieldId")
                        .HasColumnType("int")
                        .HasColumnName("form_field_id");

                    b.Property<string>("StartWith")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("start_with");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_email_mgr_extract_field_pk");

                    b.HasIndex("EmailMgrId");

                    b.ToTable("tbl_cnf_email_mgr_extract_field");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfEmailMgrRule", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AndOr")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("and_or");

                    b.Property<int?>("EmailMgrId")
                        .HasColumnType("int")
                        .HasColumnName("email_mgr_id");

                    b.Property<string>("EndBrackets")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("end_brackets");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<string>("Operator")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("operator");

                    b.Property<string>("StartBrackets")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("start_brackets");

                    b.Property<string>("Value")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("value");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_email_mgr_rule_pkey");

                    b.HasIndex("EmailMgrId");

                    b.ToTable("tbl_cnf_email_mgr_rule");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfEmailTemplate", b =>
                {
                    b.Property<int>("EmailTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("email_template_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bcc")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("bcc");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("body");

                    b.Property<string>("Cc")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("cc");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsHtml")
                        .HasColumnType("bit")
                        .HasColumnName("is_html");

                    b.Property<string>("Subject")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("subject");

                    b.Property<string>("TemplateType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("template_type");

                    b.Property<string>("To")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("to");

                    b.HasKey("EmailTemplateId")
                        .HasName("tbl_cnf_email_template_pkey");

                    b.ToTable("tbl_cnf_email_template");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfFollowUp", b =>
                {
                    b.Property<int>("FollowUpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("follow_up_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetCiTypeId")
                        .HasColumnType("int")
                        .HasColumnName("asset_ci_type_id");

                    b.Property<DateTime?>("ExecutionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("execution_date");

                    b.Property<int?>("FollowUpTypeId")
                        .HasColumnType("int")
                        .HasColumnName("follow_up_type_id");

                    b.Property<bool?>("IsSendEmail")
                        .HasColumnType("bit")
                        .HasColumnName("is_send_email");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<DateTime?>("SchDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("sch_date_time");

                    b.Property<int?>("SetById")
                        .HasColumnType("int")
                        .HasColumnName("set_by_id");

                    b.Property<DateTime?>("SetOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("set_on");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("Subject")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("subject");

                    b.Property<string>("UserDefineUserIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_define_user_ids");

                    b.HasKey("FollowUpId")
                        .HasName("tbl_cnf_follow_up_pkey");

                    b.ToTable("tbl_cnf_follow_up");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfFollowUpType", b =>
                {
                    b.Property<int>("FollowUpTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("follow_up_type_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("FollowUpTypeId")
                        .HasName("tbl_follow_up_type_pkey");

                    b.ToTable("tbl_cnf_follow_up_type");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfFreefrmVisborad", b =>
                {
                    b.Property<int>("FreefrmVisboradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("freefrm_visborad_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoardName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("board_name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.HasKey("FreefrmVisboradId")
                        .HasName("tbl_cnf_freefrm_visborad_pkey");

                    b.HasIndex("OrgId");

                    b.ToTable("tbl_cnf_freefrm_visborad");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfFreefrmVisboradLane", b =>
                {
                    b.Property<int>("VisboradLaneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("visborad_lane_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FreefrmVisboradId")
                        .HasColumnType("int")
                        .HasColumnName("freefrm_visborad_id");

                    b.Property<string>("LaneName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("lane_name");

                    b.HasKey("VisboradLaneId")
                        .HasName("tbl_cnf_freefrm_visborad_lane_pkey");

                    b.HasIndex("FreefrmVisboradId");

                    b.ToTable("tbl_cnf_freefrm_visborad_lane");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfHelpdeskList", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("client_name");

                    b.Property<string>("DisplayText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("display_text");

                    b.Property<string>("HelpdeskUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("helpdesk_url");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_helpdesk_list_pk");

                    b.ToTable("tbl_cnf_helpdesk_list");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfMailOutgoing", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AltIpAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("alt_ip_address");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("is_default");

                    b.Property<bool?>("IsSslEnable")
                        .HasColumnType("bit")
                        .HasColumnName("is_ssl_enable");

                    b.Property<string>("MailServer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("mail_server");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<int?>("Port")
                        .HasColumnType("int")
                        .HasColumnName("port");

                    b.Property<string>("Protocol")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("protocol");

                    b.Property<string>("ReplyTo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("reply_to");

                    b.Property<bool?>("RequiresAuth")
                        .HasColumnType("bit")
                        .HasColumnName("requires_auth");

                    b.Property<string>("SenderEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("sender_email");

                    b.Property<string>("SenderName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("sender_name");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_mail_outgoing_pkey");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OrgId");

                    b.ToTable("tbl_cnf_mail_outgoing");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfNotifyRule", b =>
                {
                    b.Property<int>("NotifyRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notify_rule_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmailTemplateId")
                        .HasColumnType("int")
                        .HasColumnName("email_template_id");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsPushNotification")
                        .HasColumnType("bit")
                        .HasColumnName("is_push_notification");

                    b.Property<bool?>("IsSendMail")
                        .HasColumnType("bit")
                        .HasColumnName("is_send_mail");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)")
                        .HasColumnName("name");

                    b.HasKey("NotifyRuleId")
                        .HasName("tbl_cnf_notification_pkey");

                    b.HasIndex("EmailTemplateId");

                    b.HasIndex("ModuleId");

                    b.ToTable("tbl_cnf_notify_rule");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfNotifyRuleOrgMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmailTemplateId")
                        .HasColumnType("int")
                        .HasColumnName("email_template_id");

                    b.Property<int?>("NotifyRuleId")
                        .HasColumnType("int")
                        .HasColumnName("notify_rule_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_notify_rule_org_map_pkey");

                    b.ToTable("tbl_cnf_notify_rule_org_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfPriorityMatrix", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("CanOverride")
                        .HasColumnType("bit")
                        .HasColumnName("can_override");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("ImpactId")
                        .HasColumnType("int")
                        .HasColumnName("impact_id");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<int?>("SeverityId")
                        .HasColumnType("int")
                        .HasColumnName("severity_id");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_priority_matrix_pkey");

                    b.ToTable("tbl_cnf_priority_matrix");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfPriorityUserMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_priority_user_map_pk");

                    b.ToTable("tbl_cnf_priority_user_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfSequenceOverride", b =>
                {
                    b.Property<int>("OverrideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("override_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("OverrideId")
                        .HasName("tbl_cnf_sequence_override_pkey");

                    b.ToTable("tbl_cnf_sequence_override");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfSla", b =>
                {
                    b.Property<int>("SlaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sla_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("description");

                    b.Property<bool?>("ExcludeOpsHours")
                        .HasColumnType("bit")
                        .HasColumnName("exclude_ops_hours");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<int?>("ResolveMin")
                        .HasColumnType("int")
                        .HasColumnName("resolve_min");

                    b.Property<int?>("ResponseMin")
                        .HasColumnType("int")
                        .HasColumnName("response_min");

                    b.Property<string>("SlaSqlCondPause")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sla_sql_cond_pause");

                    b.Property<string>("SlaSqlCondStart")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sla_sql_cond_start");

                    b.Property<string>("SlaSqlCondStop")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sla_sql_cond_stop");

                    b.HasKey("SlaId")
                        .HasName("tbl_cnf_sla_pkey");

                    b.HasIndex("ModuleId");

                    b.HasIndex("OrgId");

                    b.ToTable("tbl_cnf_sla");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfSlaAction", b =>
                {
                    b.Property<int>("SlaActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sla_action_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("action_type");

                    b.Property<string>("BreachType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("breach_type");

                    b.Property<string>("MessageBody")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message_body");

                    b.Property<string>("MessageSubject")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("message_subject");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<string>("NotifyExcludeUserBusFieldIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notify_exclude_user_bus_field_ids");

                    b.Property<string>("NotifyExternalEmailIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notify_external_email_ids");

                    b.Property<string>("NotifyGroupIds")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("notify_group_ids");

                    b.Property<string>("NotifyUserBusFieldIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notify_user_bus_field_ids");

                    b.Property<string>("NotifyUserIds")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("notify_user_ids");

                    b.Property<int?>("SlaId")
                        .HasColumnType("int")
                        .HasColumnName("sla_id");

                    b.Property<int?>("SlaPercentage")
                        .HasColumnType("int")
                        .HasColumnName("sla_percentage");

                    b.Property<string>("UpdateFieldJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("update_field_json");

                    b.HasKey("SlaActionId")
                        .HasName("tbl_sla_action_pkey");

                    b.HasIndex("SlaId");

                    b.ToTable("tbl_cnf_sla_action");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfSlaCond", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AndOr")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("and_or");

                    b.Property<string>("EndBrackets")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("end_brackets");

                    b.Property<int>("FormFieldId")
                        .HasColumnType("int")
                        .HasColumnName("form_field_id");

                    b.Property<string>("MatchValues")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("match_values");

                    b.Property<string>("Operator")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("operator");

                    b.Property<string>("SlaCondType")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("sla_cond_type");

                    b.Property<int?>("SlaId")
                        .HasColumnType("int")
                        .HasColumnName("sla_id");

                    b.Property<string>("StartBrackets")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("start_brackets");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_sla_cond_pkey");

                    b.HasIndex("FormFieldId");

                    b.HasIndex("SlaId");

                    b.ToTable("tbl_cnf_sla_cond");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfTemplateChange", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("template_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("actual_end_date");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("actual_start_date");

                    b.Property<bool?>("AffectsPublicFacing")
                        .HasColumnType("bit")
                        .HasColumnName("affects_public_facing");

                    b.Property<int?>("AltLocationId")
                        .HasColumnType("int")
                        .HasColumnName("alt_location_id");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("AvailabilityEntId")
                        .HasColumnType("int")
                        .HasColumnName("availability_ent_id");

                    b.Property<string>("AvailabilityImplications")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("availability_implications");

                    b.Property<int?>("BackoutDurationEntId")
                        .HasColumnType("int")
                        .HasColumnName("backout_duration_ent_id");

                    b.Property<string>("BackoutPlan")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("backout_plan");

                    b.Property<bool?>("BackupAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("backup_available");

                    b.Property<bool?>("BackupTestedEntId")
                        .HasColumnType("bit")
                        .HasColumnName("backup_tested_ent_id");

                    b.Property<string>("BusinessImpact")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("business_impact");

                    b.Property<string>("BusinessRisk")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("business_risk");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("ChangeDescription")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("change_description");

                    b.Property<string>("ChangeReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("change_reason");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("close_date");

                    b.Property<int?>("ClosedById")
                        .HasColumnType("int")
                        .HasColumnName("closed_by_id");

                    b.Property<int?>("CommonImpactEntId")
                        .HasColumnType("int")
                        .HasColumnName("common_impact_ent_id");

                    b.Property<string>("CostImplications")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("cost_implications");

                    b.Property<int?>("CrInitiatorId")
                        .HasColumnType("int")
                        .HasColumnName("cr_initiator_id");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("CurrAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("curr_assign_queue_id");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("dept_id");

                    b.Property<int?>("FailoverAvailableEntId")
                        .HasColumnType("int")
                        .HasColumnName("failover_available_ent_id");

                    b.Property<int?>("FirstAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("first_assign_queue_id");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<bool?>("IsRejectApproval")
                        .HasColumnType("bit")
                        .HasColumnName("is_reject_approval");

                    b.Property<bool?>("IsWorkFlow")
                        .HasColumnType("bit")
                        .HasColumnName("is_work_flow");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<string>("LicensingImplications")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("licensing_implications");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<bool?>("PhysicalCabReq")
                        .HasColumnType("bit")
                        .HasColumnName("physical_cab_req");

                    b.Property<DateTime?>("PhysicalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("physical_date");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("planned_end_date");

                    b.Property<DateTime?>("PlannedStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("planned_start_date");

                    b.Property<int?>("PrevAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("prev_assign_queue_id");

                    b.Property<int?>("PreviouslyExecutedEntId")
                        .HasColumnType("int")
                        .HasColumnName("previously_executed_ent_id");

                    b.Property<string>("PrimaryCi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("primary_ci");

                    b.Property<int?>("PrimaryCiId")
                        .HasColumnType("int")
                        .HasColumnName("primary_ci_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<int?>("RiskEntId")
                        .HasColumnType("int")
                        .HasColumnName("risk_ent_id");

                    b.Property<string>("SecurityImplications")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("security_implications");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("short_desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<string>("TechnicalImpact")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("technical_impact");

                    b.Property<string>("TemplateNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("template_number");

                    b.Property<string>("TestPlan")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("test_plan");

                    b.Property<int?>("ThirdPartySupportEntId")
                        .HasColumnType("int")
                        .HasColumnName("third_party_support_ent_id");

                    b.Property<string>("Type")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("type");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("UserType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_type");

                    b.Property<int?>("UsersImpactedEntId")
                        .HasColumnType("int")
                        .HasColumnName("users_impacted_ent_id");

                    b.Property<string>("WorkFlowType")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("work_flow_type");

                    b.HasKey("TemplateId")
                        .HasName("tbl_cnf_template_change_pkey");

                    b.ToTable("tbl_cnf_template_change");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfTemplateIncident", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("template_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<string>("AltContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alt_contact_no");

                    b.Property<int?>("AltLocationId")
                        .HasColumnType("int")
                        .HasColumnName("alt_location_id");

                    b.Property<string>("ApprovalType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("approval_type");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("CausedByEntId")
                        .HasColumnType("int")
                        .HasColumnName("caused_by_ent_id");

                    b.Property<int?>("ChannelEntId")
                        .HasColumnType("int")
                        .HasColumnName("channel_ent_id");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closed_on");

                    b.Property<int?>("CommonImpactEntId")
                        .HasColumnType("int")
                        .HasColumnName("common_impact_ent_id");

                    b.Property<int?>("ConfigCiId")
                        .HasColumnType("int")
                        .HasColumnName("config_ci_id");

                    b.Property<string>("ConfigItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("config_item");

                    b.Property<int?>("ConfigItemDbId")
                        .HasColumnType("int")
                        .HasColumnName("config_item_db_id");

                    b.Property<string>("ConfigItemId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("config_item_id");

                    b.Property<int?>("ConfigItemType")
                        .HasColumnType("int")
                        .HasColumnName("config_item_type");

                    b.Property<string>("ContactNo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contact_no");

                    b.Property<bool?>("CreateKbFlag")
                        .HasColumnType("bit")
                        .HasColumnName("create_kb_flag");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("CurrAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("curr_assign_queue_id");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("dept_id");

                    b.Property<DateTime?>("EmailResponseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("email_response_date");

                    b.Property<DateTime?>("EscalationTsDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("escalation_ts_date");

                    b.Property<int?>("FirstAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("first_assign_queue_id");

                    b.Property<DateTime?>("FirstResponseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("first_response_date");

                    b.Property<string>("Flags")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("flags");

                    b.Property<DateTime?>("FsCompletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fs_completed_date");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsAutoClosed")
                        .HasColumnType("bit")
                        .HasColumnName("is_auto_closed");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<bool?>("IsRejectApproval")
                        .HasColumnType("bit")
                        .HasColumnName("is_reject_approval");

                    b.Property<bool?>("IsWorkFlow")
                        .HasColumnType("bit")
                        .HasColumnName("is_work_flow");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<DateTime?>("MisrouteTsDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("misroute_ts_date");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.Property<int?>("NefcrDescEntId")
                        .HasColumnType("int")
                        .HasColumnName("nefcr_desc_ent_id");

                    b.Property<int?>("OnBehalfOfId")
                        .HasColumnType("int")
                        .HasColumnName("on_behalf_of_id");

                    b.Property<DateTime?>("OnSiteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("on_site_date");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("ParentIncidentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_incident_id");

                    b.Property<int?>("PrevAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("prev_assign_queue_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<string>("ResolutionCi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("resolution_ci");

                    b.Property<int?>("ResolutionCiId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_ci_id");

                    b.Property<int?>("ResolutionCiType")
                        .HasColumnType("int")
                        .HasColumnName("resolution_ci_type");

                    b.Property<string>("ResolutionComment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resolution_comment");

                    b.Property<int?>("ResolutionCriteriaEntId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_criteria_ent_id");

                    b.Property<int?>("ResolutionMethodEntId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_method_ent_id");

                    b.Property<int?>("ResolvedById")
                        .HasColumnType("int")
                        .HasColumnName("resolved_by_id");

                    b.Property<DateTime?>("ResolvedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolved_on");

                    b.Property<int?>("SeverityEntId")
                        .HasColumnType("int")
                        .HasColumnName("severity_ent_id");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("short_desc");

                    b.Property<DateTime?>("SiteVisitOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("site_visit_on");

                    b.Property<string>("SlaBreachReason")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("sla_breach_reason");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<DateTime?>("TargetResolveOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("target_resolve_on");

                    b.Property<string>("TemplateNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("template_number");

                    b.Property<int?>("TotDowntimeMin")
                        .HasColumnType("int")
                        .HasColumnName("tot_downtime_min");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("UserType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_type");

                    b.Property<string>("VendorTicketId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vendor_ticket_id");

                    b.Property<string>("WatchListJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("watch_list_json");

                    b.Property<string>("WhiteBoardNo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("white_board_no");

                    b.Property<string>("WorkFlowType")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("work_flow_type");

                    b.HasKey("TemplateId")
                        .HasName("tbl_cnf_template_incident_pkey");

                    b.ToTable("tbl_cnf_template_incident");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfTemplateProblem", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("template_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AltLocationId")
                        .HasColumnType("int")
                        .HasColumnName("alt_location_id");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("ChannelEntId")
                        .HasColumnType("int")
                        .HasColumnName("channel_ent_id");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("close_date");

                    b.Property<int?>("ClosedById")
                        .HasColumnType("int")
                        .HasColumnName("closed_by_id");

                    b.Property<string>("ClosureDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("closure_desc");

                    b.Property<int?>("CommonImpactEntId")
                        .HasColumnType("int")
                        .HasColumnName("common_impact_ent_id");

                    b.Property<int?>("ConfigCiId")
                        .HasColumnType("int")
                        .HasColumnName("config_ci_id");

                    b.Property<string>("ConfigItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("config_item");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_no");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("CurrAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("curr_assign_queue_id");

                    b.Property<DateTime?>("DateIdentified")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_identified");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("dept_id");

                    b.Property<int?>("FirstAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("first_assign_queue_id");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<string>("ImpactedCi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("impacted_ci");

                    b.Property<int?>("ImpactedCiId")
                        .HasColumnType("int")
                        .HasColumnName("impacted_ci_id");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<bool?>("IsRejectApproval")
                        .HasColumnType("bit")
                        .HasColumnName("is_reject_approval");

                    b.Property<bool?>("IsTested")
                        .HasColumnType("bit")
                        .HasColumnName("is_tested");

                    b.Property<bool?>("IsWorkFlow")
                        .HasColumnType("bit")
                        .HasColumnName("is_work_flow");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<DateTime?>("KnownerrDateIdentified")
                        .HasColumnType("datetime2")
                        .HasColumnName("knownerr_date_identified");

                    b.Property<int?>("KnownerrSrcEntId")
                        .HasColumnType("int")
                        .HasColumnName("knownerr_src_ent_id");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("PrevAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("prev_assign_queue_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<string>("ProblemDescription")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("problem_description");

                    b.Property<string>("RootCause")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("root_cause");

                    b.Property<int?>("SeverityEntId")
                        .HasColumnType("int")
                        .HasColumnName("severity_ent_id");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("short_desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<int?>("SymptomCodeEntId")
                        .HasColumnType("int")
                        .HasColumnName("symptom_code_ent_id");

                    b.Property<string>("TemplateNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("template_number");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("UserType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_type");

                    b.Property<string>("WorkFlowType")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("work_flow_type");

                    b.Property<string>("Workaround")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("workaround");

                    b.HasKey("TemplateId")
                        .HasName("tbl_cnf_template_problem_pkey");

                    b.ToTable("tbl_cnf_template_problem");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfTemplateQueue", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("template_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queue_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<string>("TemplateName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("template_name");

                    b.HasKey("TemplateId")
                        .HasName("tbl_cnf_template_queue_pkey");

                    b.ToTable("tbl_cnf_template_queue");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfTemplateQueueMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queue_id");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_queue_template_map_pkey");

                    b.HasIndex("ModuleId");

                    b.HasIndex("QueueId");

                    b.ToTable("tbl_cnf_template_queue_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfTemplateRoleMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_template_role_map_pkey");

                    b.ToTable("tbl_cnf_template_role_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfTemplateServiceReq", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("template_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<string>("AltContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alt_contact_no");

                    b.Property<int?>("AltLocationId")
                        .HasColumnType("int")
                        .HasColumnName("alt_location_id");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("ChannelEntId")
                        .HasColumnType("int")
                        .HasColumnName("channel_ent_id");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("close_date");

                    b.Property<int?>("CommonImpactEntId")
                        .HasColumnType("int")
                        .HasColumnName("common_impact_ent_id");

                    b.Property<int?>("ConfigCiId")
                        .HasColumnType("int")
                        .HasColumnName("config_ci_id");

                    b.Property<string>("ConfigItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("config_item");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_no");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("CurrAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("curr_assign_queue_id");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("dept_id");

                    b.Property<int?>("FirstAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("first_assign_queue_id");

                    b.Property<int?>("FulfilledById")
                        .HasColumnType("int")
                        .HasColumnName("fulfilled_by_id");

                    b.Property<bool?>("FulfilledFirstTime")
                        .HasColumnType("bit")
                        .HasColumnName("fulfilled_first_time");

                    b.Property<string>("FulfillmentComment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fulfillment_comment");

                    b.Property<DateTime?>("FulfillmentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fulfillment_date");

                    b.Property<int?>("FulfillmentMethodEntId")
                        .HasColumnType("int")
                        .HasColumnName("fulfillment_method_ent_id");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsAutoClosed")
                        .HasColumnType("bit")
                        .HasColumnName("is_auto_closed");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<bool?>("IsRejectApproval")
                        .HasColumnType("bit")
                        .HasColumnName("is_reject_approval");

                    b.Property<bool?>("IsWorkFlow")
                        .HasColumnType("bit")
                        .HasColumnName("is_work_flow");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<string>("KbRefNo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("kb_ref_no");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.Property<int?>("OnBehalfOfId")
                        .HasColumnType("int")
                        .HasColumnName("on_behalf_of_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("PrevAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("prev_assign_queue_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<int?>("SeverityEntId")
                        .HasColumnType("int")
                        .HasColumnName("severity_ent_id");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("short_description");

                    b.Property<DateTime?>("SiteVisitDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("site_visit_date");

                    b.Property<string>("SlaBreachReason")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("sla_breach_reason");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<DateTime?>("TargetFulfillOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("target_fulfill_on");

                    b.Property<string>("TemplateNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("template_number");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("UserType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_type");

                    b.Property<string>("VendorTicketId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vendor_ticket_id");

                    b.Property<string>("WatchListJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("watch_list_json");

                    b.Property<string>("WorkFlowType")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("work_flow_type");

                    b.HasKey("TemplateId")
                        .HasName("tbl_cnf_template_service_req_pkey");

                    b.ToTable("tbl_cnf_template_service_req");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfTemplateTktApproval", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("appr_description");

                    b.Property<int?>("ApprQueueId")
                        .HasColumnType("int")
                        .HasColumnName("appr_queue_id");

                    b.Property<int?>("ApproverId")
                        .HasColumnType("int")
                        .HasColumnName("approver_id");

                    b.Property<bool?>("LinkedTask")
                        .HasColumnType("bit")
                        .HasColumnName("linked_task");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_template_tkt_approval_pk");

                    b.ToTable("tbl_cnf_template_tkt_approval");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfTemplateTktTask", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovalTemplateId")
                        .HasColumnType("int")
                        .HasColumnName("approval_template_id");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comments");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queue_id");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.Property<string>("TaskTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("task_title");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_template_tkt_task_pk");

                    b.ToTable("tbl_cnf_template_tkt_task");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfTicketSch", b =>
                {
                    b.Property<int>("TicketSchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ticket_sch_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_active")
                        .HasDefaultValueSql("('true')");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<string>("SchDetail")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("sch_detail");

                    b.Property<string>("ScheduleType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("schedule_type");

                    b.Property<string>("ScheuleName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("scheule_name");

                    b.Property<DateTime?>("StartFrom")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_from");

                    b.HasKey("TicketSchId")
                        .HasName("tbl_cnf_rule_scheduler_pkey");

                    b.ToTable("tbl_cnf_ticket_sch");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfTicketTrending", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("column_name");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Uid")
                        .HasName("tbl_cnf_ticket_trending_pk");

                    b.ToTable("tbl_cnf_ticket_trending");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfTktNumFormat", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ticket_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("IdFormat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id_format");

                    b.Property<int?>("IncNumLength")
                        .HasColumnType("int")
                        .HasColumnName("inc_num_length");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.HasKey("TicketId")
                        .HasName("tbl_mst_ticket_id_format_pk");

                    b.ToTable("tbl_cnf_tkt_num_format");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblDboardDashboard", b =>
                {
                    b.Property<int>("DashboardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("dashboard_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessUserIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("access_user_ids");

                    b.Property<string>("Accessibility")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("accessibility");

                    b.Property<int?>("AutoRefreshTime")
                        .HasColumnType("int")
                        .HasColumnName("auto_refresh_time");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("DboardModuleId")
                        .HasColumnType("int")
                        .HasColumnName("dboard_module_id");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsHomePage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_home_page")
                        .HasDefaultValueSql("('false')");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("DashboardId")
                        .HasName("tbl_dboard_dashboard_pkey");

                    b.ToTable("tbl_dboard_dashboard");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblDboardDashboardFilter", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AndOr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("and_or");

                    b.Property<int?>("DashboardId")
                        .HasColumnType("int")
                        .HasColumnName("dashboard_id");

                    b.Property<string>("DateOperandType1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date_operand_type1");

                    b.Property<string>("DateOperandType2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date_operand_type2");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<string>("InBracket")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("in_bracket");

                    b.Property<string>("Operand1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("operand1");

                    b.Property<string>("Operand2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("operand2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("operator");

                    b.Property<string>("OutBracket")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("out_bracket");

                    b.Property<string>("SubOperand1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sub_operand1");

                    b.Property<string>("SubOperand2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sub_operand2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("ViewColumnName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("view_column_name");

                    b.HasKey("Uid")
                        .HasName("tbl_dboard_dashboard_filter_pkey");

                    b.ToTable("tbl_dboard_dashboard_filter");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblDboardDashboardPanel", b =>
                {
                    b.Property<int>("PanelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("panel_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Column")
                        .HasColumnType("int")
                        .HasColumnName("column");

                    b.Property<int?>("DashboardId")
                        .HasColumnType("int")
                        .HasColumnName("dashboard_id");

                    b.Property<int?>("DataDbViewId")
                        .HasColumnType("int")
                        .HasColumnName("data_db_view_id");

                    b.Property<int?>("DataModuleId")
                        .HasColumnType("int")
                        .HasColumnName("data_module_id");

                    b.Property<int?>("Height")
                        .HasColumnType("int")
                        .HasColumnName("height");

                    b.Property<bool?>("IsIgnoreDashboardFilter")
                        .HasColumnType("bit")
                        .HasColumnName("is_ignore_dashboard_filter");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("ReadyModuleId")
                        .HasColumnType("int")
                        .HasColumnName("ready_module_id");

                    b.Property<int?>("Row")
                        .HasColumnType("int")
                        .HasColumnName("row");

                    b.Property<string>("SqlQueryData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sql_query_data");

                    b.Property<string>("SqlQueryDrilldown")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sql_query_drilldown");

                    b.Property<int?>("TempPanelId")
                        .HasColumnType("int")
                        .HasColumnName("temp_panel_id");

                    b.Property<int?>("TopNRecord")
                        .HasColumnType("int")
                        .HasColumnName("top_n_record");

                    b.Property<string>("VisualCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("visual_code");

                    b.Property<int?>("VisualId")
                        .HasColumnType("int")
                        .HasColumnName("visual_id");

                    b.Property<int?>("Width")
                        .HasColumnType("int")
                        .HasColumnName("width");

                    b.HasKey("PanelId")
                        .HasName("tbl_dboard_dashboard_panel_pkey");

                    b.ToTable("tbl_dboard_dashboard_panel");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblDboardDashboardPanelColor", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("color_code");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("color_name");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<int?>("PanelId")
                        .HasColumnType("int")
                        .HasColumnName("panel_id");

                    b.HasKey("Uid")
                        .HasName("tbl_dboard_dashboard_panel_color_pkey");

                    b.ToTable("tbl_dboard_dashboard_panel_color");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblDboardDashboardPanelDetail", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_dboard_dashboard_panel_details_uid_seq])");

                    b.Property<int?>("DbViewColumnId")
                        .HasColumnType("int")
                        .HasColumnName("db_view_column_id");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<string>("DisplayText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("display_text");

                    b.Property<string>("FormatText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("format_text");

                    b.Property<int?>("PanelId")
                        .HasColumnType("int")
                        .HasColumnName("panel_id");

                    b.Property<string>("SortOrder")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sort_order");

                    b.Property<string>("SummaryType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("summary_type");

                    b.Property<int?>("VisualDetailId")
                        .HasColumnType("int")
                        .HasColumnName("visual_detail_id");

                    b.HasKey("Uid")
                        .HasName("tbl_dboard_dashboard_panel_details_pkey");

                    b.ToTable("tbl_dboard_dashboard_panel_detail");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblDboardDashboardPanelDrilldown", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DbViewColumnId")
                        .HasColumnType("int")
                        .HasColumnName("db_view_column_id");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<string>("DisplayText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("display_text");

                    b.Property<string>("FormatText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("format_text");

                    b.Property<int?>("PanelId")
                        .HasColumnType("int")
                        .HasColumnName("panel_id");

                    b.Property<string>("SortOrder")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sort_order");

                    b.Property<string>("SummaryType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("summary_type");

                    b.HasKey("Uid")
                        .HasName("tbl_dboard_dashboard_panel_drilldown_pkey");

                    b.ToTable("tbl_dboard_dashboard_panel_drilldown");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblDboardDashboardPanelFilter", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AndOr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("and_or");

                    b.Property<string>("DateOperandType1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date_operand_type1");

                    b.Property<string>("DateOperandType2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date_operand_type2");

                    b.Property<int?>("DbViewColumnId")
                        .HasColumnType("int")
                        .HasColumnName("db_view_column_id");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<string>("InBracket")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("in_bracket");

                    b.Property<string>("Operand1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("operand1");

                    b.Property<string>("Operand2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("operand2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("operator");

                    b.Property<string>("OutBracket")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("out_bracket");

                    b.Property<int?>("PanelId")
                        .HasColumnType("int")
                        .HasColumnName("panel_id");

                    b.Property<string>("SubOperand1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sub_operand1");

                    b.Property<string>("SubOperand2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sub_operand2");

                    b.HasKey("Uid")
                        .HasName("tbl_dboard_dashboard_panel_filter_pkey");

                    b.ToTable("tbl_dboard_dashboard_panel_filter");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblDboardMstVisual", b =>
                {
                    b.Property<int>("VisualId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("visual_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("ImgSrc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("img_src");

                    b.Property<bool?>("IsColorOption")
                        .HasColumnType("bit")
                        .HasColumnName("is_color_option");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Options")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("options");

                    b.HasKey("VisualId")
                        .HasName("tbl_dboard_mst_visual_pkey");

                    b.ToTable("tbl_dboard_mst_visual");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblDboardMstVisualDetail", b =>
                {
                    b.Property<int>("VisualDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("visual_detail_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_dboard_mst_visual_details_visual_details_id_seq])");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<int?>("CtrlHeightPx")
                        .HasColumnType("int")
                        .HasColumnName("ctrl_height_px");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<bool?>("IsMultiSelect")
                        .HasColumnType("bit")
                        .HasColumnName("is_multi_select");

                    b.Property<bool?>("IsRequired")
                        .HasColumnType("bit")
                        .HasColumnName("is_required");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("SummaryMode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("summary_mode");

                    b.Property<int?>("VisualId")
                        .HasColumnType("int")
                        .HasColumnName("visual_id");

                    b.HasKey("VisualDetailId")
                        .HasName("tbl_dboard_mst_visual_details_pkey");

                    b.ToTable("tbl_dboard_mst_visual_detail");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblGridState", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GridName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("grid_name");

                    b.Property<string>("GridState")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("grid_state");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Uid")
                        .HasName("tbl_grid_state_pk_uid");

                    b.ToTable("tbl_grid_state");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblGridState1", b =>
                {
                    b.Property<string>("GridName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("grid_name");

                    b.Property<string>("GridState")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("grid_state");

                    b.Property<int?>("Uid")
                        .HasColumnType("int")
                        .HasColumnName("uid");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.ToTable("tbl_grid_state1");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstActionMenu", b =>
                {
                    b.Property<int>("ActionMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("action_menu_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionCode")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("action_code");

                    b.Property<string>("ActionName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("action_name");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.HasKey("ActionMenuId")
                        .HasName("tbl_mst_action_menu_pk");

                    b.ToTable("tbl_mst_action_menu");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstActivityType", b =>
                {
                    b.Property<int>("ActivityTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_type_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("action_type");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.HasKey("ActivityTypeId")
                        .HasName("tbl_mst_activity_type_pk");

                    b.ToTable("tbl_mst_activity_type");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstAdminActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("FieldsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fields_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int")
                        .HasColumnName("performed_by_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("ActivityLogId")
                        .HasName("tbl_trn_activity_log_pkey");

                    b.HasIndex("ModuleId");

                    b.ToTable("tbl_mst_admin_activity_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstAdminModule", b =>
                {
                    b.Property<int>("AdminModuleId")
                        .HasColumnType("int")
                        .HasColumnName("admin_module_id");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("module_name");

                    b.HasKey("AdminModuleId")
                        .HasName("tbl_mst_admin_module_pk");

                    b.ToTable("tbl_mst_admin_module");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attachment_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_attachment_attachment_id_seq])");

                    b.Property<string>("FileData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_data");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("AttachmentId")
                        .HasName("tbl_attachment_pkey");

                    b.ToTable("tbl_mst_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstBulletin", b =>
                {
                    b.Property<int>("BulletinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bulletin_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_mst_news_bulletin_bulletin_id_seq])");

                    b.Property<int?>("AttachmentId")
                        .HasColumnType("int")
                        .HasColumnName("attachment_id");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("body");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title");

                    b.Property<string>("UserType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_type");

                    b.Property<string>("WebUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("web_url");

                    b.HasKey("BulletinId")
                        .HasName("tbl_mst_news_bulletin_pkey");

                    b.ToTable("tbl_mst_bulletin");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstCity", b =>
                {
                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("city_id");

                    b.Property<string>("CityName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("city_name");

                    b.Property<int?>("ContId")
                        .HasColumnType("int")
                        .HasColumnName("cont_id");

                    b.Property<int?>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("state_id");

                    b.HasKey("CityId")
                        .HasName("tbl_mst_city_pkey");

                    b.ToTable("tbl_mst_city");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstCountry", b =>
                {
                    b.Property<int>("ContId")
                        .HasColumnType("int")
                        .HasColumnName("cont_id");

                    b.Property<string>("ContName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("cont_name");

                    b.HasKey("ContId")
                        .HasName("tbl_mst_country_pkey");

                    b.ToTable("tbl_mst_country");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstCtiEntModMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EntityName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("entity_name");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_cti_ent_mod_map_pk");

                    b.ToTable("tbl_mst_cti_ent_mod_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstDbView", b =>
                {
                    b.Property<int>("DbViewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("db_view_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_mst_db_module_view_db_module_view_id_seq])");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("DbViewName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("db_view_name");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDashboard")
                        .HasColumnType("bit")
                        .HasColumnName("is_dashboard");

                    b.Property<bool?>("IsReporting")
                        .HasColumnType("bit")
                        .HasColumnName("is_reporting");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("OrgDbColName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("org_db_col_name");

                    b.Property<string>("QueueDbColName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("queue_db_col_name");

                    b.HasKey("DbViewId")
                        .HasName("tbl_mst_db_module_view_pkey");

                    b.ToTable("tbl_mst_db_view");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstDbViewColumn", b =>
                {
                    b.Property<int>("DbViewColumnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("db_view_column_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_mst_db_module_view_columns_db_view_column_id_seq])");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data_type");

                    b.Property<string>("DbColumnName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("db_column_name");

                    b.Property<int>("DbViewId")
                        .HasColumnType("int")
                        .HasColumnName("db_view_id");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<bool?>("IsHide")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_hide")
                        .HasDefaultValueSql("('false')");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("DbViewColumnId")
                        .HasName("tbl_mst_db_module_view_columns_pkey");

                    b.HasIndex("DbViewId");

                    b.ToTable("tbl_mst_db_view_column");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstDefaultConfiguration", b =>
                {
                    b.Property<int>("ConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("config_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<int?>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queue_id");

                    b.Property<int?>("ResolutionCausedById")
                        .HasColumnType("int")
                        .HasColumnName("resolution_caused_by_id");

                    b.Property<string>("ResolutionComment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resolution_comment");

                    b.Property<int?>("ResolutionCriteriaId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_criteria_id");

                    b.Property<int?>("ResolutionMethodId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_method_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.HasKey("ConfigId")
                        .HasName("tbl_mst_default_configuration_pkey");

                    b.ToTable("tbl_mst_default_configuration");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstDepartment", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("department_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApproverUserId")
                        .HasColumnType("int")
                        .HasColumnName("approver_user_id");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("description");

                    b.Property<int?>("HeadUserId")
                        .HasColumnType("int")
                        .HasColumnName("head_user_id");

                    b.Property<int?>("InchargeUserId")
                        .HasColumnType("int")
                        .HasColumnName("incharge_user_id");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("is_default");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.HasKey("DepartmentId")
                        .HasName("tbl_mst_department_pkey");

                    b.HasIndex("ApproverUserId");

                    b.HasIndex("HeadUserId");

                    b.HasIndex("InchargeUserId");

                    b.HasIndex("OrgId");

                    b.ToTable("tbl_mst_department");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstDeptCategoryMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("dept_id");

                    b.Property<int?>("EntityAttrId")
                        .HasColumnType("int")
                        .HasColumnName("entity_attr_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_dept_entityattr_map_pk");

                    b.ToTable("tbl_mst_dept_category_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstEntity", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("entity_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("description ");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("Level")
                        .HasColumnType("int")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.HasKey("EntityId")
                        .HasName("tbl_mst_entity_pkey");

                    b.HasIndex(new[] { "Name" }, "tbl_mst_entity_name_idx");

                    b.ToTable("tbl_mst_entity");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstEntityAttr", b =>
                {
                    b.Property<int>("EntityAttrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("entity_attr_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("description");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int")
                        .HasColumnName("entity_id");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("MainParentId")
                        .HasColumnType("int")
                        .HasColumnName("main_parent_id");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("ParentEntityAttrId")
                        .HasColumnType("int")
                        .HasColumnName("parent_entity_attr_id");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.HasKey("EntityAttrId")
                        .HasName("tbl_mst_entity_list_pkey");

                    b.HasIndex(new[] { "EntityId" }, "tbl_mst_entity_attr_entity_id_idx");

                    b.HasIndex(new[] { "OrgId" }, "tbl_mst_entity_attr_org_id_idx");

                    b.ToTable("tbl_mst_entity_attr");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstEntityModuleMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EntityId")
                        .HasColumnType("int")
                        .HasColumnName("entity_id");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_entity_module_map_pkey");

                    b.ToTable("tbl_mst_entity_module_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstEntityattrOrgMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EntityAttrId")
                        .HasColumnType("int")
                        .HasColumnName("entity_attr_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_entityattr_org_map_pk");

                    b.ToTable("tbl_mst_entityattr_org_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstFlash", b =>
                {
                    b.Property<int>("FlashId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("flash_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("FlashDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("flash_desc");

                    b.Property<string>("FlashTitle")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("flash_title");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.HasKey("FlashId")
                        .HasName("tbl_mst_flash_pk");

                    b.ToTable("tbl_mst_flash");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstHoliday", b =>
                {
                    b.Property<int>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("holiday_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ApplyToOrg")
                        .HasColumnType("bit")
                        .HasColumnName("apply_to_org");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("HolidayDate")
                        .HasColumnType("date")
                        .HasColumnName("holiday_date");

                    b.Property<int?>("HolidayGrpId")
                        .HasColumnType("int")
                        .HasColumnName("holiday_grp_id");

                    b.Property<string>("HolidayName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("holiday_name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("site_id");

                    b.HasKey("HolidayId")
                        .HasName("tbl_mst_holiday_pkey");

                    b.HasIndex("OrgId");

                    b.HasIndex("SiteId");

                    b.ToTable("tbl_mst_holiday");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstHolidayGrp", b =>
                {
                    b.Property<int>("HolidayGrpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("holiday_grp_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ApplyToOrg")
                        .HasColumnType("bit")
                        .HasColumnName("apply_to_org");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.HasKey("HolidayGrpId")
                        .HasName("tbl_mst_holiday_grp_pkey");

                    b.ToTable("tbl_mst_holiday_grp");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstHolidayGrpSiteMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HolidayGrpId")
                        .HasColumnType("int")
                        .HasColumnName("holiday_grp_id");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("site_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_holiday_grp_site_map_pkey");

                    b.ToTable("tbl_mst_holiday_grp_site_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstHolidayQueueMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HolidayGrpId")
                        .HasColumnType("int")
                        .HasColumnName("holiday_grp_id");

                    b.Property<int?>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queue_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_holiday_queue_map_pk");

                    b.ToTable("tbl_mst_holiday_queue_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstLanguage", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("language_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("alias");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("LanguageName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("language_name");

                    b.HasKey("LanguageId")
                        .HasName("tbl_language _pkey");

                    b.ToTable("tbl_mst_language ");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstLdapadAttr", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("PropertyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("property_name");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_ldapad_attr_pk");

                    b.ToTable("tbl_mst_ldapad_attr");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstLdapuserAttr", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("PropertyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("property_name");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_ldapuser_attr_pk");

                    b.ToTable("tbl_mst_ldapuser_attr");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstMenu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("menu_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountProperty")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("count_property");

                    b.Property<string>("IconTag")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("icon_tag");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_active")
                        .HasDefaultValueSql("('true')");

                    b.Property<bool?>("IsDynSubmenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_dyn_submenu")
                        .HasDefaultValueSql("('false')");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<string>("PageCode")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("page_code");

                    b.Property<int?>("ParentMenuId")
                        .HasColumnType("int")
                        .HasColumnName("parent_menu_id");

                    b.Property<string>("RouterLink")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("router_link");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.Property<string>("SubmenuKey")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("submenu_key");

                    b.HasKey("MenuId")
                        .HasName("tbl_mst_menu_pkey");

                    b.ToTable("tbl_mst_menu");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstModule", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("module_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("MainTableName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("main_table_name");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Options")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("options");

                    b.Property<string>("PkColumnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("pk_column_name");

                    b.HasKey("ModuleId")
                        .HasName("tbl_mst_module_pkey");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("tbl_mst_module");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstModuleCustField", b =>
                {
                    b.Property<int>("FieldUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("field_uid")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_mst_module_cust_field_uid_seq])");

                    b.Property<string>("ControlDivClass")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("control_div_class");

                    b.Property<string>("ControlType")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("control_type");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("DefaultValue")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("default_value");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<string>("FieldCode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("field_code");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsBaseField")
                        .HasColumnType("bit")
                        .HasColumnName("is_base_field");

                    b.Property<bool?>("IsBaselineField")
                        .HasColumnType("bit")
                        .HasColumnName("is_baseline_field");

                    b.Property<bool?>("IsRequired")
                        .HasColumnType("bit")
                        .HasColumnName("is_required");

                    b.Property<bool?>("IsShowCreateScreen")
                        .HasColumnType("bit")
                        .HasColumnName("is_show_create_screen");

                    b.Property<bool?>("IsShowEditScreen")
                        .HasColumnType("bit")
                        .HasColumnName("is_show_edit_screen");

                    b.Property<int?>("MaxLength")
                        .HasColumnType("int")
                        .HasColumnName("max_length");

                    b.Property<int?>("MinLength")
                        .HasColumnType("int")
                        .HasColumnName("min_length");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("OptionJson")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("option_json");

                    b.Property<string>("Title")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("title");

                    b.HasKey("FieldUid")
                        .HasName("tbl_mst_module_cust_field_pk");

                    b.ToTable("tbl_mst_module_cust_field");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstModuleCustFieldRoleMapper", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("access_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("FieldUid")
                        .HasColumnType("int")
                        .HasColumnName("field_uid");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_module_cust_field_role_mapper_pk");

                    b.HasIndex("FieldUid");

                    b.ToTable("tbl_mst_module_cust_field_role_mapper");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstOrg", b =>
                {
                    b.Property<int>("OrgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("org_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Advisary")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("advisary");

                    b.Property<int?>("City")
                        .HasColumnType("int")
                        .HasColumnName("city");

                    b.Property<int?>("Country")
                        .HasColumnType("int")
                        .HasColumnName("country");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("description");

                    b.Property<string>("EmailId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("email_id");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fax");

                    b.Property<byte[]>("HeaderImg")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("header_img");

                    b.Property<string>("HoAddress")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ho_address");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeptWiseCti")
                        .HasColumnType("bit")
                        .HasColumnName("is_dept_wise_cti");

                    b.Property<byte[]>("LoginImg")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("login_img");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<int?>("SelfServiceQueueId")
                        .HasColumnType("int")
                        .HasColumnName("self_service_queue_Id");

                    b.Property<string>("SenderName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("sender_name");

                    b.Property<int?>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.Property<string>("SupportEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("support_email");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("time_zone");

                    b.Property<string>("WebUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("web_url");

                    b.Property<string>("Zipcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("zipcode");

                    b.HasKey("OrgId")
                        .HasName("tbl_mst_organization_pkey");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("tbl_mst_org");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstOrgModuleMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_org_module_map_pkey");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ModuleId");

                    b.HasIndex("OrgId");

                    b.ToTable("tbl_mst_org_module_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstOrgQueueMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queue_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_org_queue_map_pkey");

                    b.HasIndex("OrgId");

                    b.HasIndex("QueueId");

                    b.ToTable("tbl_mst_org_queue_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstOrgSiteMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("site_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_org_site_map_pkey");

                    b.HasIndex("OrgId");

                    b.HasIndex("SiteId");

                    b.ToTable("tbl_mst_org_site_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstPwdPolicy", b =>
                {
                    b.Property<int>("Pid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheckPreviousPwd")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("check_previous_pwd");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("IsAlphaNumeric")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("is_alpha_numeric");

                    b.Property<string>("IsMixedCase")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("is_mixed_case");

                    b.Property<string>("IsSpecialChar")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("is_special_char");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("PreviousPwd")
                        .HasColumnType("int")
                        .HasColumnName("previous_pwd");

                    b.Property<int?>("PwdExpiry")
                        .HasColumnType("int")
                        .HasColumnName("pwd_expiry");

                    b.Property<int?>("PwdLength")
                        .HasColumnType("int")
                        .HasColumnName("pwd_length");

                    b.HasKey("Pid")
                        .HasName("tbl_mst_pwd_policy_pk");

                    b.ToTable("tbl_mst_pwd_policy");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstQueue", b =>
                {
                    b.Property<int>("QueueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("queue_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("EmailId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email_id");

                    b.Property<string>("EmailIdJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email_id_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("MailToGroup")
                        .HasColumnType("bit")
                        .HasColumnName("mail_to_group");

                    b.Property<bool?>("MailToGroupMember")
                        .HasColumnType("bit")
                        .HasColumnName("mail_to_group_member");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("QueueType")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("queue_type");

                    b.HasKey("QueueId")
                        .HasName("tbl_mst_queue_pkey");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("tbl_mst_queue");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstQueueModuleMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queue_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_queue_module_map_pkey");

                    b.ToTable("tbl_mst_queue_module_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsSuperAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("is_super_admin");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("UserType")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("user_type");

                    b.HasKey("RoleId")
                        .HasName("tbl_mst_role_pkey");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("tbl_mst_role");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstRoleAccessRight", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionMenuJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("action_menu_json");

                    b.Property<bool?>("CanAdd")
                        .HasColumnType("bit")
                        .HasColumnName("can_add");

                    b.Property<bool?>("CanRead")
                        .HasColumnType("bit")
                        .HasColumnName("can_read");

                    b.Property<bool?>("CanWrite")
                        .HasColumnType("bit")
                        .HasColumnName("can_write");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Uid")
                        .HasName("tbl_conf_access_right_pkey");

                    b.HasIndex("RoleId");

                    b.ToTable("tbl_mst_role_access_right");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstRoleActionRight", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActionId")
                        .HasColumnType("int")
                        .HasColumnName("action_id");

                    b.Property<bool?>("IsApply")
                        .HasColumnType("bit")
                        .HasColumnName("is_apply");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_role_action_right_pk");

                    b.ToTable("tbl_mst_role_action_right");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstSite", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("site_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("code");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("PrimaryAddr1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("primary_addr1");

                    b.Property<string>("PrimaryAddr2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("primary_addr2");

                    b.Property<int?>("PrimaryCity")
                        .HasColumnType("int")
                        .HasColumnName("primary_city");

                    b.Property<int?>("PrimaryCountry")
                        .HasColumnType("int")
                        .HasColumnName("primary_country");

                    b.Property<int?>("PrimaryState")
                        .HasColumnType("int")
                        .HasColumnName("primary_state");

                    b.Property<string>("PrimaryZipcode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("primary_zipcode");

                    b.Property<string>("SecondaryAddr1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("secondary_addr1");

                    b.Property<string>("SecondaryAddr2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("secondary_addr2");

                    b.Property<int?>("SecondaryCity")
                        .HasColumnType("int")
                        .HasColumnName("secondary_city");

                    b.Property<int?>("SecondaryCountry")
                        .HasColumnType("int")
                        .HasColumnName("secondary_country");

                    b.Property<int?>("SecondaryState")
                        .HasColumnType("int")
                        .HasColumnName("secondary_state");

                    b.Property<string>("SecondaryZipcode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("secondary_zipcode");

                    b.Property<int?>("WorkHrId")
                        .HasColumnType("int")
                        .HasColumnName("work_hr_id");

                    b.HasKey("SiteId")
                        .HasName("tbl_mst_site_pkey");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("tbl_mst_site");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstSlaColor", b =>
                {
                    b.Property<int>("SlaColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sla_color_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("color_code");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("PercentageFrom")
                        .HasColumnType("int")
                        .HasColumnName("percentage_from");

                    b.Property<int?>("PercentageTo")
                        .HasColumnType("int")
                        .HasColumnName("percentage_to");

                    b.Property<string>("SlaMilestone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sla_milestone");

                    b.HasKey("SlaColorId")
                        .HasName("tbl_sla_color_pkey");

                    b.HasIndex("OrgId");

                    b.ToTable("tbl_mst_sla_color");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstState", b =>
                {
                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("state_id");

                    b.Property<int?>("ContId")
                        .HasColumnType("int")
                        .HasColumnName("cont_id");

                    b.Property<string>("StateName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("state_name");

                    b.HasKey("StateId")
                        .HasName("tbl_mst_state_pkey");

                    b.ToTable("tbl_mst_state");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstSubModule", b =>
                {
                    b.Property<int>("SubModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sub_module_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("DisplayText")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_text");

                    b.Property<string>("IconSrc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("icon_src");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("SourceUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("source_url");

                    b.HasKey("SubModuleId")
                        .HasName("tbl_mst_sub_module_pkey");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ModuleId");

                    b.ToTable("tbl_mst_sub_module");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstTimezone", b =>
                {
                    b.Property<int>("TimezoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("timezone_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("country_code");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.Property<string>("UtcOffsetDisplay")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("utc_offset_display");

                    b.Property<int?>("UtcOffsetMin")
                        .HasColumnType("int")
                        .HasColumnName("utc_offset_min");

                    b.HasKey("TimezoneId")
                        .HasName("tbl_timezone_pkey");

                    b.ToTable("tbl_mst_timezone");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdUsername")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ad_username");

                    b.Property<string>("AuthKey")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("auth_key");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contact_no");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Designation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("designation");

                    b.Property<string>("EmailId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("email_id");

                    b.Property<string>("FirstName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("first_name");

                    b.Property<int?>("FlashId")
                        .HasColumnType("int")
                        .HasColumnName("flash_id");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsBusy")
                        .HasColumnType("bit")
                        .HasColumnName("is_busy");

                    b.Property<bool?>("IsLiveAgent")
                        .HasColumnType("bit")
                        .HasColumnName("is_live_agent");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit")
                        .HasColumnName("is_locked");

                    b.Property<bool?>("IsOnline")
                        .HasColumnType("bit")
                        .HasColumnName("is_online");

                    b.Property<bool?>("IsSuperAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("is_super_admin");

                    b.Property<bool?>("IsVip")
                        .HasColumnType("bit")
                        .HasColumnName("is_vip");

                    b.Property<string>("LastName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("last_name");

                    b.Property<int?>("LdapId")
                        .HasColumnType("int")
                        .HasColumnName("ldap_id");

                    b.Property<string>("MobileNo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("mobile_no");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Provider")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("provider");

                    b.Property<int?>("ReportingUserId")
                        .HasColumnType("int")
                        .HasColumnName("reporting_user_id");

                    b.Property<string>("SecondaryContactNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("secondary_contact_no");

                    b.Property<string>("SecondaryEmailId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("secondary_email_id");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("site_id");

                    b.Property<string>("UserType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_type");

                    b.Property<string>("VipMessage")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("vip_message");

                    b.HasKey("UserId")
                        .HasName("tbl_mst_user_pkey");

                    b.HasIndex("SiteId");

                    b.ToTable("tbl_mst_user");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUserDeptMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_user_dept_map_pkey");

                    b.ToTable("tbl_mst_user_dept_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUserOrgMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_user_org_map_pkey");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OrgId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_mst_user_org_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUserProfile", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthKey")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("auth_key");

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("country");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("DateFormat")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("date_format");

                    b.Property<string>("EmailSignature")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("email_signature");

                    b.Property<string>("FirebaseSessionIdAndroid")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("firebase_session_id_android");

                    b.Property<string>("FirebaseSessionIdIos")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("firebase_session_id_ios");

                    b.Property<string>("Language")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("language");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<byte[]>("ProfilePic")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("profile_pic");

                    b.Property<string>("TimeFormat")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("time_format");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("time_zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_user_profile_pkey");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_mst_user_profile");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUserPwd", b =>
                {
                    b.Property<int>("Pid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<DateTime?>("PwdChangedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("pwd_changed_on");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Pid")
                        .HasName("tbl_mst_old_pwd_pk");

                    b.ToTable("tbl_mst_user_pwd");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUserQueueMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queue_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_user_queue_map_pkey");

                    b.HasIndex("QueueId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_mst_user_queue_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUserRoleMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_Id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_user_role_map_pkey");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_mst_user_role_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUserSiteMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("site_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_user_site_map_pkey");

                    b.ToTable("tbl_mst_user_site_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstWkWorkHr", b =>
                {
                    b.Property<int>("WkWorkHrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wk_work_hr_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.Property<string>("WeekDay")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("week_day")
                        .IsFixedLength(true);

                    b.Property<int?>("WorkHrId")
                        .HasColumnType("int")
                        .HasColumnName("work_hr_id");

                    b.HasKey("WkWorkHrId")
                        .HasName("tbl_mst_wk_work_hr_pkey");

                    b.HasIndex("WorkHrId");

                    b.ToTable("tbl_mst_wk_work_hr");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstWorkHr", b =>
                {
                    b.Property<int>("WorkHrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("work_hr_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ApplyToOrg")
                        .HasColumnType("bit")
                        .HasColumnName("apply_to_org");

                    b.Property<bool?>("Is24hr")
                        .HasColumnType("bit")
                        .HasColumnName("is_24hr");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("time_zone");

                    b.HasKey("WorkHrId")
                        .HasName("tbl_mst_work_hr_pkey");

                    b.HasIndex("OrgId");

                    b.ToTable("tbl_mst_work_hr");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstWorkHrQueueMap", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queue_id");

                    b.Property<int?>("WorkHrId")
                        .HasColumnType("int")
                        .HasColumnName("work_hr_id");

                    b.HasKey("Uid")
                        .HasName("tbl_mst_work_hr_queue_map_pk");

                    b.ToTable("tbl_mst_work_hr_queue_map");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblRptReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("report_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessUserIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("access_user_ids");

                    b.Property<string>("Accessibility")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("accessibility");

                    b.Property<int?>("AdvanceChartVisualId")
                        .HasColumnType("int")
                        .HasColumnName("advance_chart_visual_id");

                    b.Property<int?>("AttachmentId")
                        .HasColumnType("int")
                        .HasColumnName("attachment_id");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("DataDbViewId")
                        .HasColumnType("int")
                        .HasColumnName("data_db_view_id");

                    b.Property<int?>("DataModuleId")
                        .HasColumnType("int")
                        .HasColumnName("data_module_id");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsHide")
                        .HasColumnType("bit")
                        .HasColumnName("is_hide");

                    b.Property<bool?>("IsRuntimeRpt")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("ReadyModuleId")
                        .HasColumnType("int")
                        .HasColumnName("ready_module_id");

                    b.Property<string>("ReportType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("report_type");

                    b.Property<string>("SqlQueryData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sql_query_data");

                    b.Property<string>("SqlQueryDrilldown")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sql_query_drilldown");

                    b.Property<string>("SummaryChartType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("summary_chart_type");

                    b.Property<int?>("TopNRecord")
                        .HasColumnType("int")
                        .HasColumnName("top_n_record");

                    b.Property<int?>("VisualId")
                        .HasColumnType("int")
                        .HasColumnName("visual_id");

                    b.Property<int?>("WidgetId")
                        .HasColumnType("int")
                        .HasColumnName("widget_id");

                    b.HasKey("ReportId")
                        .HasName("tbl_rpt_report_pkey");

                    b.ToTable("tbl_rpt_report");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblRptReportColor", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color_code");

                    b.Property<string>("ColorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color_name");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.HasKey("Uid")
                        .HasName("tbl_rpt_report_color_pkey");

                    b.ToTable("tbl_rpt_report_color");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblRptReportDetail", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DbViewColumnId")
                        .HasColumnType("int")
                        .HasColumnName("db_view_column_id");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<string>("DisplayText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("display_text");

                    b.Property<string>("FormatText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("format_text");

                    b.Property<bool?>("IsShowTotal")
                        .HasColumnType("bit")
                        .HasColumnName("is_show_total");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<string>("SortOrder")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sort_order");

                    b.Property<string>("SummaryType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("summary_type");

                    b.Property<int?>("VisualDetailId")
                        .HasColumnType("int")
                        .HasColumnName("visual_detail_id");

                    b.HasKey("Uid")
                        .HasName("tbl_rpt_report_detail_pkey");

                    b.ToTable("tbl_rpt_report_detail");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblRptReportDrilldown", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DbViewColumnId")
                        .HasColumnType("int")
                        .HasColumnName("db_view_column_id");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<string>("DisplayText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("display_text");

                    b.Property<string>("FormatText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("format_text");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<string>("SortOrder")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sort_order");

                    b.Property<string>("SummaryType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("summary_type");

                    b.HasKey("Uid")
                        .HasName("tbl_rpt_report_drilldown_pkey");

                    b.ToTable("tbl_rpt_report_drilldown");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblRptReportFilter", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AndOr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("and_or");

                    b.Property<string>("DateOperandType1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date_operand_type1");

                    b.Property<string>("DateOperandType2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date_operand_type2");

                    b.Property<int?>("DbViewColumnId")
                        .HasColumnType("int")
                        .HasColumnName("db_view_column_id");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<string>("InBracket")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("in_bracket");

                    b.Property<bool?>("IsRuntime")
                        .HasColumnType("bit")
                        .HasColumnName("is_runtime");

                    b.Property<string>("Operand1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("operand1");

                    b.Property<string>("Operand2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("operand2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("operator");

                    b.Property<string>("OutBracket")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("out_bracket");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<string>("SubOperand1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sub_operand1");

                    b.Property<string>("SubOperand2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sub_operand2");

                    b.HasKey("Uid")
                        .HasName("tbl_rpt_report_filter_pkey");

                    b.ToTable("tbl_rpt_report_filter");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblRptReportScheduler", b =>
                {
                    b.Property<int>("ReportSchedulerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("report_scheduler_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_rpt_report_schedule_uid_seq])");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("DailyOnTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("daily_on_time");

                    b.Property<string>("EmailBody")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email_body");

                    b.Property<string>("EmailCc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email_cc");

                    b.Property<string>("EmailSubject")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email_subject");

                    b.Property<string>("EmailTo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email_to");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("id_number");

                    b.Property<DateTime?>("LastExecutedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_executed_on");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("MonthlyOnDay")
                        .HasColumnType("int")
                        .HasColumnName("monthly_on_day");

                    b.Property<DateTime?>("MonthlyOnTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("monthly_on_time");

                    b.Property<string>("MonthlySelectedMonths")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("monthly_selected_months");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("NextExecutionOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("next_execution_on");

                    b.Property<DateTime?>("OnceScheduleOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("once_schedule_on");

                    b.Property<string>("ReportFormat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("report_format");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<string>("SchedulerType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("scheduler_type");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("WeeklyOnTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("weekly_on_time");

                    b.Property<string>("WeeklySelectedDays")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("weekly_selected_days");

                    b.HasKey("ReportSchedulerId")
                        .HasName("tbl_rpt_report_schedule_pkey");

                    b.ToTable("tbl_rpt_report_scheduler");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblRptScheduleExport", b =>
                {
                    b.Property<int>("ExportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("export_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CompletedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("completed_on");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("ErrorMsg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("error_msg");

                    b.Property<string>("ExportType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("export_type");

                    b.Property<string>("MailId")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("mail_id");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("ExportId")
                        .HasName("tbl_rpt_schedule_export_pk");

                    b.ToTable("tbl_rpt_schedule_export");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblRptWidget", b =>
                {
                    b.Property<int>("WidgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("widget_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("bit")
                        .HasColumnName("is_public");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("WidgetId")
                        .HasName("tbl_rpt_widget_pkey");

                    b.ToTable("tbl_rpt_widget");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblRptWidgetReportHide", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsHide")
                        .HasColumnType("bit")
                        .HasColumnName("is_hide");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Uid")
                        .HasName("tbl_rpt_widget_report_hide_pkey");

                    b.ToTable("tbl_rpt_widget_report_hide");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblRptWidgetUserOption", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int?>("WidgetId")
                        .HasColumnType("int")
                        .HasColumnName("widget_id");

                    b.HasKey("Uid")
                        .HasName("tbl_rpt_widget_user_option_pkey");

                    b.ToTable("tbl_rpt_widget_user_option");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblScheduleEvent", b =>
                {
                    b.Property<int>("ScheduleEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("schedule_event_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_schedule_event_uid_seq])");

                    b.Property<int?>("ActionType")
                        .HasColumnType("int")
                        .HasColumnName("action_type");

                    b.Property<int?>("AdditionalRefId")
                        .HasColumnType("int")
                        .HasColumnName("additional_ref_id");

                    b.Property<int?>("BusRuleId")
                        .HasColumnType("int")
                        .HasColumnName("bus_rule_id");

                    b.Property<int?>("Counter")
                        .HasColumnType("int")
                        .HasColumnName("counter");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("error_message");

                    b.Property<int?>("EventType")
                        .HasColumnType("int")
                        .HasColumnName("event_type");

                    b.Property<DateTime?>("ExecutedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("executed_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("ParentScheduleEventId")
                        .HasColumnType("int")
                        .HasColumnName("parent_schedule_event_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<DateTime?>("ScheduledOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("scheduled_on");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("ScheduleEventId")
                        .HasName("tbl_schedule_event_pkey");

                    b.ToTable("tbl_schedule_event");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblSurveyMstForm", b =>
                {
                    b.Property<int>("SurveyFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("survey_form_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttachmentId")
                        .HasColumnType("int")
                        .HasColumnName("attachment_id");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("DepartmentIds")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("department_ids");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("FooterDescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("footer_description_html");

                    b.Property<string>("HeaderDescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("header_description_html");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("OnEveryNthTicket")
                        .HasColumnType("int")
                        .HasColumnName("on_every_nth_ticket");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("RequiredQuestionCount")
                        .HasColumnType("int")
                        .HasColumnName("required_question_count");

                    b.Property<int?>("TicketSurveyCounter")
                        .HasColumnType("int")
                        .HasColumnName("ticket_survey_counter");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("SurveyFormId")
                        .HasName("tbl_survey_mst_form_pkey");

                    b.HasIndex("AttachmentId");

                    b.ToTable("tbl_survey_mst_form");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblSurveyMstFormQuestion", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("question_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<bool?>("IsRequired")
                        .HasColumnType("bit")
                        .HasColumnName("is_required");

                    b.Property<int?>("MaxLength")
                        .HasColumnType("int")
                        .HasColumnName("max_length");

                    b.Property<int?>("MinLength")
                        .HasColumnType("int")
                        .HasColumnName("min_length");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("QuestionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("question_type");

                    b.Property<int?>("SurveyFormId")
                        .HasColumnType("int")
                        .HasColumnName("survey_form_id");

                    b.HasKey("QuestionId")
                        .HasName("tbl_survey_mst_form_question_pkey");

                    b.HasIndex("SurveyFormId");

                    b.ToTable("tbl_survey_mst_form_question");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblSurveyMstFormQuestionDetail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("detail_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int")
                        .HasColumnName("display_index");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("question_id");

                    b.Property<int?>("Value")
                        .HasColumnType("int")
                        .HasColumnName("value");

                    b.HasKey("DetailId")
                        .HasName("tbl_survey_mst_form_question_detail_pkey");

                    b.HasIndex("QuestionId");

                    b.ToTable("tbl_survey_mst_form_question_detail");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnApprAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attachment_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("tbl_trn_appr_attachment_pkey");

                    b.ToTable("tbl_trn_appr_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnApproval", b =>
                {
                    b.Property<int>("ApprovalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("approval_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionedOn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("actioned_on");

                    b.Property<string>("ApprComment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("appr_comment");

                    b.Property<int?>("ApprQueueId")
                        .HasColumnType("int")
                        .HasColumnName("appr_queue_id");

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("approved_on");

                    b.Property<int?>("ApproverId")
                        .HasColumnType("int")
                        .HasColumnName("approver_id");

                    b.Property<int?>("AuthorizedById")
                        .HasColumnType("int")
                        .HasColumnName("authorized_by_id");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_number");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsFromWorkflow")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_workflow");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<int?>("RequesterId")
                        .HasColumnType("int")
                        .HasColumnName("requester_id");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("TypeEntId")
                        .HasColumnType("int")
                        .HasColumnName("type_ent_id");

                    b.HasKey("ApprovalId")
                        .HasName("tbl_trn_approval_pkey");

                    b.HasIndex("ApprQueueId");

                    b.HasIndex("ApproverId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ModuleId");

                    b.HasIndex(new[] { "IdNumber" }, "tbl_trn_approval_id_number_idx")
                        .IsUnique()
                        .HasFilter("[id_number] IS NOT NULL");

                    b.ToTable("tbl_trn_approval");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnArchiveLog", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArchiveId")
                        .HasColumnType("int")
                        .HasColumnName("archive_id");

                    b.Property<DateTime?>("EndedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("ended_on");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<DateTime?>("StartedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("started_on");

                    b.HasKey("Uid")
                        .HasName("tbl_trn_archive_log_pk");

                    b.ToTable("tbl_trn_archive_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnCatalogOrder", b =>
                {
                    b.Property<int>("CatalogOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("catalog_order_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogResourceDtlsId")
                        .HasColumnType("int")
                        .HasColumnName("catalog_resource_dtls_id");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("cost");

                    b.Property<int?>("ServiceRequestId")
                        .HasColumnType("int")
                        .HasColumnName("service_request_id");

                    b.Property<string>("Value")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("value");

                    b.HasKey("CatalogOrderId")
                        .HasName("tbl_trn_catalog_order_pkey");

                    b.HasIndex("CatalogResourceDtlsId");

                    b.HasIndex("ServiceRequestId");

                    b.ToTable("tbl_trn_catalog_order");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnChange", b =>
                {
                    b.Property<int>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("change_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("actual_end_date");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("actual_start_date");

                    b.Property<bool?>("AffectsPublicFacing")
                        .HasColumnType("bit")
                        .HasColumnName("affects_public_facing");

                    b.Property<int?>("AltLocationId")
                        .HasColumnType("int")
                        .HasColumnName("alt_location_id");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("AvailabilityEntId")
                        .HasColumnType("int")
                        .HasColumnName("availability_ent_id");

                    b.Property<string>("AvailabilityImplications")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("availability_implications");

                    b.Property<int?>("BackoutDurationEntId")
                        .HasColumnType("int")
                        .HasColumnName("backout_duration_ent_id");

                    b.Property<string>("BackoutPlan")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("backout_plan");

                    b.Property<bool?>("BackupAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("backup_available");

                    b.Property<bool?>("BackupTestedEntId")
                        .HasColumnType("bit")
                        .HasColumnName("backup_tested_ent_id");

                    b.Property<string>("BusinessImpact")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("business_impact");

                    b.Property<string>("BusinessRisk")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("business_risk");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("ChangeDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("change_description");

                    b.Property<string>("ChangeReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("change_reason");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("close_date");

                    b.Property<int?>("ClosedById")
                        .HasColumnType("int")
                        .HasColumnName("closed_by_id");

                    b.Property<string>("ClosureNotes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("closure_notes");

                    b.Property<int?>("CommonImpactEntId")
                        .HasColumnType("int")
                        .HasColumnName("common_impact_ent_id");

                    b.Property<string>("CostImplications")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("cost_implications");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("CurrAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("curr_assign_queue_id");

                    b.Property<int?>("FailoverAvailableEntId")
                        .HasColumnType("int")
                        .HasColumnName("failover_available_ent_id");

                    b.Property<int?>("FirstAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("first_assign_queue_id");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_number");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsArchRestore")
                        .HasColumnType("bit")
                        .HasColumnName("is_arch_restore");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<string>("LastNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_note");

                    b.Property<int?>("LastNotesAddedById")
                        .HasColumnType("int")
                        .HasColumnName("last_notes_added_by_id");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_notes_added_on");

                    b.Property<string>("LicensingImplications")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("licensing_implications");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<bool?>("PhysicalCabReq")
                        .HasColumnType("bit")
                        .HasColumnName("physical_cab_req");

                    b.Property<DateTime?>("PhysicalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("physical_date");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("planned_end_date");

                    b.Property<DateTime?>("PlannedStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("planned_start_date");

                    b.Property<int?>("PrevAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("prev_assign_queue_id");

                    b.Property<int?>("PreviouslyExecutedEntId")
                        .HasColumnType("int")
                        .HasColumnName("previously_executed_ent_id");

                    b.Property<int?>("PrimaryCiId")
                        .HasColumnType("int")
                        .HasColumnName("primary_ci_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<int?>("RiskEntId")
                        .HasColumnType("int")
                        .HasColumnName("risk_ent_id");

                    b.Property<string>("SecurityImplications")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("security_implications");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("short_desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<string>("TechnicalImpact")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("technical_impact");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.Property<string>("TestPlan")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("test_plan");

                    b.Property<int?>("ThirdPartySupportEntId")
                        .HasColumnType("int")
                        .HasColumnName("third_party_support_ent_id");

                    b.Property<string>("Type")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("type");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int?>("UsersImpactedEntId")
                        .HasColumnType("int")
                        .HasColumnName("users_impacted_ent_id");

                    b.Property<string>("WatchListJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("watch_list_json");

                    b.HasKey("ChangeId")
                        .HasName("tbl_trn_change_pkey");

                    b.HasIndex("AssignToId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CurrAssignQueueId");

                    b.HasIndex("FirstAssignQueueId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("OrgId");

                    b.HasIndex("PrevAssignQueueId");

                    b.HasIndex("RiskEntId");

                    b.HasIndex(new[] { "IdNumber" }, "tbl_trn_change_id_number_idx")
                        .IsUnique()
                        .HasFilter("[id_number] IS NOT NULL");

                    b.ToTable("tbl_trn_change");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnCrActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("FieldsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fields_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int")
                        .HasColumnName("performed_by_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("ActivityLogId")
                        .HasName("tbl_trn_cr_activity_log_pk");

                    b.ToTable("tbl_trn_cr_activity_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnCrAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attachment_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("tbl_trn_change_attachment_pkey");

                    b.HasIndex("RecordId");

                    b.ToTable("tbl_trn_cr_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnCrDetails", b =>
                {
                    b.Property<int>("ChangeDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("change_details_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("actual_end_date");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("actual_start_date");

                    b.Property<bool?>("AffectsPublicFacing")
                        .HasColumnType("bit")
                        .HasColumnName("affects_public_facing");

                    b.Property<int?>("AvailabilityEntId")
                        .HasColumnType("int")
                        .HasColumnName("availability_ent_id");

                    b.Property<string>("AvailabilityImplications")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("availability_implications");

                    b.Property<int?>("BackoutDurationEntId")
                        .HasColumnType("int")
                        .HasColumnName("backout_duration_ent_id");

                    b.Property<string>("BackoutPlan")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("backout_plan");

                    b.Property<bool?>("BackupAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("backup_available");

                    b.Property<int?>("BackupTestedEntId")
                        .HasColumnType("int")
                        .HasColumnName("backup_tested_ent_id");

                    b.Property<string>("BusinessImpact")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("business_impact");

                    b.Property<string>("BusinessRisk")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("business_risk");

                    b.Property<string>("CostImplications")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("cost_implications");

                    b.Property<int?>("FailoverAvailableEntId")
                        .HasColumnType("int")
                        .HasColumnName("failover_available_ent_id");

                    b.Property<string>("LicensingImplications")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("licensing_implications");

                    b.Property<bool?>("PhysicalCabReq")
                        .HasColumnType("bit")
                        .HasColumnName("physical_cab_req");

                    b.Property<DateTime?>("PhysicalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("physical_date");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("planned_end_date");

                    b.Property<DateTime?>("PlannedStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("planned_start_date");

                    b.Property<int?>("PreviouslyExecutedEntId")
                        .HasColumnType("int")
                        .HasColumnName("previously_executed_ent_id");

                    b.Property<string>("SecurityImplications")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("security_implications");

                    b.Property<string>("TechnicalImpact")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("technical_impact");

                    b.Property<string>("TestPlan")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("test_plan");

                    b.Property<int?>("ThirdPartySupportEntId")
                        .HasColumnType("int")
                        .HasColumnName("third_party_support_ent_id");

                    b.Property<int?>("UsersImpactedEntId")
                        .HasColumnType("int")
                        .HasColumnName("users_impacted_ent_id");

                    b.HasKey("ChangeDetailsId")
                        .HasName("tbl_trn_change_details_pkey");

                    b.HasIndex("AvailabilityEntId");

                    b.HasIndex("BackoutDurationEntId");

                    b.HasIndex("BackupTestedEntId");

                    b.HasIndex("FailoverAvailableEntId");

                    b.HasIndex("PreviouslyExecutedEntId");

                    b.HasIndex("ThirdPartySupportEntId");

                    b.HasIndex("UsersImpactedEntId");

                    b.ToTable("tbl_trn_cr_details");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnCrNotesLog", b =>
                {
                    b.Property<int>("NotesLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notes_log_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<string>("NoteType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note_type");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("NotesLogId")
                        .HasName("pk_cr_notes_log");

                    b.ToTable("tbl_trn_cr_notes_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFieldService", b =>
                {
                    b.Property<int>("FieldServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("field_service_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_trn_field_service_field_service_id1_seq])");

                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("ClosedById")
                        .HasColumnType("int")
                        .HasColumnName("closed_by_id");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closed_on");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("EndTimeOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_time_on");

                    b.Property<string>("IdNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("id_number");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_active")
                        .HasDefaultValueSql("('true')");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<DateTime?>("PunchInTimeOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("punch_in_time_on");

                    b.Property<DateTime?>("PunchOutTimeOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("punch_out_time_on");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<DateTime?>("ScheduledOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("scheduled_on");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("short_description");

                    b.Property<DateTime?>("StartTimeOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_time_on");

                    b.Property<string>("StatusChangeReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status_change_reason");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.HasKey("FieldServiceId")
                        .HasName("tbl_trn_field_service_pk");

                    b.ToTable("tbl_trn_field_service");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFieldServiceActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("FieldsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fields_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int")
                        .HasColumnName("performed_by_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("ActivityLogId")
                        .HasName("tbl_trn_field_service_activity_log_pk");

                    b.ToTable("tbl_trn_field_service_activity_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFieldServiceAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attachment_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("tbl_trn_field_service_attachment_pk");

                    b.ToTable("tbl_trn_field_service_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFieldServiceNotesLog", b =>
                {
                    b.Property<int>("NotesLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notes_log_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<string>("NoteType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note_type");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("NotesLogId")
                        .HasName("pk_field_service_notes_log");

                    b.ToTable("tbl_trn_field_service_notes_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFreefrmVisboradAssignto", b =>
                {
                    b.Property<int>("FreefrmVisboradAssigntoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("freefrm_visborad_assignto_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddlAssignToId")
                        .HasColumnType("int")
                        .HasColumnName("addl_assign_to_id");

                    b.Property<int?>("FreefrmVisboradCardId")
                        .HasColumnType("int")
                        .HasColumnName("freefrm_visborad_card_id");

                    b.HasKey("FreefrmVisboradAssigntoId")
                        .HasName("tbl_trn_freefrm_visborad_assignto_pkey");

                    b.HasIndex("AddlAssignToId");

                    b.HasIndex("FreefrmVisboradCardId");

                    b.ToTable("tbl_trn_freefrm_visborad_assignto");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFreefrmVisboradAttach", b =>
                {
                    b.Property<int>("FreefrmVisboradAttachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("freefrm_visborad_attach_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("attachment_name");

                    b.Property<byte[]>("FileData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("file_data");

                    b.Property<int?>("FreefrmVisboradCardId")
                        .HasColumnType("int")
                        .HasColumnName("freefrm_visborad_card_id");

                    b.HasKey("FreefrmVisboradAttachId")
                        .HasName("tbl_trn_freefrm_visborad_attach_pkey");

                    b.HasIndex("FreefrmVisboradCardId");

                    b.ToTable("tbl_trn_freefrm_visborad_attach");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFreefrmVisboradCard", b =>
                {
                    b.Property<int>("FreefrmVisboradCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("freefrm_visborad_card_id");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<string>("CardName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("card_name");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("due_date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("VisboradLaneId")
                        .HasColumnType("int")
                        .HasColumnName("visborad_lane_id");

                    b.HasKey("FreefrmVisboradCardId")
                        .HasName("tbl_trn_freefrm_visborad_card_pkey");

                    b.HasIndex("AssignToId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("tbl_trn_freefrm_visborad_card");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFreefrmVisboradChklist", b =>
                {
                    b.Property<int>("FreefrmVisboradChklistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("freefrm_visborad_chklist_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChkListName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("chk_list_name");

                    b.Property<int?>("FreefrmVisboradCardId")
                        .HasColumnType("int")
                        .HasColumnName("freefrm_visborad_card_id");

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("bit")
                        .HasColumnName("is_checked");

                    b.HasKey("FreefrmVisboradChklistId")
                        .HasName("tbl_trn_freefrm_visborad_chklist_pkey");

                    b.HasIndex("FreefrmVisboradCardId");

                    b.ToTable("tbl_trn_freefrm_visborad_chklist");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFreefrmVisboradLabel", b =>
                {
                    b.Property<int>("FreefrmVisboradLabelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("freefrm_visborad_label_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("color");

                    b.Property<int?>("FreefrmVisboradCardId")
                        .HasColumnType("int")
                        .HasColumnName("freefrm_visborad_card_id");

                    b.Property<string>("LabelName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("label_name");

                    b.HasKey("FreefrmVisboradLabelId")
                        .HasName("tbl_trn_freefrm_visborad_label_pkey");

                    b.HasIndex("FreefrmVisboradCardId");

                    b.ToTable("tbl_trn_freefrm_visborad_label");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFreefrmVisboradNote", b =>
                {
                    b.Property<int>("FreefrmVisboradNoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("freefrm_visborad_note_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FreefrmVisboradCardId")
                        .HasColumnType("int")
                        .HasColumnName("freefrm_visborad_card_id");

                    b.Property<string>("NoteType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("note_type");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.HasKey("FreefrmVisboradNoteId")
                        .HasName("tbl_trn_freefrm_visborad_note_pkey");

                    b.HasIndex("FreefrmVisboradCardId");

                    b.ToTable("tbl_trn_freefrm_visborad_note");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnImpactedci", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CiName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ci_name");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("owner_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("Uid")
                        .HasName("tbl_trn_problem_impactedci_pkey");

                    b.HasIndex("OrgId");

                    b.HasIndex("OwnerId");

                    b.ToTable("tbl_trn_impactedci");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnIncActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("FieldsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fields_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int")
                        .HasColumnName("performed_by_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("ActivityLogId")
                        .HasName("tbl_trn_inc_activity_log_pk");

                    b.ToTable("tbl_trn_inc_activity_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnIncAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attachment_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("tbl_trn_inc_attachment_pkey");

                    b.ToTable("tbl_trn_inc_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnIncNotesLog", b =>
                {
                    b.Property<int>("NotesLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notes_log_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<string>("NoteType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note_type");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("NotesLogId")
                        .HasName("pk_inc_notes_log");

                    b.ToTable("tbl_trn_inc_notes_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnIncident", b =>
                {
                    b.Property<int>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("incident_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<string>("AltContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alt_contact_no");

                    b.Property<int?>("AltLocationId")
                        .HasColumnType("int")
                        .HasColumnName("alt_location_id");

                    b.Property<string>("ApprovalType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("approval_type");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("CausedByEntId")
                        .HasColumnType("int")
                        .HasColumnName("caused_by_ent_id");

                    b.Property<int?>("ChannelEntId")
                        .HasColumnType("int")
                        .HasColumnName("channel_ent_id");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closed_on");

                    b.Property<bool?>("CommCall")
                        .HasColumnType("bit")
                        .HasColumnName("comm_call");

                    b.Property<bool?>("CommEmail")
                        .HasColumnType("bit")
                        .HasColumnName("comm_email");

                    b.Property<bool?>("CommSms")
                        .HasColumnType("bit")
                        .HasColumnName("comm_sms");

                    b.Property<int?>("CommonImpactEntId")
                        .HasColumnType("int")
                        .HasColumnName("common_impact_ent_id");

                    b.Property<int?>("ConfigCiId")
                        .HasColumnType("int")
                        .HasColumnName("config_ci_id");

                    b.Property<int?>("ConfigItemDbId")
                        .HasColumnType("int")
                        .HasColumnName("config_item_db_id");

                    b.Property<string>("ConfigItemId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("config_item_id");

                    b.Property<int?>("ConfigItemType")
                        .HasColumnType("int")
                        .HasColumnName("config_item_type");

                    b.Property<string>("ContactNo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contact_no");

                    b.Property<bool?>("CreateKbFlag")
                        .HasColumnType("bit")
                        .HasColumnName("create_kb_flag");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("CurrAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("curr_assign_queue_id");

                    b.Property<DateTime?>("Dateidentified")
                        .HasColumnType("datetime2")
                        .HasColumnName("dateidentified");

                    b.Property<DateTime?>("EmailResponseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("email_response_date");

                    b.Property<DateTime?>("EscalationTsDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("escalation_ts_date");

                    b.Property<int?>("FirstAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("first_assign_queue_id");

                    b.Property<DateTime?>("FirstResponseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("first_response_date");

                    b.Property<string>("Flags")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("flags");

                    b.Property<DateTime?>("FsCompletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fs_completed_date");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_number");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsArchRestore")
                        .HasColumnType("bit")
                        .HasColumnName("is_arch_restore");

                    b.Property<bool?>("IsAutoClosed")
                        .HasColumnType("bit")
                        .HasColumnName("is_auto_closed");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsParent")
                        .HasColumnType("bit")
                        .HasColumnName("is_parent");

                    b.Property<bool?>("IsPrLinkDiscard")
                        .HasColumnType("bit")
                        .HasColumnName("is_pr_link_discard");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<string>("LastNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_note");

                    b.Property<int?>("LastNotesAddedById")
                        .HasColumnType("int")
                        .HasColumnName("last_notes_added_by_id");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_notes_added_on");

                    b.Property<string>("LastPriInspection")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("last_pri_inspection");

                    b.Property<string>("LastPriReason")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("last_pri_reason");

                    b.Property<int?>("LastReopenedById")
                        .HasColumnType("int")
                        .HasColumnName("last_reopened_by_id");

                    b.Property<DateTime?>("LastReopenedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_reopened_on");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<DateTime?>("MisrouteTsDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("misroute_ts_date");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("NefcrDescEntId")
                        .HasColumnType("int")
                        .HasColumnName("nefcr_desc_ent_id");

                    b.Property<int?>("OnBehalfOfId")
                        .HasColumnType("int")
                        .HasColumnName("on_behalf_of_id");

                    b.Property<DateTime?>("OnSiteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("on_site_date");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("ParentIncidentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_incident_id");

                    b.Property<string>("PreferredContact")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("preferred_contact");

                    b.Property<int?>("PrevAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("prev_assign_queue_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<int?>("ReopenCount")
                        .HasColumnType("int")
                        .HasColumnName("reopen_count");

                    b.Property<int?>("ResolutionCiId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_ci_id");

                    b.Property<string>("ResolutionComment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resolution_comment");

                    b.Property<int?>("ResolutionCriteriaEntId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_criteria_ent_id");

                    b.Property<int?>("ResolutionMethodEntId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_method_ent_id");

                    b.Property<int?>("ResolvedById")
                        .HasColumnType("int")
                        .HasColumnName("resolved_by_id");

                    b.Property<DateTime?>("ResolvedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolved_on");

                    b.Property<int?>("SeverityEntId")
                        .HasColumnType("int")
                        .HasColumnName("severity_ent_id");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("short_desc");

                    b.Property<DateTime?>("SiteVisitOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("site_visit_on");

                    b.Property<string>("SlaBreachReason")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("sla_breach_reason");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<DateTime?>("TargetResolveOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("target_resolve_on");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.Property<DateTime?>("TimeToDiagnosis")
                        .HasColumnType("datetime2")
                        .HasColumnName("time_to_diagnosis");

                    b.Property<DateTime?>("TimeToInvestigate")
                        .HasColumnType("datetime2")
                        .HasColumnName("time_to_investigate");

                    b.Property<int?>("TotDowntimeMin")
                        .HasColumnType("int")
                        .HasColumnName("tot_downtime_min");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("VendorTicketId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vendor_ticket_id");

                    b.Property<string>("WatchListJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("watch_list_json");

                    b.Property<string>("WhiteBoardNo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("white_board_no");

                    b.HasKey("IncidentId")
                        .HasName("tbl_trn_incident_pkey");

                    b.HasIndex("AltLocationId");

                    b.HasIndex("AssignToId");

                    b.HasIndex("CausedByEntId");

                    b.HasIndex("ChannelEntId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LocationId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("NefcrDescEntId");

                    b.HasIndex("OnBehalfOfId");

                    b.HasIndex("OrgId");

                    b.HasIndex("ResolutionCriteriaEntId");

                    b.HasIndex("ResolutionMethodEntId");

                    b.HasIndex("ResolvedById");

                    b.HasIndex("SeverityEntId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "IdNumber" }, "tbl_trn_incident_id_number_idx")
                        .IsUnique()
                        .HasFilter("[id_number] IS NOT NULL");

                    b.ToTable("tbl_trn_incident");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnInteraction", b =>
                {
                    b.Property<int>("InteractionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("interaction_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("ChannelEntId")
                        .HasColumnType("int")
                        .HasColumnName("channel_ent_id");

                    b.Property<int?>("ClosedById")
                        .HasColumnType("int")
                        .HasColumnName("closed_by_id");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closed_on");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("CurrAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("curr_assign_queue_id");

                    b.Property<string>("EmailBody")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email_body");

                    b.Property<string>("EmailReceipient")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("email_receipient");

                    b.Property<string>("EmailSubject")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("email_subject");

                    b.Property<string>("Flags")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("flags");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_number");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("NefcrDescEntId")
                        .HasColumnType("int")
                        .HasColumnName("nefcr_desc_ent_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<int?>("SeverityEntId")
                        .HasColumnType("int")
                        .HasColumnName("severity_ent_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<string>("TicketNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ticket_number");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("InteractionId")
                        .HasName("tbl_trn_interaction_pkey");

                    b.ToTable("tbl_trn_interaction");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnInteractionActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("FieldsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fields_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int")
                        .HasColumnName("performed_by_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("ActivityLogId")
                        .HasName("tbl_trn_interaction_activity_log_pk");

                    b.ToTable("tbl_trn_interaction_activity_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnInteractionAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attachment_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("tbl_trn_interaction_attachment_pkey");

                    b.ToTable("tbl_trn_interaction_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnKb", b =>
                {
                    b.Property<int>("KbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("kb_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddlLink")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("addl_link");

                    b.Property<byte[]>("ArticleImage")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("article_image");

                    b.Property<int?>("AssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("assign_queue_id");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("AvailFor")
                        .HasColumnType("int")
                        .HasColumnName("avail_for");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("CommentCnt")
                        .HasColumnType("int")
                        .HasColumnName("comment_cnt");

                    b.Property<int?>("ConfigCiId")
                        .HasColumnType("int")
                        .HasColumnName("config_ci_id");

                    b.Property<string>("ConfigItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("config_item");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_number");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int?>("KbTypeEntId")
                        .HasColumnType("int")
                        .HasColumnName("kb_type_ent_id");

                    b.Property<string>("LastNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_note");

                    b.Property<int?>("LastNotesAddedById")
                        .HasColumnType("int")
                        .HasColumnName("last_notes_added_by_id");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_notes_added_on");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("ProblemDescPlainText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("problem_desc_plain_text");

                    b.Property<decimal?>("Ratings")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("ratings");

                    b.Property<int?>("SourceEntId")
                        .HasColumnType("int")
                        .HasColumnName("source_ent_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sub_title");

                    b.Property<string>("Tags")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("tags");

                    b.Property<string>("Title")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("title");

                    b.Property<int?>("ViewsCnt")
                        .HasColumnType("int")
                        .HasColumnName("views_cnt");

                    b.Property<string>("WatchListJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("watch_list_json");

                    b.HasKey("KbId")
                        .HasName("tbl_trn_kb_pkey");

                    b.HasIndex("AssignToId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("KbTypeEntId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("OrgId");

                    b.HasIndex("SourceEntId");

                    b.ToTable("tbl_trn_kb");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnKbActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("FieldsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fields_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int")
                        .HasColumnName("performed_by_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("ActivityLogId")
                        .HasName("tbl_trn_kb_activity_log_pk");

                    b.ToTable("tbl_trn_kb_activity_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnKbAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attachment_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("tbl_trn_kb_attachment_pk");

                    b.ToTable("tbl_trn_kb_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnKbComment", b =>
                {
                    b.Property<int>("KbCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("kb_comment_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("comment");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("KbId")
                        .HasColumnType("int")
                        .HasColumnName("kb_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ParentCommentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_comment_id");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("rating");

                    b.HasKey("KbCommentId")
                        .HasName("tbl_trn_kb_comment_pkey");

                    b.HasIndex("CreatedById");

                    b.HasIndex("KbId");

                    b.ToTable("tbl_trn_kb_comment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnKbNotesLog", b =>
                {
                    b.Property<int>("NotesLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notes_log_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<string>("NoteType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note_type");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("NotesLogId")
                        .HasName("pk_kb_notes_log");

                    b.ToTable("tbl_trn_kb_notes_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnLdapStaging", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountStatus")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("account_status");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("city");

                    b.Property<string>("Company")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("company");

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("country");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("IpPhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ip_phone");

                    b.Property<bool?>("IsModified")
                        .HasColumnType("bit")
                        .HasColumnName("is_modified");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("last_name");

                    b.Property<string>("Mail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mail");

                    b.Property<string>("Mobile")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mobile");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("postal_code");

                    b.Property<string>("Samaccountname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("samaccountname");

                    b.Property<string>("SiteName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("site_name");

                    b.Property<string>("State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("state");

                    b.Property<string>("Telephonenumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("telephonenumber");

                    b.Property<string>("Useraccountcontrol")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("useraccountcontrol");

                    b.HasKey("Uid")
                        .HasName("tbl_trn_ldap_staging_pk");

                    b.ToTable("tbl_trn_ldap_staging");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnLoginActivity", b =>
                {
                    b.Property<int>("LogActId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("log_act_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("activity");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("LogActId")
                        .HasName("tbl_trn_login_activity_pkey");

                    b.ToTable("tbl_trn_login_activity");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnPrActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("FieldsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fields_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int")
                        .HasColumnName("performed_by_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("ActivityLogId")
                        .HasName("tbl_trn_pr_activity_log_pk");

                    b.ToTable("tbl_trn_pr_activity_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnPrAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attachment_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("tbl_trn_problem_attachment_pkey");

                    b.HasIndex("RecordId");

                    b.ToTable("tbl_trn_pr_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnPrNotesLog", b =>
                {
                    b.Property<int>("NotesLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notes_log_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<string>("NoteType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note_type");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("NotesLogId")
                        .HasName("pk_pr_notes_log");

                    b.ToTable("tbl_trn_pr_notes_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnProblem", b =>
                {
                    b.Property<int>("ProblemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("problem_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AltContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alt_contact_no");

                    b.Property<int?>("AltLocationId")
                        .HasColumnType("int")
                        .HasColumnName("alt_location_id");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("CausedByEntId")
                        .HasColumnType("int")
                        .HasColumnName("caused_by_ent_id");

                    b.Property<int?>("ChannelEntId")
                        .HasColumnType("int")
                        .HasColumnName("channel_ent_id");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("close_date");

                    b.Property<int?>("ClosedById")
                        .HasColumnType("int")
                        .HasColumnName("closed_by_id");

                    b.Property<string>("ClosureDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("closure_desc");

                    b.Property<bool?>("CommCall")
                        .HasColumnType("bit")
                        .HasColumnName("comm_call");

                    b.Property<bool?>("CommEmail")
                        .HasColumnType("bit")
                        .HasColumnName("comm_email");

                    b.Property<bool?>("CommSms")
                        .HasColumnType("bit")
                        .HasColumnName("comm_sms");

                    b.Property<int?>("CommonImpactEntId")
                        .HasColumnType("int")
                        .HasColumnName("common_impact_ent_id");

                    b.Property<int?>("ConfigCiId")
                        .HasColumnType("int")
                        .HasColumnName("config_ci_id");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_no");

                    b.Property<bool?>("CreateKbFlag")
                        .HasColumnType("bit")
                        .HasColumnName("create_kb_flag");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("CurrAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("curr_assign_queue_id");

                    b.Property<DateTime?>("DateIdentified")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_identified");

                    b.Property<int?>("FirstAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("first_assign_queue_id");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_number");

                    b.Property<int?>("ImpactedCiId")
                        .HasColumnType("int")
                        .HasColumnName("impacted_ci_id");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsArchRestore")
                        .HasColumnType("bit")
                        .HasColumnName("is_arch_restore");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsMajor")
                        .HasColumnType("bit")
                        .HasColumnName("is_major");

                    b.Property<bool?>("IsMprFilled")
                        .HasColumnType("bit")
                        .HasColumnName("is_mpr_filled");

                    b.Property<bool?>("IsTested")
                        .HasColumnType("bit")
                        .HasColumnName("is_tested");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<DateTime?>("KnownerrDateIdentified")
                        .HasColumnType("datetime2")
                        .HasColumnName("knownerr_date_identified");

                    b.Property<int?>("KnownerrSrcEntId")
                        .HasColumnType("int")
                        .HasColumnName("knownerr_src_ent_id");

                    b.Property<string>("LastNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_note");

                    b.Property<int?>("LastNotesAddedById")
                        .HasColumnType("int")
                        .HasColumnName("last_notes_added_by_id");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_notes_added_on");

                    b.Property<string>("LastPriInspection")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("last_pri_inspection");

                    b.Property<string>("LastPriReason")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("last_pri_reason");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("PreferredContact")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("preferred_contact");

                    b.Property<int?>("PrevAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("prev_assign_queue_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<string>("ProblemDescription")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("problem_description");

                    b.Property<int?>("ProblemMgrId")
                        .HasColumnType("int")
                        .HasColumnName("problem_mgr_id");

                    b.Property<DateTime?>("RcaDateIdentified")
                        .HasColumnType("datetime2")
                        .HasColumnName("rca_date_identified");

                    b.Property<int?>("ResolutionCriteriaEntId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_criteria_ent_id");

                    b.Property<int?>("ResolutionMethodEntId")
                        .HasColumnType("int")
                        .HasColumnName("resolution_method_ent_id");

                    b.Property<string>("RootCause")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("root_cause");

                    b.Property<int?>("SeverityEntId")
                        .HasColumnType("int")
                        .HasColumnName("severity_ent_id");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("short_desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<int?>("SymptomCodeEntId")
                        .HasColumnType("int")
                        .HasColumnName("symptom_code_ent_id");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("VendorTicketId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("vendor_ticket_id");

                    b.Property<string>("WatchListJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("watch_list_json");

                    b.Property<string>("Workaround")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("workaround");

                    b.HasKey("ProblemId")
                        .HasName("tbl_trn_problem_pkey");

                    b.HasIndex("AssignToId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CurrAssignQueueId");

                    b.HasIndex("FirstAssignQueueId");

                    b.HasIndex("KnownerrSrcEntId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("OrgId");

                    b.HasIndex("PrevAssignQueueId");

                    b.HasIndex("SymptomCodeEntId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "IdNumber" }, "tbl_trn_problem_id_number_idx")
                        .IsUnique()
                        .HasFilter("[id_number] IS NOT NULL");

                    b.ToTable("tbl_trn_problem");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnProblemMpr", b =>
                {
                    b.Property<int>("MprId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mpr_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActItemJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("act_item_json");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("actual_start_date");

                    b.Property<string>("Attendees")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("attendees");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Detection")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("detection");

                    b.Property<string>("DeuDateAction")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("deu_date_action");

                    b.Property<DateTime?>("DiagnosisDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("diagnosis_date");

                    b.Property<string>("DueDateOutcome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("due_date_outcome");

                    b.Property<string>("FailureAvoidance")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("failure_avoidance");

                    b.Property<string>("FinalProblemSeverity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("final_problem_severity");

                    b.Property<string>("FinalResolver")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("final_resolver");

                    b.Property<DateTime?>("FirstCallDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("first_call_date");

                    b.Property<string>("FirstIdentifiedBy")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("first_identified_by");

                    b.Property<string>("FirstResolver")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("first_resolver");

                    b.Property<DateTime?>("FristAlarmDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("frist_alarm_date");

                    b.Property<string>("HowIssueIdentified")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("how_issue_identified");

                    b.Property<string>("IncidentDetails")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("incident_details");

                    b.Property<DateTime?>("IncidentOpenDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("incident_open_date");

                    b.Property<string>("IncidentReference")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("incident_reference");

                    b.Property<string>("InitialProblemSeverity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("initial_problem_severity");

                    b.Property<string>("LessonsLearnt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lessons_learnt");

                    b.Property<DateTime?>("ManagementCommDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("management_comm_date");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<DateTime?>("MprDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mpr_date");

                    b.Property<DateTime?>("MprDateNext")
                        .HasColumnType("datetime2")
                        .HasColumnName("mpr_date_next");

                    b.Property<string>("OwnerAction")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("owner_action");

                    b.Property<string>("OwnerOutcome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("owner_outcome");

                    b.Property<DateTime?>("ProblemDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("problem_date");

                    b.Property<string>("ProblemDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("problem_desc");

                    b.Property<int?>("ProblemId")
                        .HasColumnType("int")
                        .HasColumnName("problem_id");

                    b.Property<string>("ProblemManager")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("problem_manager");

                    b.Property<string>("ProblemReference")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("problem_reference");

                    b.Property<DateTime?>("RecoveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("recovery_date");

                    b.Property<string>("RelatedToChangeReq")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("related_to_change_req");

                    b.Property<string>("RelatedToKnownError")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("related_to_known_error");

                    b.Property<DateTime?>("RestorationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("restoration_date");

                    b.Property<string>("RootCause")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("root_cause");

                    b.Property<string>("Severity1Escalation")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("severity_1_escalation");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("status");

                    b.Property<string>("StatusAction")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status_action");

                    b.Property<string>("StatusOutcome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status_outcome");

                    b.Property<string>("Trigger")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("trigger");

                    b.Property<DateTime?>("UserCustomerCommDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("user_customer_comm_date");

                    b.Property<string>("Workaorund")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("workaorund");

                    b.HasKey("MprId")
                        .HasName("tbl_trn_problem_mpr_pk");

                    b.ToTable("tbl_trn_problem_mpr");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnServiceRequest", b =>
                {
                    b.Property<int>("ServiceRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("service_request_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<string>("AltContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alt_contact_no");

                    b.Property<int?>("AltLocationId")
                        .HasColumnType("int")
                        .HasColumnName("alt_location_id");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("ChannelEntId")
                        .HasColumnType("int")
                        .HasColumnName("channel_ent_id");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("close_date");

                    b.Property<int?>("CommonImpactEntId")
                        .HasColumnType("int")
                        .HasColumnName("common_impact_ent_id");

                    b.Property<int?>("ConfigCiId")
                        .HasColumnType("int")
                        .HasColumnName("config_ci_id");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_no");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("CurrAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("curr_assign_queue_id");

                    b.Property<DateTime?>("EmailResponseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("email_response_date");

                    b.Property<DateTime?>("EscalationTsDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("escalation_ts_date");

                    b.Property<int?>("FirstAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("first_assign_queue_id");

                    b.Property<DateTime?>("FirstResponseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("first_response_date");

                    b.Property<DateTime?>("FsCompletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fs_completed_date");

                    b.Property<int?>("FulfilledById")
                        .HasColumnType("int")
                        .HasColumnName("fulfilled_by_id");

                    b.Property<bool?>("FulfilledFirstTime")
                        .HasColumnType("bit")
                        .HasColumnName("fulfilled_first_time");

                    b.Property<string>("FulfillmentComment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fulfillment_comment");

                    b.Property<DateTime?>("FulfillmentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fulfillment_date");

                    b.Property<int?>("FulfillmentMethodEntId")
                        .HasColumnType("int")
                        .HasColumnName("fulfillment_method_ent_id");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_number");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsArchRestore")
                        .HasColumnType("bit")
                        .HasColumnName("is_arch_restore");

                    b.Property<bool?>("IsAutoClosed")
                        .HasColumnType("bit")
                        .HasColumnName("is_auto_closed");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<string>("KbRefNo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("kb_ref_no");

                    b.Property<string>("LastNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_note");

                    b.Property<int?>("LastNotesAddedById")
                        .HasColumnType("int")
                        .HasColumnName("last_notes_added_by_id");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_notes_added_on");

                    b.Property<int?>("LastReopenedById")
                        .HasColumnType("int")
                        .HasColumnName("last_reopened_by_id");

                    b.Property<DateTime?>("LastReopenedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_reopened_on");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<DateTime?>("MisrouteTsDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("misroute_ts_date");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("OnBehalfOfId")
                        .HasColumnType("int")
                        .HasColumnName("on_behalf_of_id");

                    b.Property<DateTime?>("OnSiteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("on_site_date");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("PrevAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("prev_assign_queue_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<int?>("ReopenCount")
                        .HasColumnType("int")
                        .HasColumnName("reopen_count");

                    b.Property<int?>("SeverityEntId")
                        .HasColumnType("int")
                        .HasColumnName("severity_ent_id");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("short_description");

                    b.Property<DateTime?>("SiteVisitDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("site_visit_date");

                    b.Property<string>("SlaBreachReason")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("sla_breach_reason");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<DateTime?>("TargetFulfillOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("target_fulfill_on");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.Property<DateTime?>("TimeToDiagnosis")
                        .HasColumnType("datetime2")
                        .HasColumnName("time_to_diagnosis");

                    b.Property<DateTime?>("TimeToInvestigate")
                        .HasColumnType("datetime2")
                        .HasColumnName("time_to_investigate");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("VendorTicketId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vendor_ticket_id");

                    b.Property<string>("WatchListJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("watch_list_json");

                    b.HasKey("ServiceRequestId")
                        .HasName("tbl_trn_service_request_pkey");

                    b.HasIndex("AltLocationId");

                    b.HasIndex("AssignToId");

                    b.HasIndex("ChannelEntId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FirstAssignQueueId");

                    b.HasIndex("FulfillmentMethodEntId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("OrgId");

                    b.HasIndex("PrevAssignQueueId");

                    b.HasIndex("SeverityEntId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "IdNumber" }, "tbl_trn_service_request_id_number_idx")
                        .IsUnique()
                        .HasFilter("[id_number] IS NOT NULL");

                    b.ToTable("tbl_trn_service_request");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnSrActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("FieldsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fields_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int")
                        .HasColumnName("performed_by_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("ActivityLogId")
                        .HasName("tbl_trn_sr_activity_log_pk");

                    b.ToTable("tbl_trn_sr_activity_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnSrAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attachment_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("tbl_trn_request_attachment_pk");

                    b.ToTable("tbl_trn_sr_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnSrNotesLog", b =>
                {
                    b.Property<int>("NotesLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notes_log_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<string>("NoteType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note_type");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("NotesLogId")
                        .HasName("pk_sr_notes_log");

                    b.ToTable("tbl_trn_sr_notes_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("task_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovalId")
                        .HasColumnType("int")
                        .HasColumnName("approval_id");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("ClosedById")
                        .HasColumnType("int")
                        .HasColumnName("closed_by_id");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closed_on");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comments");

                    b.Property<string>("CommentsHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comments_html");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("DueOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("due_on");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_number");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsArchRestore")
                        .HasColumnType("bit")
                        .HasColumnName("is_arch_restore");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsFromWorkflow")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_workflow");

                    b.Property<string>("LastNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_note");

                    b.Property<int?>("LastNotesAddedById")
                        .HasColumnType("int")
                        .HasColumnName("last_notes_added_by_id");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_notes_added_on");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queue_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("TaskTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("task_title");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("WatchListJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("watch_list_json");

                    b.HasKey("TaskId")
                        .HasName("tbl_trn_task_pkey");

                    b.HasIndex("AssignToId");

                    b.HasIndex("ClosedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ModuleId");

                    b.HasIndex("OrgId");

                    b.HasIndex("QueueId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "IdNumber" }, "tbl_trn_task_id_number_idx")
                        .IsUnique()
                        .HasFilter("[id_number] IS NOT NULL");

                    b.ToTable("tbl_trn_task");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTaskActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("FieldsJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fields_json");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("PerformedById")
                        .HasColumnType("int")
                        .HasColumnName("performed_by_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("ActivityLogId")
                        .HasName("tbl_trn_task_activity_log_pk");

                    b.ToTable("tbl_trn_task_activity_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTaskAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attachment_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttachedById")
                        .HasColumnType("int")
                        .HasColumnName("attached_by_id");

                    b.Property<DateTime?>("AttachedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("attached_on");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("binary_data");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("AttachmentId")
                        .HasName("tbl_trn_task_attachment_pk");

                    b.ToTable("tbl_trn_task_attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTaskNotesLog", b =>
                {
                    b.Property<int>("NotesLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notes_log_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("is_from_email_mgr");

                    b.Property<bool?>("IsInternalNotes")
                        .HasColumnType("bit")
                        .HasColumnName("is_internal_notes");

                    b.Property<string>("NoteType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note_type");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.HasKey("NotesLogId")
                        .HasName("pk_task_notes_log");

                    b.ToTable("tbl_trn_task_notes_log");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTicketCustFieldDetail", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FieldUid")
                        .HasColumnType("int")
                        .HasColumnName("field_uid");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value");

                    b.Property<DateTime?>("ValueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("value_date");

                    b.Property<string>("ValueJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value_json");

                    b.HasKey("Uid")
                        .HasName("newtable_pk");

                    b.HasIndex("FieldUid");

                    b.ToTable("tbl_trn_ticket_cust_field_detail");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTicketLink", b =>
                {
                    b.Property<int>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("link_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("RelationType")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("relation_type");

                    b.Property<int?>("SourceModuleId")
                        .HasColumnType("int")
                        .HasColumnName("source_module_id");

                    b.Property<int?>("SourceRecordId")
                        .HasColumnType("int")
                        .HasColumnName("source_record_id");

                    b.Property<int?>("TargetModuleId")
                        .HasColumnType("int")
                        .HasColumnName("target_module_id");

                    b.Property<int?>("TargetRecordId")
                        .HasColumnType("int")
                        .HasColumnName("target_record_id");

                    b.HasKey("LinkId")
                        .HasName("tbl_trn_link_pkey");

                    b.ToTable("tbl_trn_ticket_link");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTicketSla", b =>
                {
                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queue_id");

                    b.Property<int?>("ResolveActualMin")
                        .HasColumnType("int")
                        .HasColumnName("resolve_actual_min");

                    b.Property<string>("ResolveSlaColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("resolve_sla_color");

                    b.Property<int?>("ResolveSlaPercentage")
                        .HasColumnType("int")
                        .HasColumnName("resolve_sla_percentage");

                    b.Property<string>("ResolveSlaStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("resolve_sla_status");

                    b.Property<DateTime?>("ResolveStartOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolve_start_on");

                    b.Property<DateTime?>("ResolveStopOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolve_stop_on");

                    b.Property<int?>("ResolveTargetMin")
                        .HasColumnType("int")
                        .HasColumnName("resolve_target_min");

                    b.Property<DateTime?>("ResolveTargetOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolve_target_on");

                    b.Property<int?>("ResponseActualMin")
                        .HasColumnType("int")
                        .HasColumnName("response_actual_min");

                    b.Property<int?>("ResponseSlaPercentage")
                        .HasColumnType("int")
                        .HasColumnName("response_sla_percentage");

                    b.Property<string>("ResponseSlaStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("response_sla_status");

                    b.Property<DateTime?>("ResponseStartOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("response_start_on");

                    b.Property<DateTime?>("ResponseStopOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("response_stop_on");

                    b.Property<int?>("ResponseTargetMin")
                        .HasColumnType("int")
                        .HasColumnName("response_target_min");

                    b.Property<DateTime?>("ResponseTargetOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("response_target_on");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("site_id");

                    b.Property<int?>("SlaId")
                        .HasColumnType("int")
                        .HasColumnName("sla_id");

                    b.Property<int>("TicketSlaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ticket_sla_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_trn_ticket_sla_ticket_sla_uid_seq])");

                    b.Property<int?>("WorkHrId")
                        .HasColumnType("int")
                        .HasColumnName("work_hr_id");

                    b.HasKey("RecordId", "ModuleId")
                        .HasName("tbl_trn_ticket_sla_pkey");

                    b.HasIndex(new[] { "RecordId", "ModuleId" }, "tbl_trn_ticket_sla_record_id_idx");

                    b.ToTable("tbl_trn_ticket_sla");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTicketSpentTime", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("from_date");

                    b.Property<bool?>("IsCalculated")
                        .HasColumnType("bit")
                        .HasColumnName("is_calculated");

                    b.Property<bool?>("IsSlaPause")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_sla_pause")
                        .HasDefaultValueSql("('false')");

                    b.Property<DateTime?>("LastCalculatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_calculated_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<int?>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queue_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<double?>("SpentMinTotal")
                        .HasColumnType("float")
                        .HasColumnName("spent_min_total");

                    b.Property<double?>("SpentMinWork")
                        .HasColumnType("float")
                        .HasColumnName("spent_min_work");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("to_date");

                    b.HasKey("Uid")
                        .HasName("tbl_trn_ticket_spent_time_pkey");

                    b.HasIndex(new[] { "RecordId", "ModuleId" }, "idx_record_module_id");

                    b.ToTable("tbl_trn_ticket_spent_time");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTicketSurvey", b =>
                {
                    b.Property<int>("SurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("survey_id")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_survey_trn_ticket_survey_id_seq])");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<bool?>("IsOverride")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_override")
                        .HasDefaultValueSql("('false')");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<int?>("SubmittedById")
                        .HasColumnType("int")
                        .HasColumnName("submitted_by_id");

                    b.Property<DateTime?>("SubmittedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("submitted_on");

                    b.Property<int?>("SurveyFormId")
                        .HasColumnType("int")
                        .HasColumnName("survey_form_id");

                    b.Property<string>("SurveyGuid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("survey_guid");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("SurveyId")
                        .HasName("tbl_survey_trn_ticket_pkey");

                    b.ToTable("tbl_trn_ticket_survey");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTicketSurveyQuestion", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_survey_trn_ticket_question_uid_seq])");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("question_id");

                    b.Property<string>("SelectionJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("selection_json");

                    b.Property<int?>("SurveyId")
                        .HasColumnType("int")
                        .HasColumnName("survey_id");

                    b.Property<decimal?>("Value")
                        .HasColumnType("numeric(20,2)")
                        .HasColumnName("value");

                    b.Property<string>("ValueText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value_text");

                    b.HasKey("Uid")
                        .HasName("tbl_survey_trn_ticket_question_pkey");

                    b.HasIndex(new[] { "SurveyId" }, "IX_tbl_trn_ticket_survey_question_survey_id");

                    b.ToTable("tbl_trn_ticket_survey_question");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnUserLocation", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("latitude");

                    b.Property<DateTime?>("LogDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_date_time");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("longitude");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Uid")
                        .HasName("tbl_trn_user_location_pk");

                    b.ToTable("tbl_trn_user_location");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnUserNotification", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("uid")
                        .HasDefaultValueSql("(NEXT VALUE FOR [tbl_user_notification_uid_seq])");

                    b.Property<int?>("AdditionalRefId")
                        .HasColumnType("int")
                        .HasColumnName("additional_ref_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("EventType")
                        .HasColumnType("int")
                        .HasColumnName("event_type");

                    b.Property<bool?>("IsUnread")
                        .HasColumnType("bit")
                        .HasColumnName("is_unread");

                    b.Property<string>("MessageHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message_html");

                    b.Property<string>("MessageText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message_text");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<DateTime?>("ReadOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("read_on");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int")
                        .HasColumnName("ticket_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Uid")
                        .HasName("tbl_trn_user_notification_pkey");

                    b.ToTable("tbl_trn_user_notification");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnWatchList", b =>
                {
                    b.Property<int>("WatchListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("watch_list_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MailId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("mail_id");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("WatchListId")
                        .HasName("tbl_trn_watch_list_pkey");

                    b.ToTable("tbl_trn_watch_list");
                });

            modelBuilder.Entity("aditaas_v5.Models.Usermaster", b =>
                {
                    b.Property<string>("AdUsername")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ad_username");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email_id");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit")
                        .HasColumnName("is_locked");

                    b.Property<bool?>("IsVip")
                        .HasColumnType("bit")
                        .HasColumnName("is_vip");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mobile_no");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("site_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.ToTable("usermaster");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewActivityLogAllModules", b =>
                {
                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<int?>("ActivityLogId")
                        .HasColumnType("int")
                        .HasColumnName("activity_log_id");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_html");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("id_number");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("log_time");

                    b.Property<string>("LogTitle")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("log_title");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("module");

                    b.Property<DateTime?>("Resolved")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolved");

                    b.ToView("view_activity_log_all_modules");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewAllArchTickets", b =>
                {
                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("moduleId");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("recordId");

                    b.ToView("view_all_arch_tickets");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewAllOpenTickets", b =>
                {
                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("createdBy");

                    b.Property<string>("Firstassignqueuename")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("firstassignqueuename");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("modifiedBy");

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moduleName");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Prevassignqueuename")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("prevassignqueuename");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<int?>("Recordid")
                        .HasColumnType("int")
                        .HasColumnName("recordid");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.ToView("view_all_open_tickets");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewAllTickets", b =>
                {
                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additionalComments");

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assignToId");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("createdById");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdOn");

                    b.Property<int?>("CurrAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currAssignQueueId");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("locationId");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modifiedById");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modifiedOn");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("moduleId");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priorityId");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("recordId");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("statusId");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.ToView("view_all_tickets");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewAllTicketsChat", b =>
                {
                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int")
                        .HasColumnName("assignedToId");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("createdById");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("ImpactedCi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("impactedCi");

                    b.Property<bool?>("IsVip")
                        .HasColumnType("bit")
                        .HasColumnName("is_vip");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modifiedById");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Slacolor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("slacolor");

                    b.Property<int?>("Slapercentage")
                        .HasColumnType("int")
                        .HasColumnName("slapercentage");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<DateTime?>("TargetResolveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("targetResolveTime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.ToView("view_all_tickets_chat");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewApprovalCurrentSequence", b =>
                {
                    b.Property<int?>("ApprovalId")
                        .HasColumnType("int")
                        .HasColumnName("approval_id");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.ToView("view_approval_current_sequence");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewCmdbCiList", b =>
                {
                    b.Property<int?>("CiId")
                        .HasColumnType("int")
                        .HasColumnName("ci_id");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ip_address");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("serial_number");

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int")
                        .HasColumnName("vendor_id");

                    b.ToView("view_cmdb_ci_list");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardApproval", b =>
                {
                    b.Property<string>("ActionedOn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("actioned_on");

                    b.Property<int?>("ApprQueueId")
                        .HasColumnType("int")
                        .HasColumnName("appr_queue_id");

                    b.Property<string>("ApprovalDescription")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("approval_description");

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("approved_on");

                    b.Property<string>("Approver")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("approver");

                    b.Property<string>("ApproverComment")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("approver_comment");

                    b.Property<string>("ApproverQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("approver_queue");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id_number");

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("module_name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("Requester")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("requester");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("TicketIdNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticket_id_number");

                    b.ToView("view_dboard_approval");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardArchIncident", b =>
                {
                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<DateTime?>("ArchivedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("archivedOn");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("CausedBy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("causedBy");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closedOn");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("ContactNo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactNo");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("isFromEmailMgr");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastNotesAddedOn");

                    b.Property<DateTime?>("LastReopenedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastReopenedOn");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("ResolutionCriteria")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("resolutionCriteria");

                    b.Property<string>("ResolutionMethod")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("resolutionMethod");

                    b.Property<string>("ResolvedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("resolvedBy");

                    b.Property<DateTime?>("ResolvedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolvedOn");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<DateTime?>("TargetResolveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("targetResolveTime");

                    b.Property<string>("VendorTicketId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vendorTicketId");

                    b.ToView("view_dboard_arch_incident");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardArchProblem", b =>
                {
                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<DateTime?>("ArchivedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("archivedOn");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("ClosedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("closedBy");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closedOn");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contactNo");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastNotesAddedOn");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<string>("VendorTicketId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("vendorTicketId");

                    b.ToView("view_dboard_arch_problem");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardChange", b =>
                {
                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("actualEndDate");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("actualStartDate");

                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("ChangeType")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("changeType");

                    b.Property<string>("ClosedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("closedBy");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closedOn");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<int?>("Days")
                        .HasColumnType("int")
                        .HasColumnName("days");

                    b.Property<string>("DaysAgeing")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("daysAgeing");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastNotesAddedOn");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("modifiedBy");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OpenedWeek")
                        .HasColumnType("int")
                        .HasColumnName("openedWeek");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("plannedEndDate");

                    b.Property<DateTime?>("PlannedStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("plannedStartDate");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("Risk")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("risk");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.ToView("view_dboard_change");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardCmdbCi", b =>
                {
                    b.Property<string>("AssetNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("assetNo");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("CiName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ciName");

                    b.Property<string>("CiTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ciTypeName");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("idNumber");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("modifiedBy");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("SerialNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("serialNo");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor");

                    b.ToView("view_dboard_cmdb_ci");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardCommonChangeData", b =>
                {
                    b.Property<string>("Altlocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altlocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("close_date");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<string>("CurrQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("currQueue");

                    b.Property<string>("CurrStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("currStatus");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Impact")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("impact");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.ToView("view_dboard_common_change_data");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardCommonCmdbCi", b =>
                {
                    b.Property<string>("AssetNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("assetNo");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("CiName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ciName");

                    b.Property<string>("CiTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ciTypeName");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("idNumber");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("modifiedBy");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("SerialNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("serialNo");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor");

                    b.ToView("view_dboard_common_cmdb_ci");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardCommonIncidentData", b =>
                {
                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closedOn");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Impact")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("impact");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("ResolvedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("resolvedBy");

                    b.Property<DateTime?>("ResolvedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolvedOn");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.ToView("view_dboard_common_incident_data");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardCommonKbData", b =>
                {
                    b.Property<string>("AssignGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("assignGroup");

                    b.Property<string>("AssignTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<string>("CurrStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("currStatus");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("ProblemDescPlainText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("problem_desc_plain_text");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sub_title");

                    b.ToView("view_dboard_common_kb_data");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardCommonProblemData", b =>
                {
                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<string>("CurrQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("currQueue");

                    b.Property<string>("CurrStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("currStatus");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Impact")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("impact");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.ToView("view_dboard_common_problem_data");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardCommonRequestData", b =>
                {
                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closedOn");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<string>("FulfilledBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("fulfilledBy");

                    b.Property<DateTime?>("FulfillmentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fulfillmentDate");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Impact")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("impact");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.ToView("view_dboard_common_request_data");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardCommonTask", b =>
                {
                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("ClosedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("closedBy");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closedOn");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("DueOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("dueOn");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.ToView("view_dboard_common_task");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardIncident", b =>
                {
                    b.Property<string>("AdditionalComments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("additionalComments");

                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<long?>("CategoryCount")
                        .HasColumnType("bigint");

                    b.Property<string>("CausedBy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("causedBy");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<string>("CiName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CiType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closedOn");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("ContactNo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactNo");

                    b.Property<bool?>("CreateKbFlag")
                        .HasColumnType("bit")
                        .HasColumnName("createKbFlag");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<int?>("Days")
                        .HasColumnType("int")
                        .HasColumnName("days");

                    b.Property<string>("DaysAgeing")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("daysAgeing");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("hasChild");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Impact")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("impact");

                    b.Property<bool?>("IsFromEmailMgr")
                        .HasColumnType("bit")
                        .HasColumnName("isFromEmailMgr");

                    b.Property<bool?>("IsParent")
                        .HasColumnType("bit")
                        .HasColumnName("isParent");

                    b.Property<string>("IsSlaresolveViolate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("isSLAResolveViolate");

                    b.Property<string>("IsSlaresponseViolate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("isSLAResponseViolate");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastNotesAddedOn");

                    b.Property<DateTime?>("LastReopenedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastReopenedOn");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<string>("NefcrDescription")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nefcrDescription");

                    b.Property<bool?>("NotificationModeCall")
                        .HasColumnType("bit")
                        .HasColumnName("notificationModeCall");

                    b.Property<bool?>("NotificationModeEmail")
                        .HasColumnType("bit")
                        .HasColumnName("notificationModeEmail");

                    b.Property<bool?>("NotificationModeSms")
                        .HasColumnType("bit")
                        .HasColumnName("notificationModeSMS");

                    b.Property<string>("OnBehalfOf")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("onBehalfOf");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OpenedWeek")
                        .HasColumnType("int")
                        .HasColumnName("openedWeek");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<long?>("QueueCount")
                        .HasColumnType("bigint")
                        .HasColumnName("queueCount");

                    b.Property<int?>("ReopenCount")
                        .HasColumnType("int")
                        .HasColumnName("reopenCount");

                    b.Property<string>("ResolutionCi")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resolutionCi");

                    b.Property<string>("ResolutionComment")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("resolutionComment");

                    b.Property<string>("ResolutionCriteria")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("resolutionCriteria");

                    b.Property<DateTime?>("ResolutionDateIdentified")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolutionDateIdentified");

                    b.Property<string>("ResolutionMethod")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("resolutionMethod");

                    b.Property<string>("ResolvedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("resolvedBy");

                    b.Property<DateTime?>("ResolvedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolvedOn");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("SlaBreachReason")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("slaBreachReason");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<DateTime?>("TargetResolveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("targetResolveTime");

                    b.Property<string>("VendorTicketId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vendorTicketId");

                    b.ToView("view_dboard_incident");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardIncidentChangeReqProb", b =>
                {
                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int")
                        .HasColumnName("assignedToId");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<int?>("CommonImpactEntId")
                        .HasColumnType("int")
                        .HasColumnName("commonImpactEntId");

                    b.Property<string>("CommonImpactEntName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("commonImpactEntName");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("createdById");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<int?>("Days")
                        .HasColumnType("int")
                        .HasColumnName("days");

                    b.Property<string>("DaysAgeing")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("daysAgeing");

                    b.Property<int?>("FirstAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("firstAssignQueueId");

                    b.Property<string>("Firstassignqueuename")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("firstassignqueuename");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("hasChild");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("isDraft");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("itemId");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<int?>("LastNotesAddedById")
                        .HasColumnType("int")
                        .HasColumnName("lastNotesAddedById");

                    b.Property<string>("LastNotesAddedByName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("lastNotesAddedByName");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastNotesAddedOn");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("locationId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("modifiedBy");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modifiedById");

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moduleName");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OpenedWeek")
                        .HasColumnType("int")
                        .HasColumnName("openedWeek");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<int?>("PrevAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("prevAssignQueueId");

                    b.Property<string>("Prevassignqueuename")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("prevassignqueuename");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priorityId");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("statusId");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("subCategoryId");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.ToView("view_dboard_incident_change_req_prob");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardIncidentCiLinked", b =>
                {
                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssetNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("assetNo");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<string>("CiIdNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ciIdNumber");

                    b.Property<string>("CiName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ciName");

                    b.Property<string>("CiType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ciType");

                    b.Property<string>("CiTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ciTypeName");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closedOn");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Impact")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("impact");

                    b.Property<int?>("IncidentId")
                        .HasColumnType("int")
                        .HasColumnName("incidentId");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("ResolvedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("resolvedBy");

                    b.Property<DateTime?>("ResolvedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolvedOn");

                    b.Property<string>("SerialNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("serialNo");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor");

                    b.ToView("view_dboard_incident_ci_linked");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardIncidentKbLinkedRecords", b =>
                {
                    b.Property<string>("IncAltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_altLocation");

                    b.Property<string>("IncAssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("inc_assignedTo");

                    b.Property<string>("IncCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_category");

                    b.Property<string>("IncChannel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_channel");

                    b.Property<DateTime?>("IncClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("inc_closedOn");

                    b.Property<string>("IncContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("inc_contactName");

                    b.Property<string>("IncCreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("inc_createdBy");

                    b.Property<int?>("IncCurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("inc_currentQueueId");

                    b.Property<int?>("IncId")
                        .HasColumnType("int")
                        .HasColumnName("inc_id");

                    b.Property<string>("IncIdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("inc_IdNumber");

                    b.Property<string>("IncImpact")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_impact");

                    b.Property<string>("IncItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_item");

                    b.Property<DateTime?>("IncLastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("inc_lastModifyDate");

                    b.Property<string>("IncLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_location");

                    b.Property<string>("IncModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("inc_modifiedBy");

                    b.Property<int?>("IncOrgId")
                        .HasColumnType("int")
                        .HasColumnName("inc_orgId");

                    b.Property<string>("IncOrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_orgName");

                    b.Property<string>("IncPriority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_priority");

                    b.Property<string>("IncQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_queue");

                    b.Property<string>("IncResolvedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("inc_resolvedBy");

                    b.Property<DateTime?>("IncResolvedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("inc_resolvedOn");

                    b.Property<string>("IncSeverity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_severity");

                    b.Property<string>("IncShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("inc_shortDesc");

                    b.Property<string>("IncStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_status");

                    b.Property<string>("IncSubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_SubCategory");

                    b.Property<string>("LinkCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_category");

                    b.Property<string>("LinkContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("link_contactName");

                    b.Property<string>("LinkCreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("link_createdBy");

                    b.Property<string>("LinkCurrQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_currQueue");

                    b.Property<string>("LinkCurrStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_currStatus");

                    b.Property<string>("LinkIdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("link_idNumber");

                    b.Property<string>("LinkItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_item");

                    b.Property<string>("LinkModuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link_moduleName");

                    b.Property<DateTime?>("LinkOpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("link_openedDate");

                    b.Property<string>("LinkOrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_orgName");

                    b.Property<string>("LinkShortDesc")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("link_shortDesc");

                    b.Property<string>("LinkSubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_subCategory");

                    b.ToView("view_dboard_incident_kb_linked_records");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardIncidentLinkedRecords", b =>
                {
                    b.Property<string>("IncAltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_altLocation");

                    b.Property<string>("IncAssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("inc_assignedTo");

                    b.Property<string>("IncCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_category");

                    b.Property<string>("IncChannel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_channel");

                    b.Property<DateTime?>("IncClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("inc_closedOn");

                    b.Property<string>("IncContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("inc_contactName");

                    b.Property<string>("IncCreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("inc_createdBy");

                    b.Property<int?>("IncCurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("inc_currentQueueId");

                    b.Property<int?>("IncId")
                        .HasColumnType("int")
                        .HasColumnName("inc_id");

                    b.Property<string>("IncIdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("inc_IdNumber");

                    b.Property<string>("IncImpact")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_impact");

                    b.Property<string>("IncItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_item");

                    b.Property<DateTime?>("IncLastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("inc_lastModifyDate");

                    b.Property<string>("IncLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_location");

                    b.Property<string>("IncModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("inc_modifiedBy");

                    b.Property<int?>("IncOrgId")
                        .HasColumnType("int")
                        .HasColumnName("inc_orgId");

                    b.Property<string>("IncOrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_orgName");

                    b.Property<string>("IncPriority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_priority");

                    b.Property<string>("IncQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_queue");

                    b.Property<string>("IncResolvedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("inc_resolvedBy");

                    b.Property<DateTime?>("IncResolvedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("inc_resolvedOn");

                    b.Property<string>("IncSeverity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_severity");

                    b.Property<string>("IncShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("inc_shortDesc");

                    b.Property<string>("IncStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_status");

                    b.Property<string>("IncSubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_SubCategory");

                    b.Property<bool?>("Iscategorymatch")
                        .HasColumnType("bit")
                        .HasColumnName("iscategorymatch");

                    b.Property<string>("LinkCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_category");

                    b.Property<string>("LinkContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("link_contactName");

                    b.Property<string>("LinkCreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("link_createdBy");

                    b.Property<string>("LinkCurrQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_currQueue");

                    b.Property<string>("LinkCurrStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_currStatus");

                    b.Property<string>("LinkIdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("link_idNumber");

                    b.Property<string>("LinkItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_item");

                    b.Property<string>("LinkModuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link_moduleName");

                    b.Property<DateTime?>("LinkOpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("link_openedDate");

                    b.Property<string>("LinkOrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_orgName");

                    b.Property<string>("LinkShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link_shortDesc");

                    b.Property<string>("LinkSubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_subCategory");

                    b.ToView("view_dboard_incident_linked_records");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardKb", b =>
                {
                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("AvailabelFor")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("availabelFor");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<string>("KbSource")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("kbSource");

                    b.Property<string>("KbType")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("kbType");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("modifiedBy");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<string>("SubTitle")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("subTitle");

                    b.Property<string>("Title")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("title");

                    b.ToView("view_dboard_kb");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardProblem", b =>
                {
                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<long?>("CategoryCount")
                        .HasColumnType("bigint");

                    b.Property<string>("CausedBy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("causedBy");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<string>("CiName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CiType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClosedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("closedBy");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closedOn");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contactNo");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<DateTime?>("DateIdentified")
                        .HasColumnType("datetime2")
                        .HasColumnName("dateIdentified");

                    b.Property<int?>("Days")
                        .HasColumnType("int")
                        .HasColumnName("days");

                    b.Property<string>("DaysAgeing")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("daysAgeing");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Impact")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("impact");

                    b.Property<string>("ImpactCi")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("impactCi");

                    b.Property<bool?>("IsMajor")
                        .HasColumnType("bit")
                        .HasColumnName("isMajor");

                    b.Property<string>("IsSlaresolveViolate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("isSLAResolveViolate");

                    b.Property<string>("IsSlaresponseViolate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("isSLAResponseViolate");

                    b.Property<bool?>("IsTested")
                        .HasColumnType("bit")
                        .HasColumnName("isTested");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<string>("KnownSource")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("knownSource");

                    b.Property<string>("KnownWorkaround")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("knownWorkaround");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastNotesAddedOn");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<bool?>("NotificationModeCall")
                        .HasColumnType("bit")
                        .HasColumnName("notificationModeCall");

                    b.Property<bool?>("NotificationModeEmail")
                        .HasColumnType("bit")
                        .HasColumnName("notificationModeEmail");

                    b.Property<bool?>("NotificationModeSms")
                        .HasColumnType("bit")
                        .HasColumnName("notificationModeSMS");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OpenedWeek")
                        .HasColumnType("int")
                        .HasColumnName("openedWeek");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("ProblemManager")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("problemManager");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<long?>("QueueCount")
                        .HasColumnType("bigint")
                        .HasColumnName("queueCount");

                    b.Property<DateTime?>("RcaDateIdentified")
                        .HasColumnType("datetime2")
                        .HasColumnName("rcaDateIdentified");

                    b.Property<string>("ResolutionCriteria")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("resolutionCriteria");

                    b.Property<string>("ResolutionMethod")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("resolutionMethod");

                    b.Property<string>("RootCause")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("root_cause");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<string>("SymptomCode")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("symptomCode");

                    b.Property<string>("Symptoms")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("symptoms");

                    b.Property<string>("TargetResolveTime")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("targetResolveTime");

                    b.Property<string>("VendorTicketId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("vendorTicketId");

                    b.ToView("view_dboard_problem");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardProblemCiLinked", b =>
                {
                    b.Property<string>("AssetNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("assetNo");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<string>("CiIdNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ciIdNumber");

                    b.Property<string>("CiLinkType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ciLinkType");

                    b.Property<string>("CiName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ciName");

                    b.Property<string>("CiTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ciTypeName");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("close_date");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<string>("CurrStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("currStatus");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Impact")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("impact");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<int?>("ProblemId")
                        .HasColumnType("int")
                        .HasColumnName("problemId");

                    b.Property<string>("SerialNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("serialNo");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor");

                    b.ToView("view_dboard_problem_ci_linked");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardProblemKbLinkedRecords", b =>
                {
                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("close_date");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Impact")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("impact");

                    b.Property<string>("LinkCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_category");

                    b.Property<string>("LinkContactName")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("link_contactName");

                    b.Property<string>("LinkCreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("link_createdBy");

                    b.Property<string>("LinkCurrQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_currQueue");

                    b.Property<string>("LinkCurrStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_currStatus");

                    b.Property<string>("LinkIdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("link_idNumber");

                    b.Property<string>("LinkItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_item");

                    b.Property<string>("LinkModuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link_moduleName");

                    b.Property<DateTime?>("LinkOpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("link_openedDate");

                    b.Property<string>("LinkOrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_orgName");

                    b.Property<string>("LinkShortDesc")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("link_shortDesc");

                    b.Property<string>("LinkSubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_subCategory");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("ProbCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("prob_category");

                    b.Property<string>("ProbContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("prob_contactName");

                    b.Property<string>("ProbCreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("prob_createdBy");

                    b.Property<string>("ProbCurrQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("prob_currQueue");

                    b.Property<string>("ProbCurrStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("prob_currStatus");

                    b.Property<string>("ProbIdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("prob_idNumber");

                    b.Property<string>("ProbItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("prob_item");

                    b.Property<string>("ProbModuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prob_moduleName");

                    b.Property<DateTime?>("ProbOpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("prob_openedDate");

                    b.Property<string>("ProbOrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("prob_orgName");

                    b.Property<string>("ProbShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("prob_shortDesc");

                    b.Property<string>("ProbSubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("prob_subCategory");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.ToView("view_dboard_problem_kb_linked_records");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardProblemLinkedRecords", b =>
                {
                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool?>("Iscategorymatch")
                        .HasColumnType("bit")
                        .HasColumnName("iscategorymatch");

                    b.Property<string>("LinkCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_category");

                    b.Property<string>("LinkContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("link_contactName");

                    b.Property<string>("LinkCreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("link_createdBy");

                    b.Property<string>("LinkCurrQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_currQueue");

                    b.Property<string>("LinkCurrStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_currStatus");

                    b.Property<string>("LinkIdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("link_idNumber");

                    b.Property<string>("LinkItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_item");

                    b.Property<string>("LinkModuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link_moduleName");

                    b.Property<DateTime?>("LinkOpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("link_openedDate");

                    b.Property<string>("LinkOrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_orgName");

                    b.Property<string>("LinkShortDesc")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("link_shortDesc");

                    b.Property<string>("LinkSubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_subCategory");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("ProbCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("prob_category");

                    b.Property<string>("ProbContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("prob_contactName");

                    b.Property<string>("ProbCreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("prob_createdBy");

                    b.Property<string>("ProbCurrQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("prob_currQueue");

                    b.Property<string>("ProbCurrStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("prob_currStatus");

                    b.Property<string>("ProbIdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("prob_idNumber");

                    b.Property<string>("ProbItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("prob_item");

                    b.Property<DateTime?>("ProbOpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("prob_openedDate");

                    b.Property<string>("ProbOrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("prob_orgName");

                    b.Property<string>("ProbShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("prob_shortDesc");

                    b.Property<string>("ProbSubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("prob_subCategory");

                    b.ToView("view_dboard_problem_linked_records");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardRecordQueueCount", b =>
                {
                    b.Property<long?>("Assigntocount")
                        .HasColumnType("bigint")
                        .HasColumnName("assigntocount");

                    b.Property<long?>("Categorycount")
                        .HasColumnType("bigint")
                        .HasColumnName("categorycount");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<long?>("Queuecount")
                        .HasColumnType("bigint")
                        .HasColumnName("queuecount");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.ToView("view_dboard_record_queue_count");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardRequest", b =>
                {
                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closedOn");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contactNo");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<int?>("Days")
                        .HasColumnType("int")
                        .HasColumnName("days");

                    b.Property<string>("DaysAgeing")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("daysAgeing");

                    b.Property<string>("FulfilledBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("fulfilledBy");

                    b.Property<bool?>("FulfilledFirstTime")
                        .HasColumnType("bit")
                        .HasColumnName("fulfilledFirstTime");

                    b.Property<DateTime?>("FulfillmentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fulfillmentDate");

                    b.Property<string>("FulfillmentMethod")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fulfillmentMethod");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("hasChild");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<DateTime?>("LastNotesAddedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastNotesAddedOn");

                    b.Property<DateTime?>("LastReopenedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastReopenedOn");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("modifiedBy");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OpenedWeek")
                        .HasColumnType("int")
                        .HasColumnName("openedWeek");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<int?>("ReopenCount")
                        .HasColumnType("int")
                        .HasColumnName("reopenCount");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<DateTime?>("TargetResolveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("targetResolveTime");

                    b.ToView("view_dboard_request");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardSurveyForm", b =>
                {
                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("answer");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closedOn");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdOn");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("customerName");

                    b.Property<string>("FirstName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("firstName");

                    b.Property<string>("FormName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("formName");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<string>("LastName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("lastName");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moduleName");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("question");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("recordId");

                    b.Property<string>("ResolvedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("resolvedBy");

                    b.Property<DateTime?>("ResolvedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolvedOn");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<DateTime?>("SubmittedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("submittedOn");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("userName");

                    b.Property<string>("ValueText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("valueText");

                    b.ToView("view_dboard_survey_form");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardTask", b =>
                {
                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("ClosedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("closedBy");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closedOn");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("DueOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("dueOn");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("TicketAltLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketAltLocation");

                    b.Property<string>("TicketAssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ticketAssignedTo");

                    b.Property<string>("TicketCategory")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketCategory");

                    b.Property<string>("TicketChannel")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketChannel");

                    b.Property<DateTime?>("TicketClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("ticketClosedOn");

                    b.Property<string>("TicketContactName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketContactName");

                    b.Property<string>("TicketCreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketCreatedBy");

                    b.Property<string>("TicketIdNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketIdNumber");

                    b.Property<string>("TicketImpact")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketImpact");

                    b.Property<string>("TicketItem")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketItem");

                    b.Property<DateTime?>("TicketLastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ticketLastModifyDate");

                    b.Property<string>("TicketLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketLocation");

                    b.Property<string>("TicketModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketModifiedBy");

                    b.Property<DateTime?>("TicketOpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ticketOpenedDate");

                    b.Property<string>("TicketOrgName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketOrgName");

                    b.Property<string>("TicketPriority")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketPriority");

                    b.Property<string>("TicketQueue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketQueue");

                    b.Property<string>("TicketSortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketSortDesc");

                    b.Property<string>("TicketStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketStatus");

                    b.Property<string>("TicketSubCategory")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketSubCategory");

                    b.Property<string>("TicketUrgency")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ticketUrgency");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.ToView("view_dboard_task");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardTicketSla", b =>
                {
                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("closedOn");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moduleName");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<int?>("ResolveActualMin")
                        .HasColumnType("int")
                        .HasColumnName("resolveActualMin");

                    b.Property<DateTime?>("ResolveEndOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolveEndOn");

                    b.Property<int?>("ResolveSlaPercentage")
                        .HasColumnType("int")
                        .HasColumnName("resolveSlaPercentage");

                    b.Property<string>("ResolveSlaStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resolveSlaStatus");

                    b.Property<DateTime?>("ResolveStartOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolveStartOn");

                    b.Property<int?>("ResolveTargetMin")
                        .HasColumnType("int")
                        .HasColumnName("resolveTargetMin");

                    b.Property<DateTime?>("ResolveTargetOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolveTargetOn");

                    b.Property<string>("ResolvedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("resolvedBy");

                    b.Property<DateTime?>("ResolvedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("resolvedOn");

                    b.Property<int?>("ResponseActualMin")
                        .HasColumnType("int")
                        .HasColumnName("responseActualMin");

                    b.Property<DateTime?>("ResponseEndOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("responseEndOn");

                    b.Property<int?>("ResponseSlaPercentage")
                        .HasColumnType("int")
                        .HasColumnName("responseSlaPercentage");

                    b.Property<string>("ResponseSlaStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("responseSlaStatus");

                    b.Property<DateTime?>("ResponseStartOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("responseStartOn");

                    b.Property<int?>("ResponseTargetMin")
                        .HasColumnType("int")
                        .HasColumnName("responseTargetMin");

                    b.Property<DateTime?>("ResponseTargetOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("responseTargetOn");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.ToView("view_dboard_ticket_sla");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewDboardTicketSpentTime", b =>
                {
                    b.Property<string>("AssignedQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("assignedQueue");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<long?>("Assigntocount")
                        .HasColumnType("bigint")
                        .HasColumnName("assigntocount");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<long?>("Categorycount")
                        .HasColumnType("bigint")
                        .HasColumnName("categorycount");

                    b.Property<string>("Categorynew")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("categorynew");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<string>("CurrAssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("currAssignedTo");

                    b.Property<string>("CurrQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("currQueue");

                    b.Property<string>("CurrStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("currStatus");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fromDate");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moduleName");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<long?>("Queuecount")
                        .HasColumnType("bigint")
                        .HasColumnName("queuecount");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<bool?>("SlaPause")
                        .HasColumnType("bit")
                        .HasColumnName("slaPause");

                    b.Property<double?>("SpentTimeMinDdhhmm")
                        .HasColumnType("float")
                        .HasColumnName("spentTimeMinDDHHMM");

                    b.Property<double?>("SpentTimeMinTotalDdhhmm")
                        .HasColumnType("float")
                        .HasColumnName("spentTimeMinTotalDDHHMM");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("toDate");

                    b.ToView("view_dboard_ticket_spent_time");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewIncReq", b =>
                {
                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedGroupName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int")
                        .HasColumnName("assignedToId");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("createdById");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modifiedById");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("moduleId");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Slacolor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("slacolor");

                    b.Property<int?>("Slapercentage")
                        .HasColumnType("int")
                        .HasColumnName("slapercentage");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<DateTime?>("TargetResolveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("targetResolveTime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.ToView("view_inc_req");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewMyfavMyapprovals", b =>
                {
                    b.Property<int>("ApprApprovalId")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("ApprApproverId")
                        .HasColumnType("int")
                        .HasColumnName("approverId");

                    b.Property<string>("ApprComment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<string>("ApprCreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<DateTime?>("ApprCreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdOn");

                    b.Property<int?>("ApprCreatedbyId")
                        .HasColumnType("int")
                        .HasColumnName("createdById");

                    b.Property<string>("ApprDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripion");

                    b.Property<string>("ApprIdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("ApprModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<int?>("ApprModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modifiedById");

                    b.Property<DateTime?>("ApprModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modifiedOn");

                    b.Property<string>("ApprModule")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("module");

                    b.Property<int?>("ApprModuleId")
                        .HasColumnType("int")
                        .HasColumnName("moduleId");

                    b.Property<int?>("ApprOrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("ApprOrgName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("orgName");

                    b.Property<string>("ApprQueue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("queue");

                    b.Property<int?>("ApprQueueId")
                        .HasColumnType("int")
                        .HasColumnName("queueId");

                    b.Property<string>("ApprRecord")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("record");

                    b.Property<int?>("ApprRecordId")
                        .HasColumnType("int")
                        .HasColumnName("recordId");

                    b.Property<string>("ApprRequester")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("requester");

                    b.Property<int?>("ApprRequesterId")
                        .HasColumnType("int")
                        .HasColumnName("requesterId");

                    b.Property<string>("ApprStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<int?>("ApprStatusId")
                        .HasColumnType("int")
                        .HasColumnName("statusId");

                    b.Property<string>("Approver")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("approver");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasColumnName("sequence");

                    b.Property<string>("contactEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contactemail");

                    b.Property<string>("contactFirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contactfirstname");

                    b.Property<bool?>("contactIsActive")
                        .HasColumnType("bit")
                        .HasColumnName("contactisactive");

                    b.Property<string>("contactLastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contactlastname");

                    b.Property<string>("contactMobile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contactmobile");

                    b.Property<string>("contactSiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contacttitle");

                    b.Property<string>("contactUserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contactusername");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<bool?>("isVip")
                        .HasColumnType("bit")
                        .HasColumnName("is_vip");

                    b.Property<int?>("rowNumberId")
                        .HasColumnType("int")
                        .HasColumnName("rowNumberId");

                    b.HasKey("ApprApprovalId")
                        .HasName("id");

                    b.ToTable("view_myfav_myapprovals");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewMyfavMygroupwork", b =>
                {
                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<string>("AltLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int")
                        .HasColumnName("assignedToId");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("Channel")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("channel");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("createdById");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("ImpactedCi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("impactedCi");

                    b.Property<bool?>("IsParent")
                        .HasColumnType("bit")
                        .HasColumnName("isParent");

                    b.Property<bool?>("IsVip")
                        .HasColumnType("bit")
                        .HasColumnName("is_vip");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modifiedById");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<int?>("ParentIncidentId")
                        .HasColumnType("int")
                        .HasColumnName("parentIncidentId");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("Severity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Slacolor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("slacolor");

                    b.Property<int?>("Slapercentage")
                        .HasColumnType("int")
                        .HasColumnName("slapercentage");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<DateTime?>("TargetResolveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("targetResolveTime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.ToView("view_myfav_mygroupwork");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewMyfavMytickets", b =>
                {
                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int")
                        .HasColumnName("assignedToId");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("Channel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("channel");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("createdById");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("ImpactedCi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("impactedCi");

                    b.Property<bool?>("IsParent")
                        .HasColumnType("bit")
                        .HasColumnName("is_parent");

                    b.Property<bool?>("IsVip")
                        .HasColumnType("bit")
                        .HasColumnName("is_vip");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modifiedById");

                    b.Property<int?>("Moduleid")
                        .HasColumnType("int")
                        .HasColumnName("moduleid");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<int?>("QueueId")
                        .HasColumnType("int")
                        .HasColumnName("queueId");

                    b.Property<string>("Severity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Slacolor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("slacolor");

                    b.Property<int?>("Slapercentage")
                        .HasColumnType("int")
                        .HasColumnName("slapercentage");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<DateTime?>("TargetResolveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("targetResolveTime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.ToView("view_myfav_mytickets");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewMyfavMywork", b =>
                {
                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int")
                        .HasColumnName("assignedToId");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("Channel")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("channel");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("createdById");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("ImpactedCi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("impactedCi");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_draft");

                    b.Property<bool?>("IsParent")
                        .HasColumnType("bit")
                        .HasColumnName("isParent");

                    b.Property<bool?>("IsVip")
                        .HasColumnType("bit")
                        .HasColumnName("is_vip");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modifiedById");

                    b.Property<int?>("Moduleid")
                        .HasColumnType("int")
                        .HasColumnName("moduleid");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<int?>("ParentIncidentId")
                        .HasColumnType("int")
                        .HasColumnName("parentIncidentId");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("Severity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Slacolor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("slacolor");

                    b.Property<int?>("Slapercentage")
                        .HasColumnType("int")
                        .HasColumnName("slapercentage");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<DateTime?>("TargetResolveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("targetResolveTime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.ToView("view_myfav_mywork");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewMyfavOpenUnassigned", b =>
                {
                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<string>("AltLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int")
                        .HasColumnName("assignedToId");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("Channel")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("channel");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("createdById");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<string>("ImpactedCi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("impactedCi");

                    b.Property<bool?>("IsParent")
                        .HasColumnType("bit")
                        .HasColumnName("isParent");

                    b.Property<bool?>("IsVip")
                        .HasColumnType("bit")
                        .HasColumnName("is_vip");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("modifiedBy");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modifiedById");

                    b.Property<int?>("Moduleid")
                        .HasColumnType("int")
                        .HasColumnName("moduleid");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<int?>("ParentIncidentId")
                        .HasColumnType("int")
                        .HasColumnName("parentIncidentId");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("Severity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("severity");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Slacolor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("slacolor");

                    b.Property<int?>("Slapercentage")
                        .HasColumnType("int")
                        .HasColumnName("slapercentage");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<DateTime?>("TargetResolveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("targetResolveTime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.ToView("view_myfav_open_unassigned");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewTrnApprovalData", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.ToView("view_trn_approval_data");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewUniversalSearchData", b =>
                {
                    b.Property<int?>("AltLocationId")
                        .HasColumnType("int")
                        .HasColumnName("alt_location_id");

                    b.Property<string>("AssignTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assign_to");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("ChannelId")
                        .HasColumnType("int")
                        .HasColumnName("channel_id");

                    b.Property<int?>("ConfigCiId")
                        .HasColumnType("int")
                        .HasColumnName("config_ci_id");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contact_name");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_on");

                    b.Property<int?>("CurrAssignQueueId")
                        .HasColumnType("int")
                        .HasColumnName("curr_assign_queue_id");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("id_number");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_on");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int")
                        .HasColumnName("priority_id");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("record_id");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("short_desc");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("sub_category_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.ToView("view_universal_search_data");
                });

            modelBuilder.Entity("aditaas_v5.Models.ViewVipticket", b =>
                {
                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("additional_comments");

                    b.Property<string>("AltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("altLocation");

                    b.Property<string>("AssignedTo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assignedTo");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int")
                        .HasColumnName("assignedToId");

                    b.Property<string>("Category")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("category");

                    b.Property<string>("ContactName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("createdBy");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("createdById");

                    b.Property<DateTime?>("Createdon")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdon");

                    b.Property<int?>("CurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("currentQueueId");

                    b.Property<bool?>("HasChild")
                        .HasColumnType("bit")
                        .HasColumnName("has_child");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idNumber");

                    b.Property<bool?>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("isDraft");

                    b.Property<bool?>("IsParent")
                        .HasColumnType("bit")
                        .HasColumnName("is_parent");

                    b.Property<bool?>("IsVip")
                        .HasColumnType("bit")
                        .HasColumnName("is_vip");

                    b.Property<string>("Item")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("item");

                    b.Property<DateTime?>("LastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastModifyDate");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("modifiedBy");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("modifiedById");

                    b.Property<int?>("Moduleid")
                        .HasColumnType("int")
                        .HasColumnName("moduleid");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("openedDate");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("orgId");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("orgName");

                    b.Property<string>("Priority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("priority");

                    b.Property<string>("Queue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shortDesc");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("status");

                    b.Property<string>("SubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("subCategory");

                    b.Property<DateTime?>("TargetResolveTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("targetResolveTime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.ToView("view_vipticket");
                });

            modelBuilder.Entity("aditaas_v5.Models.WwwViewDboardIncidentProblemLinkedRecords", b =>
                {
                    b.Property<string>("IncAltLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_altLocation");

                    b.Property<string>("IncAssignedTo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inc_assignedTo");

                    b.Property<string>("IncCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_category");

                    b.Property<string>("IncChannel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_channel");

                    b.Property<DateTime?>("IncClosedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("inc_closedOn");

                    b.Property<string>("IncContactName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inc_contactName");

                    b.Property<string>("IncCreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inc_createdBy");

                    b.Property<int?>("IncCurrentQueueId")
                        .HasColumnType("int")
                        .HasColumnName("inc_currentQueueId");

                    b.Property<int?>("IncId")
                        .HasColumnType("int")
                        .HasColumnName("inc_id");

                    b.Property<string>("IncIdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("inc_IdNumber");

                    b.Property<string>("IncImpact")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_impact");

                    b.Property<string>("IncItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_item");

                    b.Property<DateTime?>("IncLastModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("inc_lastModifyDate");

                    b.Property<string>("IncLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_location");

                    b.Property<string>("IncModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inc_modifiedBy");

                    b.Property<string>("IncModuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inc_moduleName");

                    b.Property<int?>("IncOrgId")
                        .HasColumnType("int")
                        .HasColumnName("inc_orgId");

                    b.Property<string>("IncOrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_orgName");

                    b.Property<string>("IncPriority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_priority");

                    b.Property<string>("IncQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_queue");

                    b.Property<string>("IncResolvedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inc_resolvedBy");

                    b.Property<DateTime?>("IncResolvedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("inc_resolvedOn");

                    b.Property<string>("IncSeverity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_severity");

                    b.Property<string>("IncShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("inc_shortDesc");

                    b.Property<string>("IncStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_status");

                    b.Property<string>("IncSubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_SubCategory");

                    b.Property<string>("LinkCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_category");

                    b.Property<string>("LinkContactName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link_contactName");

                    b.Property<string>("LinkCreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link_createdBy");

                    b.Property<string>("LinkCurrQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_currQueue");

                    b.Property<string>("LinkCurrStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_currStatus");

                    b.Property<string>("LinkIdNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("link_idNumber");

                    b.Property<string>("LinkItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_item");

                    b.Property<string>("LinkModuleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link_moduleName");

                    b.Property<DateTime?>("LinkOpenedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("link_openedDate");

                    b.Property<string>("LinkOrgName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_orgName");

                    b.Property<string>("LinkShortDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("link_shortDesc");

                    b.Property<string>("LinkSubCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("link_subCategory");

                    b.ToTable("www_view_dboard_incident_problem_linked_records");
                });

            modelBuilder.Entity("aditaas_v5.Models.WwwViewDboardProblemIncidentLink", b =>
                {
                    b.Property<int?>("Currentqueueid")
                        .HasColumnType("int")
                        .HasColumnName("currentqueueid");

                    b.Property<string>("IncAltlocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_altlocation");

                    b.Property<string>("IncAssignedto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inc_assignedto");

                    b.Property<string>("IncCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_category");

                    b.Property<string>("IncCausedby")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_causedby");

                    b.Property<string>("IncChannel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_channel");

                    b.Property<DateTime?>("IncClosedon")
                        .HasColumnType("datetime2")
                        .HasColumnName("inc_closedon");

                    b.Property<string>("IncContactname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inc_contactname");

                    b.Property<string>("IncContactno")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inc_contactno");

                    b.Property<string>("IncCreatedby")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_createdby");

                    b.Property<string>("IncIdnumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("inc_idnumber");

                    b.Property<string>("IncItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_item");

                    b.Property<string>("IncLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_location");

                    b.Property<string>("IncModifiedby")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_modifiedby");

                    b.Property<DateTime?>("IncModifiedon")
                        .HasColumnType("datetime2")
                        .HasColumnName("inc_modifiedon");

                    b.Property<DateTime?>("IncOpenedon")
                        .HasColumnType("datetime2")
                        .HasColumnName("inc_openedon");

                    b.Property<string>("IncPriority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_priority");

                    b.Property<string>("IncQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_queue");

                    b.Property<string>("IncResolutioncriteria")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_resolutioncriteria");

                    b.Property<string>("IncResolutionmethod")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_resolutionmethod");

                    b.Property<string>("IncResolvedby")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inc_resolvedby");

                    b.Property<DateTime?>("IncResolvedon")
                        .HasColumnType("datetime2")
                        .HasColumnName("inc_resolvedon");

                    b.Property<string>("IncSeverity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_severity");

                    b.Property<string>("IncShortdesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("inc_shortdesc");

                    b.Property<string>("IncStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_status");

                    b.Property<string>("IncSubcategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("inc_subcategory");

                    b.Property<string>("IncVendorticketid")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("inc_vendorticketid");

                    b.Property<int?>("Orgid")
                        .HasColumnType("int")
                        .HasColumnName("orgid");

                    b.Property<string>("PrAltlocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pr_altlocation");

                    b.Property<string>("PrAssignedto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pr_assignedto");

                    b.Property<string>("PrCategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("pr_category");

                    b.Property<string>("PrClosedby")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pr_closedby");

                    b.Property<DateTime?>("PrClosedon")
                        .HasColumnType("datetime2")
                        .HasColumnName("pr_closedon");

                    b.Property<string>("PrContactname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pr_contactname");

                    b.Property<string>("PrContactno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("pr_contactno");

                    b.Property<string>("PrCreatedby")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pr_createdby");

                    b.Property<string>("PrIdnumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("pr_idnumber");

                    b.Property<string>("PrItem")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("pr_item");

                    b.Property<string>("PrLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pr_location");

                    b.Property<string>("PrModifiedby")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pr_modifiedby");

                    b.Property<DateTime?>("PrModifiedon")
                        .HasColumnType("datetime2")
                        .HasColumnName("pr_modifiedon");

                    b.Property<DateTime?>("PrOpenedon")
                        .HasColumnType("datetime2")
                        .HasColumnName("pr_openedon");

                    b.Property<string>("PrOrgname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pr_orgname");

                    b.Property<string>("PrPriority")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("pr_priority");

                    b.Property<string>("PrQueue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pr_queue");

                    b.Property<string>("PrShortdesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("pr_shortdesc");

                    b.Property<string>("PrStatus")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("pr_status");

                    b.Property<string>("PrSubcategory")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("pr_subcategory");

                    b.Property<string>("PrVendorticketid")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pr_vendorticketid");

                    b.ToTable("www_view_dboard_problem_incident_link");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstDiscoveryIpAddress", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblAutodiscMstDiscovery", "Discovery")
                        .WithMany("TblAutodiscMstDiscoveryIpAddress")
                        .HasForeignKey("DiscoveryId")
                        .HasConstraintName("tbl_autodisc_mst_discovery_ip_address_fk");

                    b.Navigation("Discovery");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstDiscoveryRuleAction", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblAutodiscMstDiscoveryRule", "DiscoveryRule")
                        .WithMany("TblAutodiscMstDiscoveryRuleAction")
                        .HasForeignKey("DiscoveryRuleId")
                        .HasConstraintName("tbl_autodisc_mst_discovery_rule_action_fk");

                    b.Navigation("DiscoveryRule");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstDiscoveryRuleCondition", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblAutodiscMstDiscoveryRule", "DiscoveryRule")
                        .WithMany("TblAutodiscMstDiscoveryRuleCondition")
                        .HasForeignKey("DiscoveryRuleId")
                        .HasConstraintName("tbl_autodisc_mst_discovery_rule_condition_fk");

                    b.Navigation("DiscoveryRule");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscTrnDiscoveryDetail", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblAutodiscTrnDiscovery", "TrnDiscovery")
                        .WithMany("TblAutodiscTrnDiscoveryDetail")
                        .HasForeignKey("TrnDiscoveryId")
                        .HasConstraintName("tbl_autodisc_trn_discovery_detail_fk");

                    b.Navigation("TrnDiscovery");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfAdLdap", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblCnfAdLdap")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_cnf_ad_ldap_fk_org_id");

                    b.Navigation("Org");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfAdLdapFieldMap", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfAdLdap", "AdLdap")
                        .WithMany("TblCnfAdLdapFieldMap")
                        .HasForeignKey("AdLdapId")
                        .HasConstraintName("tbl_cnf_ad_ldap_field_map_fk_ad_ldap_id");

                    b.Navigation("AdLdap");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfAdSchedule", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfAdLdap", "AdLdap")
                        .WithMany("TblCnfAdSchedule")
                        .HasForeignKey("AdLdapId")
                        .HasConstraintName("tbl_cnf_ad_schedule_fk_ad_ldap_id");

                    b.Navigation("AdLdap");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfBusRule", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstModule", "Module")
                        .WithMany("TblCnfBusRule")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("tbl_cnf_bus_rule_fk_module_id");

                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblCnfBusRule")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_cnf_bus_rule_fk_org_id");

                    b.Navigation("Module");

                    b.Navigation("Org");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfBusRuleAction", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfBusRule", "BusRule")
                        .WithMany("TblCnfBusRuleAction")
                        .HasForeignKey("BusRuleId")
                        .HasConstraintName("tbl_cnf_rule_action_fk_bus_rule_id");

                    b.Navigation("BusRule");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfBusRuleCond", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfBusRule", "BusRule")
                        .WithMany("TblCnfBusRuleCond")
                        .HasForeignKey("BusRuleId")
                        .HasConstraintName("tbl_cnf_rule_cond_fk_bus_rule_id");

                    b.HasOne("aditaas_v5.Models.TblCnfBusField", "FormField")
                        .WithMany("TblCnfBusRuleCond")
                        .HasForeignKey("FormFieldId")
                        .HasConstraintName("tbl_cnf_rule_cond_fk_form_field_id")
                        .IsRequired();

                    b.Navigation("BusRule");

                    b.Navigation("FormField");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfCatalogCat", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblCnfCatalogCat")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_cnf_catalog_cat_fk_org_id");

                    b.Navigation("Org");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfCatalogQuestionDtls", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfCatalogQuestion", "CatalogQuestion")
                        .WithMany("TblCnfCatalogQuestionDtls")
                        .HasForeignKey("CatalogQuestionId")
                        .HasConstraintName("tbl_cnf_catalog_question_dtls_fk_catalog_question_id");

                    b.Navigation("CatalogQuestion");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfCatalogResource", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfCatalogQuestion", "CatalogQuestion")
                        .WithMany("TblCnfCatalogResource")
                        .HasForeignKey("CatalogQuestionId")
                        .HasConstraintName("tbl_cnf_catalog_resource_fk_catalog_question_id");

                    b.Navigation("CatalogQuestion");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfCatalogResourceDtls", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfCatalogResource", "CatalogResource")
                        .WithMany("TblCnfCatalogResourceDtls")
                        .HasForeignKey("CatalogResourceId")
                        .HasConstraintName("tbl_cnf_catalog_resource_dtls_fk_catalog_resource_id");

                    b.Navigation("CatalogResource");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfDataArchiveCond", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfDataArchive", "Archive")
                        .WithMany("TblCnfDataArchiveCond")
                        .HasForeignKey("ArchiveId")
                        .HasConstraintName("tbl_cnf_data_archive_cond_archive_id")
                        .IsRequired();

                    b.HasOne("aditaas_v5.Models.TblCnfBusField", "FormField")
                        .WithMany("TblCnfDataArchiveCond")
                        .HasForeignKey("FormFieldId")
                        .HasConstraintName("tbl_cnf_data_archive_cond_fk")
                        .IsRequired();

                    b.Navigation("Archive");

                    b.Navigation("FormField");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfDatadriveVisborad", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedBy")
                        .WithMany("TblCnfDatadriveVisboradCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("tbl_cnf_datadrive_visborad_fk_created_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedBy")
                        .WithMany("TblCnfDatadriveVisboradModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("tbl_cnf_datadrive_visborad_fk_modified_by_id");

                    b.HasOne("aditaas_v5.Models.TblCnfBusField", "SwimFormField")
                        .WithMany("TblCnfDatadriveVisboradSwimFormField")
                        .HasForeignKey("SwimFormFieldId")
                        .HasConstraintName("tbl_cnf_datadrive_visborad_fk_swim_form_field_id");

                    b.HasOne("aditaas_v5.Models.TblCnfBusField", "VertlaneFormField")
                        .WithMany("TblCnfDatadriveVisboradVertlaneFormField")
                        .HasForeignKey("VertlaneFormFieldId")
                        .HasConstraintName("tbl_cnf_datadrive_visborad_fk_vertlane_form_field_id");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("SwimFormField");

                    b.Navigation("VertlaneFormField");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfEmailMgr", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedBy")
                        .WithMany("TblCnfEmailMgrCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("tbl_cnf_mail_incoming_fk_created_by");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedBy")
                        .WithMany("TblCnfEmailMgrModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("tbl_cnf_mail_incoming_fk_modified_by");

                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblCnfEmailMgr")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_cnf_mail_incoming_fk_org_id");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Org");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfEmailMgrExtractField", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfEmailMgr", "EmailMgr")
                        .WithMany("TblCnfEmailMgrExtractField")
                        .HasForeignKey("EmailMgrId")
                        .HasConstraintName("tbl_cnf_email_mgr_extract_field_fk");

                    b.Navigation("EmailMgr");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfEmailMgrRule", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfEmailMgr", "EmailMgr")
                        .WithMany("TblCnfEmailMgrRule")
                        .HasForeignKey("EmailMgrId")
                        .HasConstraintName("tbl_cnf_email_mgr_rule_fk_mail_incoming_id");

                    b.Navigation("EmailMgr");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfFreefrmVisborad", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblCnfFreefrmVisborad")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_cnf_freefrm_visborad_fk_org_id");

                    b.Navigation("Org");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfFreefrmVisboradLane", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfFreefrmVisborad", "FreefrmVisborad")
                        .WithMany("TblCnfFreefrmVisboradLane")
                        .HasForeignKey("FreefrmVisboradId")
                        .HasConstraintName("tbl_cnf_freefrm_visborad_lane_fk_freefrm_visboard_id");

                    b.Navigation("FreefrmVisborad");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfMailOutgoing", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedByNavigation")
                        .WithMany("TblCnfMailOutgoingCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("tbl_cnf_mail_incoming_fk_created_by");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedByNavigation")
                        .WithMany("TblCnfMailOutgoingModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("tbl_cnf_mail_incoming_fk_modified_by");

                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblCnfMailOutgoing")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_cnf_mail_outgoing_fk_org_id");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("Org");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfNotifyRule", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfEmailTemplate", "EmailTemplate")
                        .WithMany("TblCnfNotifyRule")
                        .HasForeignKey("EmailTemplateId")
                        .HasConstraintName("tbl_cnf_notification_fk_email_template_id");

                    b.HasOne("aditaas_v5.Models.TblMstModule", "Module")
                        .WithMany("TblCnfNotifyRule")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("tbl_cnf_notification_fk_module_id");

                    b.Navigation("EmailTemplate");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfSla", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstModule", "Module")
                        .WithMany("TblCnfSla")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("tbl_cnf_sla_module_id");

                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblCnfSla")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_cnf_sla_fk_org_id");

                    b.Navigation("Module");

                    b.Navigation("Org");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfSlaAction", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfSla", "Sla")
                        .WithMany("TblCnfSlaAction")
                        .HasForeignKey("SlaId")
                        .HasConstraintName("tbl_sla_action_fk_sla_id");

                    b.Navigation("Sla");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfSlaCond", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfBusField", "FormField")
                        .WithMany("TblCnfSlaCond")
                        .HasForeignKey("FormFieldId")
                        .HasConstraintName("tbl_sla_cond_fk_form_field")
                        .IsRequired();

                    b.HasOne("aditaas_v5.Models.TblCnfSla", "Sla")
                        .WithMany("TblCnfSlaCond")
                        .HasForeignKey("SlaId")
                        .HasConstraintName("tbl_sla_cond_fk_sla_id");

                    b.Navigation("FormField");

                    b.Navigation("Sla");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfTemplateQueueMap", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstModule", "Module")
                        .WithMany("TblCnfTemplateQueueMap")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("tbl_cnf_queue_template_map_fk_module_id");

                    b.HasOne("aditaas_v5.Models.TblMstQueue", "Queue")
                        .WithMany("TblCnfTemplateQueueMap")
                        .HasForeignKey("QueueId")
                        .HasConstraintName("tbl_cnf_queue_template_map_queue_id");

                    b.Navigation("Module");

                    b.Navigation("Queue");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstAdminActivityLog", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstAdminModule", "Module")
                        .WithMany("TblMstAdminActivityLog")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("tbl_mst_admin_activity_log_fk");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstDbViewColumn", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstDbView", "DbView")
                        .WithMany("TblMstDbViewColumn")
                        .HasForeignKey("DbViewId")
                        .HasConstraintName("tbl_mst_db_view_column_db_view_id_fkey")
                        .IsRequired();

                    b.Navigation("DbView");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstDepartment", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "ApproverUser")
                        .WithMany("TblMstDepartmentApproverUser")
                        .HasForeignKey("ApproverUserId")
                        .HasConstraintName("tbl_mst_department_fk_approver_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "HeadUser")
                        .WithMany("TblMstDepartmentHeadUser")
                        .HasForeignKey("HeadUserId")
                        .HasConstraintName("tbl_mst_department_fk_head_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "InchargeUser")
                        .WithMany("TblMstDepartmentInchargeUser")
                        .HasForeignKey("InchargeUserId")
                        .HasConstraintName("tbl_mst_department_fk_incharge_id");

                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblMstDepartment")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_mst_department_fk_org_id");

                    b.Navigation("ApproverUser");

                    b.Navigation("HeadUser");

                    b.Navigation("InchargeUser");

                    b.Navigation("Org");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstEntityAttr", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstEntity", "Entity")
                        .WithMany("TblMstEntityAttr")
                        .HasForeignKey("EntityId")
                        .HasConstraintName("tbl_mst_entity_list_fk_entity_id");

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstHoliday", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblMstHoliday")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_mst_holiday_fk_org_id");

                    b.HasOne("aditaas_v5.Models.TblMstSite", "Site")
                        .WithMany("TblMstHoliday")
                        .HasForeignKey("SiteId")
                        .HasConstraintName("tbl_mst_holiday_fk_site_id");

                    b.Navigation("Org");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstModule", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedBy")
                        .WithMany("TblMstModuleCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("tbl_mst_module_fk_created_by");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedBy")
                        .WithMany("TblMstModuleModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("tbl_mst_module_fk_modified_by");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstModuleCustFieldRoleMapper", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstModuleCustField", "FieldU")
                        .WithMany("TblMstModuleCustFieldRoleMapper")
                        .HasForeignKey("FieldUid")
                        .HasConstraintName("tbl_mst_module_cust_field_role_mapper_fk");

                    b.Navigation("FieldU");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstOrg", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedBy")
                        .WithMany("TblMstOrgCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("tbl_mst_org_fk_created_by");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedBy")
                        .WithMany("TblMstOrgModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("tbl_mst_org_fk_modified_by");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstOrgModuleMap", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedByNavigation")
                        .WithMany("TblMstOrgModuleMapCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("tbl_mst_org_module_map_fk_created_by");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedByNavigation")
                        .WithMany("TblMstOrgModuleMapModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("tbl_mst_org_module_map_fk_modified_by");

                    b.HasOne("aditaas_v5.Models.TblMstModule", "Module")
                        .WithMany("TblMstOrgModuleMap")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("tbl_mst_org_module_map_fk_module_id");

                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblMstOrgModuleMap")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_mst_org_module_map_fk_org_id");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("Module");

                    b.Navigation("Org");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstOrgQueueMap", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblMstOrgQueueMap")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_mst_org_queue_map_fk_org_id");

                    b.HasOne("aditaas_v5.Models.TblMstQueue", "Queue")
                        .WithMany("TblMstOrgQueueMap")
                        .HasForeignKey("QueueId")
                        .HasConstraintName("tbl_mst_org_queue_map_fk_queue_id");

                    b.Navigation("Org");

                    b.Navigation("Queue");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstOrgSiteMap", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblMstOrgSiteMap")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_mst_org_site_map_fk_org_id");

                    b.HasOne("aditaas_v5.Models.TblMstSite", "Site")
                        .WithMany("TblMstOrgSiteMap")
                        .HasForeignKey("SiteId")
                        .HasConstraintName("tbl_mst_org_site_map_fk_site_id");

                    b.Navigation("Org");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstQueue", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedByNavigation")
                        .WithMany("TblMstQueueCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("tbl_mst_queue_fk_created_by");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedByNavigation")
                        .WithMany("TblMstQueueModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("tbl_mst_queue_fk_modified_by");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstRole", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedByNavigation")
                        .WithMany("TblMstRoleCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("tbl_mst_role_fk_created_by");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedByNavigation")
                        .WithMany("TblMstRoleModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("tbl_mst_role_fk_modified_by");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstRoleAccessRight", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstRole", "Role")
                        .WithMany("TblMstRoleAccessRight")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("tbl_conf_access_right_fk_role_id");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstSite", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedByNavigation")
                        .WithMany("TblMstSiteCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("tbl_mst_site_fk_created_by");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedByNavigation")
                        .WithMany("TblMstSiteModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("tbl_mst_site_fk_modified_by");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstSlaColor", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblMstSlaColor")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_mst_sla_color_fk_org_id");

                    b.Navigation("Org");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstSubModule", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedByNavigation")
                        .WithMany("TblMstSubModuleCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("tbl_mst_sub_module_fk_created_by");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedByNavigation")
                        .WithMany("TblMstSubModuleModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("tbl_mst_sub_module_fk_modified_by");

                    b.HasOne("aditaas_v5.Models.TblMstModule", "Module")
                        .WithMany("TblMstSubModule")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("tbl_mst_sub_module_fk_module_id");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUser", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstSite", "Site")
                        .WithMany("TblMstUser")
                        .HasForeignKey("SiteId")
                        .HasConstraintName("tbl_mst_user_fk_site_id");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUserOrgMap", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedByNavigation")
                        .WithMany("TblMstUserOrgMapCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("tbl_mst_user_org_map_fk_created_by");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedByNavigation")
                        .WithMany("TblMstUserOrgMapModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("tbl_mst_user_org_map_fk_modified_by");

                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblMstUserOrgMap")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_mst_user_org_map_fk_org_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "User")
                        .WithMany("TblMstUserOrgMapUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("tbl_mst_user_org_map_fk_user_id");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("Org");

                    b.Navigation("User");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUserProfile", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedByNavigation")
                        .WithMany("TblMstUserProfileCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("tbl_mst_user_profile_fk_created_by");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedByNavigation")
                        .WithMany("TblMstUserProfileModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("tbl_mst_user_profile_fk_modified_by");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "User")
                        .WithMany("TblMstUserProfileUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("tbl_mst_user_profile_fk_user_id");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUserQueueMap", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstQueue", "Queue")
                        .WithMany("TblMstUserQueueMap")
                        .HasForeignKey("QueueId")
                        .HasConstraintName("tbl_mst_user_queue_map_queue_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "User")
                        .WithMany("TblMstUserQueueMap")
                        .HasForeignKey("UserId")
                        .HasConstraintName("tbl_mst_user_queue_map_fk_user_id");

                    b.Navigation("Queue");

                    b.Navigation("User");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUserRoleMap", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstRole", "Role")
                        .WithMany("TblMstUserRoleMap")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("tbl_mst_user_role_map_fk_role_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "User")
                        .WithMany("TblMstUserRoleMap")
                        .HasForeignKey("UserId")
                        .HasConstraintName("tbl_mst_user_role_map_fk_user_id");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstWkWorkHr", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstWorkHr", "WorkHr")
                        .WithMany("TblMstWkWorkHr")
                        .HasForeignKey("WorkHrId")
                        .HasConstraintName("tbl_mst_wk_work_hr_fk_work_hr_id");

                    b.Navigation("WorkHr");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstWorkHr", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblMstWorkHr")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_mst_work_hr_fk_org_id");

                    b.Navigation("Org");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblSurveyMstForm", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstAttachment", "Attachment")
                        .WithMany("TblSurveyMstForm")
                        .HasForeignKey("AttachmentId")
                        .HasConstraintName("FK_ATTACHMENT_ID");

                    b.Navigation("Attachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblSurveyMstFormQuestion", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblSurveyMstForm", "SurveyForm")
                        .WithMany("TblSurveyMstFormQuestion")
                        .HasForeignKey("SurveyFormId")
                        .HasConstraintName("FK_SURVEY_FORM_ID");

                    b.Navigation("SurveyForm");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblSurveyMstFormQuestionDetail", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblSurveyMstFormQuestion", "Question")
                        .WithMany("TblSurveyMstFormQuestionDetail")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK_QUESTION_ID");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnApproval", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstQueue", "ApprQueue")
                        .WithMany("TblTrnApproval")
                        .HasForeignKey("ApprQueueId")
                        .HasConstraintName("tbl_trn_approval_fk_appr_queue_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "Approver")
                        .WithMany("TblTrnApprovalApprover")
                        .HasForeignKey("ApproverId")
                        .HasConstraintName("tbl_trn_approval_fk_approver_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedBy")
                        .WithMany("TblTrnApprovalCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("tbl_trn_approval_fk_created_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedBy")
                        .WithMany("TblTrnApprovalModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("tbl_trn_approval_fk_modified_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstModule", "Module")
                        .WithMany("TblTrnApproval")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("tbl_trn_approval_fk_module_id");

                    b.Navigation("Approver");

                    b.Navigation("ApprQueue");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnCatalogOrder", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblCnfCatalogResourceDtls", "CatalogResourceDtls")
                        .WithMany("TblTrnCatalogOrder")
                        .HasForeignKey("CatalogResourceDtlsId")
                        .HasConstraintName("tbl_trn_catalog_order_fk_catalog_resource_dtls_id");

                    b.HasOne("aditaas_v5.Models.TblTrnServiceRequest", "ServiceRequest")
                        .WithMany("TblTrnCatalogOrder")
                        .HasForeignKey("ServiceRequestId")
                        .HasConstraintName("tbl_trn_catalog_order_fk_service_request_id");

                    b.Navigation("CatalogResourceDtls");

                    b.Navigation("ServiceRequest");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnChange", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "AssignTo")
                        .WithMany("TblTrnChangeAssignTo")
                        .HasForeignKey("AssignToId")
                        .HasConstraintName("tbl_trn_change_fk_assign_to_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedBy")
                        .WithMany("TblTrnChangeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("tbl_trn_change_fk_created_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstQueue", "CurrAssignQueue")
                        .WithMany("TblTrnChangeCurrAssignQueue")
                        .HasForeignKey("CurrAssignQueueId")
                        .HasConstraintName("tbl_trn_change_fk_curr_assign_queue_id");

                    b.HasOne("aditaas_v5.Models.TblMstQueue", "FirstAssignQueue")
                        .WithMany("TblTrnChangeFirstAssignQueue")
                        .HasForeignKey("FirstAssignQueueId")
                        .HasConstraintName("tbl_trn_change_fk_first_assign_queue_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedBy")
                        .WithMany("TblTrnChangeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("tbl_trn_change_fk_modified_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblTrnChange")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_trn_change_fk_org_id");

                    b.HasOne("aditaas_v5.Models.TblMstQueue", "PrevAssignQueue")
                        .WithMany("TblTrnChangePrevAssignQueue")
                        .HasForeignKey("PrevAssignQueueId")
                        .HasConstraintName("tbl_trn_change_fk_prev_assign_queue_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "RiskEnt")
                        .WithMany("TblTrnChange")
                        .HasForeignKey("RiskEntId")
                        .HasConstraintName("tbl_trn_change_fk_risk_ent_id");

                    b.Navigation("AssignTo");

                    b.Navigation("CreatedBy");

                    b.Navigation("CurrAssignQueue");

                    b.Navigation("FirstAssignQueue");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Org");

                    b.Navigation("PrevAssignQueue");

                    b.Navigation("RiskEnt");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnCrAttachment", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblTrnChange", "Record")
                        .WithMany("TblTrnCrAttachment")
                        .HasForeignKey("RecordId")
                        .HasConstraintName("tbl_trn_change_attachment_fk_change_id");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnCrDetails", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "AvailabilityEnt")
                        .WithMany("TblTrnCrDetailsAvailabilityEnt")
                        .HasForeignKey("AvailabilityEntId")
                        .HasConstraintName("tbl_trn_change_details_fk_availability_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "BackoutDurationEnt")
                        .WithMany("TblTrnCrDetailsBackoutDurationEnt")
                        .HasForeignKey("BackoutDurationEntId")
                        .HasConstraintName("tbl_trn_change_details_fk_backout_duration_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "BackupTestedEnt")
                        .WithMany("TblTrnCrDetailsBackupTestedEnt")
                        .HasForeignKey("BackupTestedEntId")
                        .HasConstraintName("tbl_trn_change_details_fk_backup_tested_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "FailoverAvailableEnt")
                        .WithMany("TblTrnCrDetailsFailoverAvailableEnt")
                        .HasForeignKey("FailoverAvailableEntId")
                        .HasConstraintName("tbl_trn_change_details_fk_failover_available_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "PreviouslyExecutedEnt")
                        .WithMany("TblTrnCrDetailsPreviouslyExecutedEnt")
                        .HasForeignKey("PreviouslyExecutedEntId")
                        .HasConstraintName("tbl_trn_change_details_fk_previously_executed_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "ThirdPartySupportEnt")
                        .WithMany("TblTrnCrDetailsThirdPartySupportEnt")
                        .HasForeignKey("ThirdPartySupportEntId")
                        .HasConstraintName("tbl_trn_change_details_fk_third_party_support_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "UsersImpactedEnt")
                        .WithMany("TblTrnCrDetailsUsersImpactedEnt")
                        .HasForeignKey("UsersImpactedEntId")
                        .HasConstraintName("tbl_trn_change_details_fk_users_impacted_ent_id");

                    b.Navigation("AvailabilityEnt");

                    b.Navigation("BackoutDurationEnt");

                    b.Navigation("BackupTestedEnt");

                    b.Navigation("FailoverAvailableEnt");

                    b.Navigation("PreviouslyExecutedEnt");

                    b.Navigation("ThirdPartySupportEnt");

                    b.Navigation("UsersImpactedEnt");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFreefrmVisboradAssignto", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "AddlAssignTo")
                        .WithMany("TblTrnFreefrmVisboradAssignto")
                        .HasForeignKey("AddlAssignToId")
                        .HasConstraintName("tbl_trn_freefrm_visborad_assignto_fk_addl_assign_to_id");

                    b.HasOne("aditaas_v5.Models.TblTrnFreefrmVisboradCard", "FreefrmVisboradCard")
                        .WithMany("TblTrnFreefrmVisboradAssignto")
                        .HasForeignKey("FreefrmVisboradCardId")
                        .HasConstraintName("tbl_trn_freefrm_visborad_assignto_fk_freefrm_visborad_card_id");

                    b.Navigation("AddlAssignTo");

                    b.Navigation("FreefrmVisboradCard");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFreefrmVisboradAttach", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblTrnFreefrmVisboradCard", "FreefrmVisboradCard")
                        .WithMany("TblTrnFreefrmVisboradAttach")
                        .HasForeignKey("FreefrmVisboradCardId")
                        .HasConstraintName("tbl_trn_freefrm_visborad_attach_fk_freefrm_visborad_card_id");

                    b.Navigation("FreefrmVisboradCard");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFreefrmVisboradCard", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "AssignTo")
                        .WithMany("TblTrnFreefrmVisboradCardAssignTo")
                        .HasForeignKey("AssignToId")
                        .HasConstraintName("tbl_trn_freefrm_visborad_card_fk_assign_to_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedBy")
                        .WithMany("TblTrnFreefrmVisboradCardCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("tbl_trn_freefrm_visborad_card_fk_created_by_id");

                    b.HasOne("aditaas_v5.Models.TblCnfFreefrmVisboradLane", "FreefrmVisboradCard")
                        .WithOne("TblTrnFreefrmVisboradCard")
                        .HasForeignKey("aditaas_v5.Models.TblTrnFreefrmVisboradCard", "FreefrmVisboradCardId")
                        .HasConstraintName("tbl_trn_freefrm_visborad_card_fk_visborad_lane_id")
                        .IsRequired();

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedBy")
                        .WithMany("TblTrnFreefrmVisboradCardModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("tbl_trn_freefrm_visborad_card_fk_modified_by_id");

                    b.Navigation("AssignTo");

                    b.Navigation("CreatedBy");

                    b.Navigation("FreefrmVisboradCard");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFreefrmVisboradChklist", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblTrnFreefrmVisboradCard", "FreefrmVisboradCard")
                        .WithMany("TblTrnFreefrmVisboradChklist")
                        .HasForeignKey("FreefrmVisboradCardId")
                        .HasConstraintName("tbl_trn_freefrm_visborad_chklist_fk_freefrm_visborad_card_id");

                    b.Navigation("FreefrmVisboradCard");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFreefrmVisboradLabel", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblTrnFreefrmVisboradCard", "FreefrmVisboradCard")
                        .WithMany("TblTrnFreefrmVisboradLabel")
                        .HasForeignKey("FreefrmVisboradCardId")
                        .HasConstraintName("tbl_trn_freefrm_visborad_label_fk_freefrm_visborad_card_id");

                    b.Navigation("FreefrmVisboradCard");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFreefrmVisboradNote", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblTrnFreefrmVisboradCard", "FreefrmVisboradCard")
                        .WithMany("TblTrnFreefrmVisboradNote")
                        .HasForeignKey("FreefrmVisboradCardId")
                        .HasConstraintName("tbl_trn_freefrm_visborad_note_fk_freefrm_visborad_card_id");

                    b.Navigation("FreefrmVisboradCard");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnImpactedci", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblTrnImpactedci")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_trn_problem_impactedci_fk_org_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "Owner")
                        .WithMany("TblTrnImpactedci")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("tbl_trn_problem_impactedci_fk_owner_id");

                    b.Navigation("Org");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnIncident", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstSite", "AltLocation")
                        .WithMany("TblTrnIncidentAltLocation")
                        .HasForeignKey("AltLocationId")
                        .HasConstraintName("tbl_trn_incident_fk_alt_location_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "AssignTo")
                        .WithMany("TblTrnIncidentAssignTo")
                        .HasForeignKey("AssignToId")
                        .HasConstraintName("tbl_trn_incident_fk_assign_to_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "CausedByEnt")
                        .WithMany("TblTrnIncidentCausedByEnt")
                        .HasForeignKey("CausedByEntId")
                        .HasConstraintName("tbl_trn_incident_fk_caused_by_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "ChannelEnt")
                        .WithMany("TblTrnIncidentChannelEnt")
                        .HasForeignKey("ChannelEntId")
                        .HasConstraintName("tbl_trn_incident_fk_channel_int_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedBy")
                        .WithMany("TblTrnIncidentCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("tbl_trn_incident_fk_created_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstSite", "Location")
                        .WithMany("TblTrnIncidentLocation")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("tbl_trn_incident_fk_location_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedBy")
                        .WithMany("TblTrnIncidentModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("tbl_trn_incident_fk_modified_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "NefcrDescEnt")
                        .WithMany("TblTrnIncidentNefcrDescEnt")
                        .HasForeignKey("NefcrDescEntId")
                        .HasConstraintName("tbl_trn_incident_fk_nefcr_desc_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "OnBehalfOf")
                        .WithMany("TblTrnIncidentOnBehalfOf")
                        .HasForeignKey("OnBehalfOfId")
                        .HasConstraintName("tbl_trn_incident_fk_on_behalf_of_id");

                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblTrnIncident")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_trn_incident_fk_org_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "ResolutionCriteriaEnt")
                        .WithMany("TblTrnIncidentResolutionCriteriaEnt")
                        .HasForeignKey("ResolutionCriteriaEntId")
                        .HasConstraintName("tbl_trn_incident_fk_resolution_criteria_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "ResolutionMethodEnt")
                        .WithMany("TblTrnIncidentResolutionMethodEnt")
                        .HasForeignKey("ResolutionMethodEntId")
                        .HasConstraintName("tbl_trn_incident_fk_resolution_method_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ResolvedBy")
                        .WithMany("TblTrnIncidentResolvedBy")
                        .HasForeignKey("ResolvedById")
                        .HasConstraintName("tbl_trn_incident_fk_resolved_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "SeverityEnt")
                        .WithMany("TblTrnIncidentSeverityEnt")
                        .HasForeignKey("SeverityEntId")
                        .HasConstraintName("tbl_trn_incident_fk_severity_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "User")
                        .WithMany("TblTrnIncidentUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("tbl_trn_incident_fk_user_id");

                    b.Navigation("AltLocation");

                    b.Navigation("AssignTo");

                    b.Navigation("CausedByEnt");

                    b.Navigation("ChannelEnt");

                    b.Navigation("CreatedBy");

                    b.Navigation("Location");

                    b.Navigation("ModifiedBy");

                    b.Navigation("NefcrDescEnt");

                    b.Navigation("OnBehalfOf");

                    b.Navigation("Org");

                    b.Navigation("ResolutionCriteriaEnt");

                    b.Navigation("ResolutionMethodEnt");

                    b.Navigation("ResolvedBy");

                    b.Navigation("SeverityEnt");

                    b.Navigation("User");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnKb", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "AssignTo")
                        .WithMany("TblTrnKbAssignTo")
                        .HasForeignKey("AssignToId")
                        .HasConstraintName("tbl_trn_kb_fk_assign_to_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedBy")
                        .WithMany("TblTrnKbCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("tbl_trn_kb_fk_created_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "KbTypeEnt")
                        .WithMany("TblTrnKbKbTypeEnt")
                        .HasForeignKey("KbTypeEntId")
                        .HasConstraintName("tbl_trn_kb_fk_kb_type_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedBy")
                        .WithMany("TblTrnKbModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("tbl_trn_kb_fk_modified_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblTrnKb")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_trn_kb_fk_org_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "SourceEnt")
                        .WithMany("TblTrnKbSourceEnt")
                        .HasForeignKey("SourceEntId")
                        .HasConstraintName("tbl_trn_kb_fk_source_ent_id");

                    b.Navigation("AssignTo");

                    b.Navigation("CreatedBy");

                    b.Navigation("KbTypeEnt");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Org");

                    b.Navigation("SourceEnt");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnKbComment", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedBy")
                        .WithMany("TblTrnKbComment")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("tbl_trn_kb_comment_fk_created_by_id");

                    b.HasOne("aditaas_v5.Models.TblTrnKb", "Kb")
                        .WithMany("TblTrnKbComment")
                        .HasForeignKey("KbId")
                        .HasConstraintName("tbl_trn_kb_comment_fk_kb_id");

                    b.Navigation("CreatedBy");

                    b.Navigation("Kb");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnPrAttachment", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblTrnProblem", "Record")
                        .WithMany("TblTrnPrAttachment")
                        .HasForeignKey("RecordId")
                        .HasConstraintName("tbl_trn_problem_attachment_fk_prolem_id");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnProblem", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "AssignTo")
                        .WithMany("TblTrnProblemAssignTo")
                        .HasForeignKey("AssignToId")
                        .HasConstraintName("tbl_trn_problem_fk_assign_to_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedBy")
                        .WithMany("TblTrnProblemCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("tbl_trn_problem_fk_created_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstQueue", "CurrAssignQueue")
                        .WithMany("TblTrnProblemCurrAssignQueue")
                        .HasForeignKey("CurrAssignQueueId")
                        .HasConstraintName("tbl_trn_problem_fk_curr_assign_queue_id");

                    b.HasOne("aditaas_v5.Models.TblMstQueue", "FirstAssignQueue")
                        .WithMany("TblTrnProblemFirstAssignQueue")
                        .HasForeignKey("FirstAssignQueueId")
                        .HasConstraintName("tbl_trn_problem_fk_first_assign_queue_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "KnownerrSrcEnt")
                        .WithMany("TblTrnProblemKnownerrSrcEnt")
                        .HasForeignKey("KnownerrSrcEntId")
                        .HasConstraintName("tbl_trn_problem_fk_knownerr_src_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedBy")
                        .WithMany("TblTrnProblemModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("tbl_trn_problem_fk_modified_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblTrnProblem")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_trn_problem_fk_org_id");

                    b.HasOne("aditaas_v5.Models.TblMstQueue", "PrevAssignQueue")
                        .WithMany("TblTrnProblemPrevAssignQueue")
                        .HasForeignKey("PrevAssignQueueId")
                        .HasConstraintName("tbl_trn_problem_fk_prev_assign_queue_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "SymptomCodeEnt")
                        .WithMany("TblTrnProblemSymptomCodeEnt")
                        .HasForeignKey("SymptomCodeEntId")
                        .HasConstraintName("tbl_trn_problem_fk_symptom_code_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "User")
                        .WithMany("TblTrnProblemUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("tbl_trn_problem_fk_user_id");

                    b.Navigation("AssignTo");

                    b.Navigation("CreatedBy");

                    b.Navigation("CurrAssignQueue");

                    b.Navigation("FirstAssignQueue");

                    b.Navigation("KnownerrSrcEnt");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Org");

                    b.Navigation("PrevAssignQueue");

                    b.Navigation("SymptomCodeEnt");

                    b.Navigation("User");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnServiceRequest", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstSite", "AltLocation")
                        .WithMany("TblTrnServiceRequestAltLocation")
                        .HasForeignKey("AltLocationId")
                        .HasConstraintName("tbl_trn_service_request_fk_alt_location_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "AssignTo")
                        .WithMany("TblTrnServiceRequestAssignTo")
                        .HasForeignKey("AssignToId")
                        .HasConstraintName("tbl_trn_service_request_fk_assign_to_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "ChannelEnt")
                        .WithMany("TblTrnServiceRequestChannelEnt")
                        .HasForeignKey("ChannelEntId")
                        .HasConstraintName("tbl_trn_service_request_fk_channel_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedBy")
                        .WithMany("TblTrnServiceRequestCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("tbl_trn_service_request_fk_created_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstQueue", "FirstAssignQueue")
                        .WithMany("TblTrnServiceRequestFirstAssignQueue")
                        .HasForeignKey("FirstAssignQueueId")
                        .HasConstraintName("tbl_trn_service_request_fk_first_assign_queue_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "FulfillmentMethodEnt")
                        .WithMany("TblTrnServiceRequestFulfillmentMethodEnt")
                        .HasForeignKey("FulfillmentMethodEntId")
                        .HasConstraintName("tbl_trn_service_request_fk_fulfillment_method_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstSite", "Location")
                        .WithMany("TblTrnServiceRequestLocation")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("tbl_trn_service_request_fk_location_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedBy")
                        .WithMany("TblTrnServiceRequestModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("tbl_trn_service_request_fk_modified_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblTrnServiceRequest")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_trn_service_request_fk_org_id");

                    b.HasOne("aditaas_v5.Models.TblMstQueue", "PrevAssignQueue")
                        .WithMany("TblTrnServiceRequestPrevAssignQueue")
                        .HasForeignKey("PrevAssignQueueId")
                        .HasConstraintName("tbl_trn_service_request_fk_prev_assign_queue_id");

                    b.HasOne("aditaas_v5.Models.TblMstEntityAttr", "SeverityEnt")
                        .WithMany("TblTrnServiceRequestSeverityEnt")
                        .HasForeignKey("SeverityEntId")
                        .HasConstraintName("tbl_trn_service_request_fk_severity_ent_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "User")
                        .WithMany("TblTrnServiceRequestUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("tbl_trn_service_request_fk_user_id");

                    b.Navigation("AltLocation");

                    b.Navigation("AssignTo");

                    b.Navigation("ChannelEnt");

                    b.Navigation("CreatedBy");

                    b.Navigation("FirstAssignQueue");

                    b.Navigation("FulfillmentMethodEnt");

                    b.Navigation("Location");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Org");

                    b.Navigation("PrevAssignQueue");

                    b.Navigation("SeverityEnt");

                    b.Navigation("User");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTask", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstUser", "AssignTo")
                        .WithMany("TblTrnTaskAssignTo")
                        .HasForeignKey("AssignToId")
                        .HasConstraintName("assign_to_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ClosedBy")
                        .WithMany("TblTrnTaskClosedBy")
                        .HasForeignKey("ClosedById")
                        .HasConstraintName("tbl_trn_task_fk_closed_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "CreatedBy")
                        .WithMany("TblTrnTaskCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("tbl_trn_task_fk_created_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "ModifiedBy")
                        .WithMany("TblTrnTaskModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("tbl_trn_task_fk_modified_by_id");

                    b.HasOne("aditaas_v5.Models.TblMstModule", "Module")
                        .WithMany("TblTrnTask")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("tbl_trn_task_fk_module_id");

                    b.HasOne("aditaas_v5.Models.TblMstOrg", "Org")
                        .WithMany("TblTrnTask")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("tbl_trn_task_fk_org_id");

                    b.HasOne("aditaas_v5.Models.TblMstQueue", "Queue")
                        .WithMany("TblTrnTask")
                        .HasForeignKey("QueueId")
                        .HasConstraintName("tbl_trn_task_fk_queue_id");

                    b.HasOne("aditaas_v5.Models.TblMstUser", "User")
                        .WithMany("TblTrnTaskUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("tbl_trn_task_fk_user_id");

                    b.Navigation("AssignTo");

                    b.Navigation("ClosedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Module");

                    b.Navigation("Org");

                    b.Navigation("Queue");

                    b.Navigation("User");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTicketCustFieldDetail", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblMstModuleCustField", "FieldU")
                        .WithMany("TblTrnTicketCustFieldDetail")
                        .HasForeignKey("FieldUid")
                        .HasConstraintName("tbl_trn_ticket_cust_field_detail_fk");

                    b.Navigation("FieldU");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTicketSurveyQuestion", b =>
                {
                    b.HasOne("aditaas_v5.Models.TblTrnTicketSurvey", "Survey")
                        .WithMany("TblTrnTicketSurveyQuestion")
                        .HasForeignKey("SurveyId")
                        .HasConstraintName("FK_SURVEY_ID");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstDiscovery", b =>
                {
                    b.Navigation("TblAutodiscMstDiscoveryIpAddress");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscMstDiscoveryRule", b =>
                {
                    b.Navigation("TblAutodiscMstDiscoveryRuleAction");

                    b.Navigation("TblAutodiscMstDiscoveryRuleCondition");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblAutodiscTrnDiscovery", b =>
                {
                    b.Navigation("TblAutodiscTrnDiscoveryDetail");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfAdLdap", b =>
                {
                    b.Navigation("TblCnfAdLdapFieldMap");

                    b.Navigation("TblCnfAdSchedule");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfBusField", b =>
                {
                    b.Navigation("TblCnfBusRuleCond");

                    b.Navigation("TblCnfDataArchiveCond");

                    b.Navigation("TblCnfDatadriveVisboradSwimFormField");

                    b.Navigation("TblCnfDatadriveVisboradVertlaneFormField");

                    b.Navigation("TblCnfSlaCond");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfBusRule", b =>
                {
                    b.Navigation("TblCnfBusRuleAction");

                    b.Navigation("TblCnfBusRuleCond");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfCatalogQuestion", b =>
                {
                    b.Navigation("TblCnfCatalogQuestionDtls");

                    b.Navigation("TblCnfCatalogResource");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfCatalogResource", b =>
                {
                    b.Navigation("TblCnfCatalogResourceDtls");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfCatalogResourceDtls", b =>
                {
                    b.Navigation("TblTrnCatalogOrder");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfDataArchive", b =>
                {
                    b.Navigation("TblCnfDataArchiveCond");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfEmailMgr", b =>
                {
                    b.Navigation("TblCnfEmailMgrExtractField");

                    b.Navigation("TblCnfEmailMgrRule");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfEmailTemplate", b =>
                {
                    b.Navigation("TblCnfNotifyRule");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfFreefrmVisborad", b =>
                {
                    b.Navigation("TblCnfFreefrmVisboradLane");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfFreefrmVisboradLane", b =>
                {
                    b.Navigation("TblTrnFreefrmVisboradCard");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblCnfSla", b =>
                {
                    b.Navigation("TblCnfSlaAction");

                    b.Navigation("TblCnfSlaCond");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstAdminModule", b =>
                {
                    b.Navigation("TblMstAdminActivityLog");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstAttachment", b =>
                {
                    b.Navigation("TblSurveyMstForm");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstDbView", b =>
                {
                    b.Navigation("TblMstDbViewColumn");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstEntity", b =>
                {
                    b.Navigation("TblMstEntityAttr");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstEntityAttr", b =>
                {
                    b.Navigation("TblTrnChange");

                    b.Navigation("TblTrnCrDetailsAvailabilityEnt");

                    b.Navigation("TblTrnCrDetailsBackoutDurationEnt");

                    b.Navigation("TblTrnCrDetailsBackupTestedEnt");

                    b.Navigation("TblTrnCrDetailsFailoverAvailableEnt");

                    b.Navigation("TblTrnCrDetailsPreviouslyExecutedEnt");

                    b.Navigation("TblTrnCrDetailsThirdPartySupportEnt");

                    b.Navigation("TblTrnCrDetailsUsersImpactedEnt");

                    b.Navigation("TblTrnIncidentCausedByEnt");

                    b.Navigation("TblTrnIncidentChannelEnt");

                    b.Navigation("TblTrnIncidentNefcrDescEnt");

                    b.Navigation("TblTrnIncidentResolutionCriteriaEnt");

                    b.Navigation("TblTrnIncidentResolutionMethodEnt");

                    b.Navigation("TblTrnIncidentSeverityEnt");

                    b.Navigation("TblTrnKbKbTypeEnt");

                    b.Navigation("TblTrnKbSourceEnt");

                    b.Navigation("TblTrnProblemKnownerrSrcEnt");

                    b.Navigation("TblTrnProblemSymptomCodeEnt");

                    b.Navigation("TblTrnServiceRequestChannelEnt");

                    b.Navigation("TblTrnServiceRequestFulfillmentMethodEnt");

                    b.Navigation("TblTrnServiceRequestSeverityEnt");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstModule", b =>
                {
                    b.Navigation("TblCnfBusRule");

                    b.Navigation("TblCnfNotifyRule");

                    b.Navigation("TblCnfSla");

                    b.Navigation("TblCnfTemplateQueueMap");

                    b.Navigation("TblMstOrgModuleMap");

                    b.Navigation("TblMstSubModule");

                    b.Navigation("TblTrnApproval");

                    b.Navigation("TblTrnTask");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstModuleCustField", b =>
                {
                    b.Navigation("TblMstModuleCustFieldRoleMapper");

                    b.Navigation("TblTrnTicketCustFieldDetail");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstOrg", b =>
                {
                    b.Navigation("TblCnfAdLdap");

                    b.Navigation("TblCnfBusRule");

                    b.Navigation("TblCnfCatalogCat");

                    b.Navigation("TblCnfEmailMgr");

                    b.Navigation("TblCnfFreefrmVisborad");

                    b.Navigation("TblCnfMailOutgoing");

                    b.Navigation("TblCnfSla");

                    b.Navigation("TblMstDepartment");

                    b.Navigation("TblMstHoliday");

                    b.Navigation("TblMstOrgModuleMap");

                    b.Navigation("TblMstOrgQueueMap");

                    b.Navigation("TblMstOrgSiteMap");

                    b.Navigation("TblMstSlaColor");

                    b.Navigation("TblMstUserOrgMap");

                    b.Navigation("TblMstWorkHr");

                    b.Navigation("TblTrnChange");

                    b.Navigation("TblTrnImpactedci");

                    b.Navigation("TblTrnIncident");

                    b.Navigation("TblTrnKb");

                    b.Navigation("TblTrnProblem");

                    b.Navigation("TblTrnServiceRequest");

                    b.Navigation("TblTrnTask");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstQueue", b =>
                {
                    b.Navigation("TblCnfTemplateQueueMap");

                    b.Navigation("TblMstOrgQueueMap");

                    b.Navigation("TblMstUserQueueMap");

                    b.Navigation("TblTrnApproval");

                    b.Navigation("TblTrnChangeCurrAssignQueue");

                    b.Navigation("TblTrnChangeFirstAssignQueue");

                    b.Navigation("TblTrnChangePrevAssignQueue");

                    b.Navigation("TblTrnProblemCurrAssignQueue");

                    b.Navigation("TblTrnProblemFirstAssignQueue");

                    b.Navigation("TblTrnProblemPrevAssignQueue");

                    b.Navigation("TblTrnServiceRequestFirstAssignQueue");

                    b.Navigation("TblTrnServiceRequestPrevAssignQueue");

                    b.Navigation("TblTrnTask");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstRole", b =>
                {
                    b.Navigation("TblMstRoleAccessRight");

                    b.Navigation("TblMstUserRoleMap");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstSite", b =>
                {
                    b.Navigation("TblMstHoliday");

                    b.Navigation("TblMstOrgSiteMap");

                    b.Navigation("TblMstUser");

                    b.Navigation("TblTrnIncidentAltLocation");

                    b.Navigation("TblTrnIncidentLocation");

                    b.Navigation("TblTrnServiceRequestAltLocation");

                    b.Navigation("TblTrnServiceRequestLocation");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstUser", b =>
                {
                    b.Navigation("TblCnfDatadriveVisboradCreatedBy");

                    b.Navigation("TblCnfDatadriveVisboradModifiedBy");

                    b.Navigation("TblCnfEmailMgrCreatedBy");

                    b.Navigation("TblCnfEmailMgrModifiedBy");

                    b.Navigation("TblCnfMailOutgoingCreatedByNavigation");

                    b.Navigation("TblCnfMailOutgoingModifiedByNavigation");

                    b.Navigation("TblMstDepartmentApproverUser");

                    b.Navigation("TblMstDepartmentHeadUser");

                    b.Navigation("TblMstDepartmentInchargeUser");

                    b.Navigation("TblMstModuleCreatedBy");

                    b.Navigation("TblMstModuleModifiedBy");

                    b.Navigation("TblMstOrgCreatedBy");

                    b.Navigation("TblMstOrgModifiedBy");

                    b.Navigation("TblMstOrgModuleMapCreatedByNavigation");

                    b.Navigation("TblMstOrgModuleMapModifiedByNavigation");

                    b.Navigation("TblMstQueueCreatedByNavigation");

                    b.Navigation("TblMstQueueModifiedByNavigation");

                    b.Navigation("TblMstRoleCreatedByNavigation");

                    b.Navigation("TblMstRoleModifiedByNavigation");

                    b.Navigation("TblMstSiteCreatedByNavigation");

                    b.Navigation("TblMstSiteModifiedByNavigation");

                    b.Navigation("TblMstSubModuleCreatedByNavigation");

                    b.Navigation("TblMstSubModuleModifiedByNavigation");

                    b.Navigation("TblMstUserOrgMapCreatedByNavigation");

                    b.Navigation("TblMstUserOrgMapModifiedByNavigation");

                    b.Navigation("TblMstUserOrgMapUser");

                    b.Navigation("TblMstUserProfileCreatedByNavigation");

                    b.Navigation("TblMstUserProfileModifiedByNavigation");

                    b.Navigation("TblMstUserProfileUser");

                    b.Navigation("TblMstUserQueueMap");

                    b.Navigation("TblMstUserRoleMap");

                    b.Navigation("TblTrnApprovalApprover");

                    b.Navigation("TblTrnApprovalCreatedBy");

                    b.Navigation("TblTrnApprovalModifiedBy");

                    b.Navigation("TblTrnChangeAssignTo");

                    b.Navigation("TblTrnChangeCreatedBy");

                    b.Navigation("TblTrnChangeModifiedBy");

                    b.Navigation("TblTrnFreefrmVisboradAssignto");

                    b.Navigation("TblTrnFreefrmVisboradCardAssignTo");

                    b.Navigation("TblTrnFreefrmVisboradCardCreatedBy");

                    b.Navigation("TblTrnFreefrmVisboradCardModifiedBy");

                    b.Navigation("TblTrnImpactedci");

                    b.Navigation("TblTrnIncidentAssignTo");

                    b.Navigation("TblTrnIncidentCreatedBy");

                    b.Navigation("TblTrnIncidentModifiedBy");

                    b.Navigation("TblTrnIncidentOnBehalfOf");

                    b.Navigation("TblTrnIncidentResolvedBy");

                    b.Navigation("TblTrnIncidentUser");

                    b.Navigation("TblTrnKbAssignTo");

                    b.Navigation("TblTrnKbComment");

                    b.Navigation("TblTrnKbCreatedBy");

                    b.Navigation("TblTrnKbModifiedBy");

                    b.Navigation("TblTrnProblemAssignTo");

                    b.Navigation("TblTrnProblemCreatedBy");

                    b.Navigation("TblTrnProblemModifiedBy");

                    b.Navigation("TblTrnProblemUser");

                    b.Navigation("TblTrnServiceRequestAssignTo");

                    b.Navigation("TblTrnServiceRequestCreatedBy");

                    b.Navigation("TblTrnServiceRequestModifiedBy");

                    b.Navigation("TblTrnServiceRequestUser");

                    b.Navigation("TblTrnTaskAssignTo");

                    b.Navigation("TblTrnTaskClosedBy");

                    b.Navigation("TblTrnTaskCreatedBy");

                    b.Navigation("TblTrnTaskModifiedBy");

                    b.Navigation("TblTrnTaskUser");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblMstWorkHr", b =>
                {
                    b.Navigation("TblMstWkWorkHr");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblSurveyMstForm", b =>
                {
                    b.Navigation("TblSurveyMstFormQuestion");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblSurveyMstFormQuestion", b =>
                {
                    b.Navigation("TblSurveyMstFormQuestionDetail");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnChange", b =>
                {
                    b.Navigation("TblTrnCrAttachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnFreefrmVisboradCard", b =>
                {
                    b.Navigation("TblTrnFreefrmVisboradAssignto");

                    b.Navigation("TblTrnFreefrmVisboradAttach");

                    b.Navigation("TblTrnFreefrmVisboradChklist");

                    b.Navigation("TblTrnFreefrmVisboradLabel");

                    b.Navigation("TblTrnFreefrmVisboradNote");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnKb", b =>
                {
                    b.Navigation("TblTrnKbComment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnProblem", b =>
                {
                    b.Navigation("TblTrnPrAttachment");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnServiceRequest", b =>
                {
                    b.Navigation("TblTrnCatalogOrder");
                });

            modelBuilder.Entity("aditaas_v5.Models.TblTrnTicketSurvey", b =>
                {
                    b.Navigation("TblTrnTicketSurveyQuestion");
                });
#pragma warning restore 612, 618
        }
    }
}
